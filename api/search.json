[{"id":"387d709d3dc4267a87491248751c16da","title":"荣誉证书","content":"个人简介荣誉证书1. 中国大学生计算机设计大赛国家二等奖\n2. 第三届全国大学生大数据技能竞赛三等奖\n3.大学生创新创业项目省级奖项\n","slug":"今天","date":"2023-09-09T04:17:53.000Z","categories_index":"","tags_index":"","author_index":"verfotta"},{"id":"c95837ea60b817923921324b8a9c4375","title":"文章标题2","content":"第二模块 函数&amp;模块从今天开始，我们将进入系列课程第二模块的的学习。\n第一模块主要是学习python基础知识，从第二模块开始就可以通过程序去解决工作中实际的问题。\n\n从今天开始，我们将进入第二模块的学习，此模块主要包含两大部分：\n\n函数，一个用于专门实现某个功能的代码块（可重用）。\n\n内置函数\nlen、bin、oct、hex 等\n\n自定义函数\ndef send_email():\n    # 写了10行代码，实现了发送邮件。\n    pass\n\nsend_email()\n\n# 定义了一个函数，功能代码块\ndef send_email():\n    # 写了10行代码，实现了发送邮件。\n    pass\n\ngoods &#x3D; [\n    &#123;&quot;name&quot;: &quot;电脑&quot;, &quot;price&quot;: 1999&#125;,\n    &#123;&quot;name&quot;: &quot;鼠标&quot;, &quot;price&quot;: 10&#125;,\n    &#123;&quot;name&quot;: &quot;游艇&quot;, &quot;price&quot;: 20&#125;,\n    &#123;&quot;name&quot;: &quot;美女&quot;, &quot;price&quot;: 998&#125;\n]\nfor index in range(len(goods)):\n    item &#x3D; goods[index]\n    print(index + 1, item[&#39;name&#39;], item[&#39;price&#39;])\n\n# 调用并执行函数\nsend_email()\n\nwhile True:\n    num &#x3D; input(&quot;请输入要选择的商品序号(Q&#x2F;q)：&quot;)  # &quot;1&quot;\n    if num.upper() &#x3D;&#x3D; &quot;Q&quot;:\n        break\n    if not num.isdecimal():\n        print(&quot;用输入的格式错误&quot;)\n        break\n    num &#x3D; int(num)\n    send_email()\n    if num &gt; 4 or num &lt; 0:\n        print(&quot;范围选择错误&quot;)\n        break\n    target_index &#x3D; num - 1\n    choice_item &#x3D; goods[target_index]\n    print(choice_item[&quot;name&quot;], choice_item[&#39;price&#39;])\n    send_email()\n\n\n模块，集成了很多功能的函数集合。\n\n内置模块，Python内部帮助我们提供好的。\nimport random\n\nnum &#x3D; random.randint(0,19)\n\nimport decimal\n\nv1 &#x3D; decimal.Decimal(&quot;0.1&quot;)\nv2 &#x3D; decimal.Decimal(&quot;0.2&quot;)\nv3 &#x3D; v1 + v2\nprint(v3) # 0.3\n\n第三方模块，网上下载别人写好的模块（功能集合）。\n\n自定义模块\n\n\n\n\nday09 文件操作相关\n课程目标：掌握基于Python对文件相关操作。\n课程概要：\n\n文件操作\n文件夹和路径\ncsv格式文件\nini格式文件                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                                  \nxml格式文件\nexcel文件\n压缩文件\n\n注意：每种格式包含很多相关操作，大家在学习的过程中只要掌握知识点的用法，参考笔记可以实现相关的练习即可，不必背会（在企业开发过程中也是边搜边实现。\n1. 文件操作在学习文件操作之前，先来回顾一下编码的相关以及先关数据类型的知识。\n\n字符串类型（str），在程序中用于表示文字信息，本质上是unicode编码中的二进制。\nname &#x3D; &quot;武沛齐&quot;\n\n字节类型（bytes）\n\n可表示文字信息，本质上是utf-8&#x2F;gbk等编码的二进制（对unicode进行压缩，方便文件存储和网络传输。）\nname &#x3D; &quot;武沛齐&quot;\ndata &#x3D; name.encode(&#39;utf-8&#39;)\nprint(data) # b&#39;\\xe6\\xad\\xa6\\xe6\\xb2\\x9b\\xe9\\xbd\\x90&#39;\n\nresult &#x3D; data.decode(&#39;utf-8&#39;)\nprint(result) # &quot;武沛齐&quot;\n\n可表示原始二进制（图片、文件等信息）\n\n\n\n\n1.1 读文件\n读文本文件\n# 1.打开文件\n#\t- 路径：\n#\t\t相对路径：&#39;info.txt&#39;\n#\t\t绝对路径：&#39;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;info.txt&#39;\n# \t- 模式\n# \t\trb，表示读取文件原始的二进制（r, 读 read；b, 二进制 binary；）\n# 1.打开文件\nfile_object &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;rb&#39;)\n# 2.读取文件内容，并赋值给data\ndata &#x3D; file_object.read()\n# 3.关闭文件\nfile_object.close()\n\nprint(data) # b&#39;alex-123\\n\\xe6\\xad\\xa6\\xe6\\xb2\\x9b\\xe9\\xbd\\x90-123&#39;\ntext &#x3D; data.decode(&quot;utf-8&quot;)\nprint(text)\n\n# 1.打开文件\nfile_object &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;rt&#39;, encoding&#x3D;&#39;utf-8&#39;)\n\n# 2.读取文件内容，并赋值给data\ndata &#x3D; file_object.read()\n\n# 3.关闭文件\nfile_object.close()\n\nprint(data)\n\n\n\n读图片等非文本内容文件。\nfile_object &#x3D; open(&#39;a1.png&#39;, mode&#x3D;&#39;rb&#39;)\ndata &#x3D; file_object.read()\nfile_object.close()\n\nprint(data) # \\x91\\xf6\\xf2\\x83\\x8aQFfv\\x8b7\\xcc\\xed\\xc3&#125;\\x7fT\\x9d&#123;.3.\\xf1&#123;\\xe8\\...\n\n注意事项：\n\n路径\n\n相对路径，你的程序到底在哪里运行的？\n\n\n\n绝对路径\n# 1.打开文件\nfile_object &#x3D; open(&#39;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;info.txt&#39;, mode&#x3D;&#39;rt&#39;, encoding&#x3D;&#39;utf-8&#39;)\n# 2.读取文件内容，并赋值给data\ndata &#x3D; file_object.read()\n# 3.关闭文件\nfile_object.close()\n\nwindows系统中写绝对路径容易出问题：\n# file_object &#x3D; open(&#39;C:\\\\new\\\\info.txt&#39;, mode&#x3D;&#39;rt&#39;, encoding&#x3D;&#39;utf-8&#39;)\n\nfile_object &#x3D; open(r&#39;C:\\new\\info.txt&#39;, mode&#x3D;&#39;rt&#39;, encoding&#x3D;&#39;utf-8&#39;)\ndata &#x3D; file_object.read()\nfile_object.close()\nprint(data)\n\n\n读文件时，文件不存在程序会报错。\nTraceback (most recent call last):\n  File &quot;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;2.读文件.py&quot;, line 2, in &lt;module&gt;\n    file_object &#x3D; open(&#39;infower.txt&#39;, mode&#x3D;&#39;rt&#39;, encoding&#x3D;&#39;utf-8&#39;)\nFileNotFoundError: [Errno 2] No such file or directory: &#39;infower.txt&#39;\n\n# 判断路径是否存在？\nimport os\n\nfile_path &#x3D; &quot;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;info.txt&quot;\nexists &#x3D; os.path.exists(file_path)\nif exists:\n    # 1.打开文件\n    file_object &#x3D; open(&#39;infower.txt&#39;, mode&#x3D;&#39;rt&#39;, encoding&#x3D;&#39;utf-8&#39;)\n    # 2.读取文件内容，并赋值给data\n    data &#x3D; file_object.read()\n    # 3.关闭文件\n    file_object.close()\n    print(data)\nelse:\n    print(&quot;文件不存在&quot;)\n\n1.2 写文件\n写文本文件\n      # 1.打开文件\n    # 路径：t1.txt\n    # 模式：wb（要求写入的内容需要是字节类型）\nfile_object &#x3D; open(&quot;t1.txt&quot;, mode&#x3D;&#39;wb&#39;)\n    \n    # 2.写入内容\nfile_object.write(    &quot;武沛齐&quot;.encode(&quot;utf-8&quot;)    )\n    \n    # 3.文件关闭\nfile_object.close()\n  file_object &#x3D; open(&quot;t1.txt&quot;, mode&#x3D;&#39;wt&#39;, encoding&#x3D;&#39;utf-8&#39;)\n\nfile_object.write(&quot;武沛齐&quot;)\n\nfile_object.close()\n\n写图片等文件\nf1 &#x3D; open(&#39;a1.png&#39;,mode&#x3D;&#39;rb&#39;)\ncontent &#x3D; f1.read()\nf1.close()\n\nf2 &#x3D; open(&#39;a2.png&#39;,mode&#x3D;&#39;wb&#39;)\nf2.write(content)\nf2.close()\n\n基础案例：\n# 案例1：用户注册\n&quot;&quot;&quot;\nuser &#x3D; input(&quot;请输入用户名：&quot;)\npwd &#x3D; input(&quot;请输入密码：&quot;)\ndata &#x3D; &quot;&#123;&#125;-&#123;&#125;&quot;.format(user, pwd)\nfile_object &#x3D; open(&quot;files&#x2F;info.txt&quot;, mode&#x3D;&#39;wt&#39;, encoding&#x3D;&#39;utf-8&#39;)\nfile_object.write(data)\nfile_object.close()\n&quot;&quot;&quot;\n\n# 案例2：多用户注册\n&quot;&quot;&quot;\n# w写入文件，先清空文件；再在文件中写入内容。\nfile_object &#x3D; open(&quot;files&#x2F;info.txt&quot;, mode&#x3D;&#39;wt&#39;, encoding&#x3D;&#39;utf-8&#39;)\nwhile True:\n    user &#x3D; input(&quot;请输入用户名：&quot;)\n    if user.upper() &#x3D;&#x3D; &quot;Q&quot;:\n        break\n    pwd &#x3D; input(&quot;请输入密码：&quot;)\n    data &#x3D; &quot;&#123;&#125;-&#123;&#125;\\n&quot;.format(user, pwd)\n\n    file_object.write(data)\nfile_object.close()\n&quot;&quot;&quot;\n\n\n\n小高级案例：（超前）\n\n\n\n\n\n\n\n\n\n利用Python想某个网址发送请求并获取结果（利用第三方的模块）\n\n下载第三方模块\npip install requests\n\n&#x2F;Library&#x2F;Frameworks&#x2F;Python.framework&#x2F;Versions&#x2F;3.9&#x2F;bin&#x2F;pip3 install requests\n\n\n\n使用第三方模块\nimport requests\n\nres &#x3D; requests.get(url&#x3D;&quot;网址&quot;)\nprint(res)\n\n# 案例1：去网上下载一点文本，文本信息写入文件。\nimport requests\n\nres &#x3D; requests.get(\n    url&#x3D;&quot;https:&#x2F;&#x2F;movie.douban.com&#x2F;j&#x2F;search_subjects?type&#x3D;movie&amp;tag&#x3D;%E7%83%AD%E9%97%A8&amp;sort&#x3D;recommend&amp;page_limit&#x3D;20&amp;page_start&#x3D;20&quot;,\n    headers&#x3D;&#123;\n        &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36&quot;\n    &#125;\n)\n\n# 网络传输的原始二进制信息（bytes）\n# res.content\n\nfile_object &#x3D; open(&#39;files&#x2F;log1.txt&#39;, mode&#x3D;&#39;wb&#39;)\nfile_object.write(res.content)\nfile_object.close()\n\n\n\n# 案例2：去网上下载一张图片，图片写入本地文件。\nimport requests\n\nres &#x3D; requests.get(\n    url&#x3D;&quot;https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;c7e1461e4b15735fbe625c4dc85bd19904d96daf6de9fb-tosv1r_fw1200&quot;,\n    headers&#x3D;&#123;\n        &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36&quot;\n    &#125;\n)\n\n# 网络传输的原始二进制信息（bytes）\n# res.content\n\nfile_object &#x3D; open(&#39;files&#x2F;美女.png&#39;, mode&#x3D;&#39;wb&#39;)\nfile_object.write(res.content)\nfile_object.close()\n\n\n\n注意事项：\n\n路径\n绝对路径\n相对路径\n\n\n文件不存在时，w模式会新建然后再写入内容；文件存在时，w模式会清空文件再写入内容。\n\n1.3 文件打开模式上文我们基于文件操作基本实现了读、写的功能，其中涉及的文件操作模式：rt、rb、wt、wb，其实在文件操作中还有其他的很多模式。\n&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D; &#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;&#x3D;\nCharacter Meaning\n--------- ---------------------------------------------------------------\n&#39;r&#39;       open for reading (default)\n&#39;w&#39;       open for writing, truncating the file first\n&#39;x&#39;       create a new file and open it for writing\n&#39;a&#39;       open for writing, appending to the end of the file if it exists\n\n&#39;b&#39;       binary mode\n&#39;t&#39;       text mode (default)\n\n&#39;+&#39;       open a disk file for updating (reading and writing)\n\nThe default mode is &#39;rt&#39; (open for reading text).\n\n关于文件的打开模式常见应用有：\n\n只读：r、rt、rb （用）\n\n存在，读\n不存在，报错\n\n\n只写：w、wt、wb（用）\n\n存在，清空再写\n不存在，创建再写\n\n\n只写：x、xt、xb\n\n存在，报错\n不存在，创建再写。\n\n\n只写：a、at、ab【尾部追加】（用）\n\n存在，尾部追加。\n不存在，创建再写。\n\n\n读写\n\nr+、rt+、rb+，默认光标位置：起始位置\nfile_object &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;rt+&#39;)\n\n# 读取内容\ndata &#x3D; file_object.read()\nprint(data)\n\n# 写入内容\nfile_object.write(&quot;你好呀&quot;)\n\nfile_object.close()\n\nfile_object &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;rt+&#39;)\n\n# 写入内容\nfile_object.write(&quot;alex&quot;)\n\n# 读取内容\ndata &#x3D; file_object.read()\nprint(data)  # -123\n\nfile_object.close()\n\nw+、wt+、wb+，默认光标位置：起始位置（清空文件）\nfile_object &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;wt+&#39;)\n\n# 读取内容\ndata &#x3D; file_object.read()\nprint(data)\n\n# 写入内容\nfile_object.write(&quot;你好呀&quot;)\n\n# 将光标位置重置起始\nfile_object.seek(0)\n\n# 读取内容\ndata &#x3D; file_object.read()\nprint(data)\n\nfile_object.close()\n\nx+、xt+、xb+，默认光标位置：起始位置（新文件）\n\na+、at+、ab+，默认光标位置：末尾\nfile_object &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;at+&#39;)\n\n# 写入内容\nfile_object.write(&quot;武沛齐&quot;)\n\n# 将光标位置重置起始\nfile_object.seek(0)\n\n# 读取内容\ndata &#x3D; file_object.read()\nprint(data)\n\nfile_object.close()\n\n\n\n多用户注册案例：\nwhile True:\n    user &#x3D; input(&quot;用户名：&quot;)\n    if user.upper() &#x3D;&#x3D; &quot;Q&quot;:\n        break\n    pwd &#x3D; input(&quot;密码：&quot;)\n\n    data &#x3D; &quot;&#123;&#125;-&#123;&#125;\\n&quot;.format(user, pwd)\n\n    file_object &#x3D; open(&#39;files&#x2F;account.txt&#39;, mode&#x3D;&#39;a&#39;)\n    file_object.write(data)\n    file_object.close()\n\nfile_object &#x3D; open(&#39;files&#x2F;account.txt&#39;, mode&#x3D;&#39;a&#39;)\n\nwhile True:\n    user &#x3D; input(&quot;用户名：&quot;)\n    if user.upper() &#x3D;&#x3D; &quot;Q&quot;:\n        break\n    pwd &#x3D; input(&quot;密码：&quot;)\n    data &#x3D; &quot;&#123;&#125;-&#123;&#125;\\n&quot;.format(user, pwd)\n    file_object.write(data)\n\nfile_object.close()\n\n\n\n1.4 常见功能在上述对文件的操作中，我们只使用了write和read来对文件进行读写，其实在文件操作中还有很多其他的功能来辅助实现更好的读写文件的内容。\n\nread，读\n\n读所有【常用】\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;r&#39;,encoding&#x3D;&#39;utf-8&#39;)\ndata &#x3D; f.read()\nf.close()\n\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;rb&#39;)\ndata &#x3D; f.read()\nf.close()\n\n读n个字符（字节）【会用到】\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;r&#39;, encoding&#x3D;&#39;utf-8&#39;)\n# 读1个字符\ndata &#x3D; f.read(1)\nf.close()\n\nprint(data) # 武\n\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;r&#39;,encoding&#x3D;&#39;utf-8&#39;)\n\n# 读1个字符\nchunk1 &#x3D; f.read(1)\nchunk2 &#x3D; f.read(2)\nprint(chunk1,chunk2)\n\nf.close()\n\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;rb&#39;)\n\n# 读1个字节\ndata &#x3D; f.read(3)\nf.close()\n\nprint(data, type(data))  # b&#39;\\xe6\\xad\\xa6&#39; &lt;class &#39;bytes&#39;&gt;\n\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;rb&#39;)\n\n# 读1个字节\nchunk1 &#x3D; f.read(3)\nchunk2 &#x3D; f.read(3)\nchunk3 &#x3D; f.read(1)\nprint(chunk1,chunk2,chunk3)\n\nf.close()\n\n\nreadline，读一行\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;r&#39;, encoding&#x3D;&#39;utf-8&#39;)\n\nv1 &#x3D; f.readline()\nprint(v1)\n\nv2 &#x3D; f.readline()\nprint(v2)\n\nf.close()\n\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;r&#39;, encoding&#x3D;&#39;utf-8&#39;)\nv1 &#x3D; f.readline()\nprint(v1)\nf.close()\n\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;r&#39;, encoding&#x3D;&#39;utf-8&#39;)\nv2 &#x3D; f.readline()\nprint(v2)\nf.close()\n\nreadlines，读所有行，每行作为列表的一个元素\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;rb&#39;)\n\ndata_list &#x3D; f.readlines()\n\nf.close()\n\nprint(data_list)\n\n循环，读大文件（readline加强版）【常见】\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;r&#39;, encoding&#x3D;&#39;utf-8&#39;)\nfor line in f:\n    print(line.strip())\nf.close()\n\n\n\nwrite，写\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;a&#39;,encoding&#x3D;&#39;utf-8&#39;)\nf.write(&quot;武沛齐&quot;)\nf.close()\n\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;ab&#39;)\nf.write( &quot;武沛齐&quot;.encode(&quot;utf-8&quot;) )\nf.close()\n\nflush，刷到硬盘\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;a&#39;,encoding&#x3D;&#39;utf-8&#39;)\n\nwhile True:\n    # 不是写到了硬盘，而是写在缓冲区，系统会将缓冲区的内容刷到硬盘。\n\tf.write(&quot;武沛齐&quot;)\n    f.flush()\n\nf.close()\n\nfile_object &#x3D; open(&#39;files&#x2F;account.txt&#39;, mode&#x3D;&#39;a&#39;)\n\nwhile True:\n    user &#x3D; input(&quot;用户名：&quot;)\n    if user.upper() &#x3D;&#x3D; &quot;Q&quot;:\n        break\n    pwd &#x3D; input(&quot;密码：&quot;)\n    data &#x3D; &quot;&#123;&#125;-&#123;&#125;\\n&quot;.format(user, pwd)\n    file_object.write(data)\n    file_object.flush()\n\nfile_object.close()\n\n\n\n移动光标位置（字节）\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;r+&#39;, encoding&#x3D;&#39;utf-8&#39;)\n\n# 移动到指定字节的位置\nf.seek(3)\nf.write(&quot;武沛齐&quot;)\n\nf.close()\n\n注意：在a模式下，调用write在文件中写入内容时，永远只能将内容写入到尾部，不会写到光标的位置。\n\n获取当前光标位置\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;r&#39;, encoding&#x3D;&#39;utf-8&#39;)\n\np1 &#x3D; f.tell()\nprint(p1)  # 0\n\nf.read(3)  # 读3个字符 3*3&#x3D;9字节\n\np2 &#x3D; f.tell()\nprint(p2)  # 9\n\nf.close()\n\nf &#x3D; open(&#39;info.txt&#39;, mode&#x3D;&#39;rb&#39;)\n\np1 &#x3D; f.tell()\nprint(p1)  # 0\n\nf.read(3)  # 读3个字节\n\np2 &#x3D; f.tell()\nprint(p2)  # 3\n\nf.close()\n\n1.5 上下文管理之前对文件进行操作时，每次都要打开和关闭文件，比较繁琐且容易忘记关闭文件。\n以后再进行文件操作时，推荐大家使用with上下文管理，它可以自动实现关闭文件。\nwith open(&quot;xxxx.txt&quot;, mode&#x3D;&#39;rb&#39;) as file_object:\n    data &#x3D; file_object.read()\n    print(data)\n\n\n\n在Python 2.7 后，with又支持同时对多个文件的上下文进行管理，即：\nwith open(&quot;xxxx.txt&quot;, mode&#x3D;&#39;rb&#39;) as f1, open(&quot;xxxx.txt&quot;, mode&#x3D;&#39;rb&#39;) as f2:\n    pass\n\n\n\n练习题\n补充代码：实现下载视频并保存到本地\nimport requests\n\nres &#x3D; requests.get(\n    url&#x3D;&quot;https:&#x2F;&#x2F;f.video.weibocdn.com&#x2F;000pTZJLgx07IQgaH7HW010412066BJV0E030.mp4?label&#x3D;mp4_720p&amp;template&#x3D;1280x720.25.0&amp;trans_finger&#x3D;1f0da16358befad33323e3a1b7f95fc9&amp;media_id&#x3D;4583105541898354&amp;tp&#x3D;8x8A3El:YTkl0eM8&amp;us&#x3D;0&amp;ori&#x3D;1&amp;bf&#x3D;2&amp;ot&#x3D;h&amp;ps&#x3D;3lckmu&amp;uid&#x3D;3ZoTIp&amp;ab&#x3D;3915-g1,966-g1,3370-g1,3601-g0,3601-g0,3601-g0,1493-g0,1192-g0,1191-g0,1258-g0&amp;Expires&#x3D;1608204895&amp;ssig&#x3D;NdYpDIEXSS&amp;KID&#x3D;unistore,video&quot;,\n    headers&#x3D;&#123;\n        &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36&quot;\n    &#125;\n)\n\n# 视频的文件内容\nres.content\n\n日志分析，计算某用户223.73.89.192访问次数。日志文件如下：access.log\n49.89.167.91 - - [17&#x2F;Dec&#x2F;2020:03:43:50 +0800] &quot;GET &#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40 HTTP&#x2F;1.1&quot; 301 0 &quot;-&quot; &quot;Mozilla&#x2F;5.0(Linux;Android 5.1.1;OPPO A33 Build&#x2F;LMY47V;wv) AppleWebKit&#x2F;537.36(KHTML,link Gecko) Version&#x2F;4.0 Chrome&#x2F;43.0.2357.121 Mobile Safari&#x2F;537.36 LieBaoFast&#x2F;4.51.3&quot; &quot;-&quot;\n49.89.167.91 - - [17&#x2F;Dec&#x2F;2020:03:44:11 +0800] &quot;GET &#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F; HTTP&#x2F;1.1&quot; 200 8033 &quot;-&quot; &quot;Mozilla&#x2F;5.0(Linux;Android 5.1.1;OPPO A33 Build&#x2F;LMY47V;wv) AppleWebKit&#x2F;537.36(KHTML,link Gecko) Version&#x2F;4.0 Chrome&#x2F;43.0.2357.121 Mobile Safari&#x2F;537.36 LieBaoFast&#x2F;4.51.3&quot; &quot;-&quot;\n203.208.60.66 - - [17&#x2F;Dec&#x2F;2020:03:47:58 +0800] &quot;GET &#x2F;media&#x2F;uploads&#x2F;2019&#x2F;11&#x2F;17&#x2F;pic&#x2F;s1.png HTTP&#x2F;1.1&quot; 200 710728 &quot;-&quot; &quot;Googlebot-Image&#x2F;1.0&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:26 +0800] &quot;GET &#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F; HTTP&#x2F;1.1&quot; 200 8033 &quot;-&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:26 +0800] &quot;GET &#x2F;static&#x2F;stark&#x2F;plugins&#x2F;font-awesome&#x2F;css&#x2F;font-awesome.css HTTP&#x2F;1.1&quot; 200 37414 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F;&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:26 +0800] &quot;GET &#x2F;static&#x2F;stark&#x2F;plugins&#x2F;bootstrap&#x2F;css&#x2F;bootstrap.css HTTP&#x2F;1.1&quot; 200 146010 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F;&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:26 +0800] &quot;GET &#x2F;static&#x2F;web&#x2F;css&#x2F;commons.css HTTP&#x2F;1.1&quot; 200 3674 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F;&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:26 +0800] &quot;GET &#x2F;static&#x2F;mdeditor&#x2F;editormd&#x2F;css&#x2F;editormd.preview.css HTTP&#x2F;1.1&quot; 200 60230 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F;&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:26 +0800] &quot;GET &#x2F;static&#x2F;stark&#x2F;js&#x2F;jquery-3.3.1.min.js HTTP&#x2F;1.1&quot; 200 86927 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F;&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:26 +0800] &quot;GET &#x2F;static&#x2F;stark&#x2F;plugins&#x2F;bootstrap&#x2F;js&#x2F;bootstrap.min.js HTTP&#x2F;1.1&quot; 200 37045 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F;&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:26 +0800] &quot;GET &#x2F;static&#x2F;mdeditor&#x2F;editormd&#x2F;lib&#x2F;marked.min.js HTTP&#x2F;1.1&quot; 200 19608 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F;&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:27 +0800] &quot;GET &#x2F;static&#x2F;mdeditor&#x2F;editormd&#x2F;lib&#x2F;prettify.min.js HTTP&#x2F;1.1&quot; 200 17973 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F;&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:27 +0800] &quot;GET &#x2F;static&#x2F;mdeditor&#x2F;editormd&#x2F;fonts&#x2F;fontawesome-webfont.woff2?v&#x3D;4.3.0 HTTP&#x2F;1.1&quot; 200 56780 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;static&#x2F;mdeditor&#x2F;editormd&#x2F;css&#x2F;editormd.preview.css&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:27 +0800] &quot;GET &#x2F;static&#x2F;mdeditor&#x2F;editormd&#x2F;editormd.js HTTP&#x2F;1.1&quot; 200 163262 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F;&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:28 +0800] &quot;GET &#x2F;static&#x2F;mdeditor&#x2F;mdeditor-preview-init.js HTTP&#x2F;1.1&quot; 200 261 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F;&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:29 +0800] &quot;GET &#x2F;static&#x2F;stark&#x2F;plugins&#x2F;font-awesome&#x2F;fonts&#x2F;fontawesome-webfont.woff2?v&#x3D;4.7.0 HTTP&#x2F;1.1&quot; 200 77160 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;static&#x2F;stark&#x2F;plugins&#x2F;font-awesome&#x2F;css&#x2F;font-awesome.css&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n223.73.89.192 - - [17&#x2F;Dec&#x2F;2020:03:48:29 +0800] &quot;GET &#x2F;media&#x2F;uploads&#x2F;2019&#x2F;02&#x2F;22&#x2F;Gobook&#x2F;_book&#x2F;ssl2.png HTTP&#x2F;1.1&quot; 200 203535 &quot;https:&#x2F;&#x2F;pythonav.com&#x2F;wiki&#x2F;detail&#x2F;3&#x2F;40&#x2F;&quot; &quot;Mozilla&#x2F;5.0 (Windows NT 10.0; Win64; x64) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36 Edg&#x2F;87.0.664.60&quot; &quot;-&quot;\n\n日志分析升级，计算所有用户的访问次数。\n\n筛选出股票 当前价大于 20 的所有股票数据。\n股票代码,股票名称,当前价,涨跌额,涨跌幅,年初至今,成交量,成交额,换手率,市盈率(TTM),股息率,市值\nSH601778,N晶科,6.29,+1.92,+43.94%,+43.94%,259.66万,1625.52万,0.44%,22.32,-,173.95亿\nSH688566,吉贝尔,52.66,+6.96,+15.23%,+122.29%,1626.58万,8.09亿,42.29%,89.34,-,98.44亿\nSH688268,华特气体,88.80,+11.72,+15.20%,+102.51%,622.60万,5.13亿,22.87%,150.47,-,106.56亿\nSH600734,实达集团,2.60,+0.24,+10.17%,-61.71%,1340.27万,3391.14万,2.58%,亏损,0.00%,16.18亿\nSH900957,凌云B股,0.36,+0.033,+10.09%,-35.25%,119.15万,42.10万,0.65%,44.65,0.00%,1.26亿\nSZ000584,哈工智能,6.01,+0.55,+10.07%,-4.15%,2610.86万,1.53亿,4.36%,199.33,0.26%,36.86亿\nSH600599,熊猫金控,6.78,+0.62,+10.06%,-35.55%,599.64万,3900.23万,3.61%,亏损,0.00%,11.25亿\nSH600520,文一科技,8.21,+0.75,+10.05%,-24.05%,552.34万,4464.69万,3.49%,亏损,0.00%,13.01亿\nSH603682,锦和商业,11.73,+1.07,+10.04%,+48.29%,2746.63万,3.15亿,29.06%,29.62,-,55.42亿\nSZ300831,派瑞股份,12.27,+1.12,+10.04%,+208.29%,25.38万,311.41万,0.32%,60.59,-,39.26亿\n\n根据要求修改文件的内容，原文件内容如下：ha.conf\nglobal       \n        log 127.0.0.1 local2\n        daemon\n        maxconn 256\n        log 127.0.0.1 local2 info\ndefaults\n        log global\n        mode http\n        timeout connect 5000ms\n        timeout client 50000ms\n        timeout server 50000ms\n        option  dontlognull\n\nlisten stats :8888\n        stats enable\n        stats uri       &#x2F;admin\n        stats auth      admin:1234\n\nfrontend oldboy.org\n        bind 0.0.0.0:80\n        option httplog\n        option httpclose\n        option  forwardfor\n        log global\n        acl www hdr_reg(host) -i www.luffycity.org\n        use_backend www.luffycity.com if www\n\nbackend www.luffycity.com\n        server 100.1.7.9 100.1.7.9 weight 20 maxconn 3000\n...\n\n请将文件中的 luffycity修改为 pythonav 。\n\n\n2.csv格式文件逗号分隔值（Comma-Separated Values，CSV，有时也称为字符分隔值，因为分隔字符也可以不是逗号），其文件以纯文本形式存储表格数据（数字和文本）。\n对于这种格式的数据，我们需要利用open函数来读取文件并根据逗号分隔的特点来进行处理。\n股票代码,股票名称,当前价,涨跌额,涨跌幅,年初至今\nSH601778,N晶科,6.29,+1.92,-43.94%,+43.94%\nSH688566,吉贝尔,52.66,+6.96,+15.23%,+122.29%\n...\n\n\n\n练习题案例：下载文档中的所有图片且以用户名为图片名称存储。\nID,用户名,头像\n26044585,Hush,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;51d46dc32abe7ac7f83b94c67bb88cacc46869954f478-aP4Q3V\n19318369,柒十一,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;703fdb063bdc37b11033ef794f9b3a7adfa01fd21a6d1-wTFbnO\n15529690,Law344,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;b438d8c61ed2abf50ca94e00f257ca7a223e3b364b471-xrzoQd\n18311394,Jennah·,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;4edba1ed6a71797f52355aa1de5af961b85bf824cb71-px1nZz\n18009711,可洛爱画画,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;03331ef39b5c7687f5cc47dbcbafd974403c962ae88ce-Co8AUI\n30574436,花姑凉~,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;2f5b657edb9497ff8c41132e18000edb082d158c2404-8rYHbw\n17740339,小巫師,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;dbc6fd49f1915545cc42c1a1492a418dbaebd2c21bb9-9aDqgl\n18741964,桐末tonmo,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;b60cee303f62aaa592292f45a1ed8d5be9873b2ed5c-gAJehO\n30535005,TANGZHIQI,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;bbd08ee168d54665bf9b07899a5c4a4d6bc1eb8af77a4-8Gz3K1\n31078743,你的老杨,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;c46fbc3c9a01db37b8e786cbd7174bbd475e4cda220f4-F1u7MX\n25519376,尺尺寸,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;ee29ee198efb98f970e3dc2b24c40d89bfb6f911126b6-KGvKes\n21113978,C-CLong,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;7fa6b2a0d570e67246b34840a87d57c16a875dba9100-SXsSeY\n24674102,szaa,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;0716687b0df93e8c3a8e0925b6d2e4135449cd27597c4-gWdv24\n30508507,爱起床的小灰灰,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;4eafdbfa21b2f300a7becd8863f948e5e92ef789b5a5-1ozTKq\n12593664,yokozen,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;cd07bbaf052b752ed5c287602404ea719d7dd8161321b-cJtHss\n16899164,一阵疯,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;0940b557b28892658c3bcaf52f5ba8dc8402100e130b2-G966Uz\n847937,卩丬My㊊伴er彎,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;e2d6bb5bc8498c6f607492a8f96164aa2366b104e7a-kWaH68\n31010628,慢慢即漫漫,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;c4fb6718907a22f202e8dd14d52f0c369685e59cfea7-82FdsK\n13438168,海贼玩跑跑,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;1edae3ce6fe0f6e95b67b4f8b57c4cebf19c501b397e-BXwiW6\n28593155,源稚生,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;626cfd89ca4c10e6f875f3dfe1005331e4c0fd7fd429-9SeJeQ\n28201821,合伙哼哼,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;f59d4780531aa1892b80e0ec94d4ec78dcba08ff18c416-769X6a\n28255146,漫步AAA,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;3c034c520594e38353a039d7e7a5fd5e74fb53eb1086-KnpLaL\n30537613,配䦹,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;efd81d22c1b1a2de77a0e0d8e853282b83b6bbc590fd-y3d4GJ\n22665880,日后必火,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;69f0f959979a4fada9e9e55f565989544be88164d2b-INWbaF\n16748980,keer521521,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;654953460733026a7ef6e101404055627ad51784a95c-B6OFs4\n30536510,“西辞”,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;61cfffca6b2507bf51a507e8319d68a8b8c3a96968f-6IvMSk\n30986577,艺成背锅王,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;c381ecc43d6c69758a86a30ebf72976906ae6c53291f9-9zroHF\n26409800,CsysADk7,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;bf1d22092c2070d68ade012c588f2e410caaab1f58051-ahlgLm\n30469116,18啊全阿,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;654953460733026a7ef6e101404055627ad51784a95c-B6OFs4\n15514336,W&#x2F;小哥,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;a30f5967fc0acf81421dd49650397de63c105b9ead1c-nVRrNl\n17473505,椿の花,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;0e38d810e5a24f91ebb251fd3aaaed8bb37655b14844c-pgNJBP\n19165177,っ思忆゜♪,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;4815ea0e4905d0f3bb82a654b481811dadbfe5ce2673-vMVr0B\n16059616,格林熊丶,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;8760a2b08d87e6ed4b7a9715b1a668176dbf84fec5b-jx14tZ\n30734152,sCWVkJDG,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;f31a5305d1b8717bbfb897723f267d316e58e7b7dc40-GD3e22\n24019677,虚无本心,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;6fdfa9834abe362e978b517275b06e7f0d5926aa650-N1xCXE\n16670283,Y-雨后天空,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;a3bbb0045b536fc27a6d2effa64a0d43f9f5193c177f-I2vHaI\n21512483,汤姆2,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;98cc50a61a7cc9b49a8af754ffb26bd15764a82f1133-AkiU7D\n16441049,笑潇啸逍小鱼,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;ae8a70cd85aff3a8587ff6578d5cf7620f3691df13e46-lmrIi9\n24795603,⁢⁢⁢⁢⁢v,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;a7183cc3a933aa129d7b3230bf1378fd8f5857846cc5-3tDtx3\n29819152,妮玛士珍多,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;ca4ecb573bf1ff0415c7a873d64470dedc465ea1213c6-RAkArS\n19101282,陈勇敢❤,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;ab6d04ebaff3176e3570139a65155856871241b58bc6-Qklj2E\n28337572,爱意随风散,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;117ad8b6eeda57a562ac6ab2861111a793ca3d1d5543-SjWlk2\n17342758,幸运instant,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;72b5f9042ec297ae57b83431123bc1c066cca90fa23-3MoJNj\n18483372,Beau染,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;077115cb622b1ff3907ec6932e1b575393d5aae720487-d1cdT9\n22127102,栽花的小蜻蜓,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;6c3cbf9f27e17898083186fc51985e43269018cc1e1df-QfOIBG\n13802024,LoveHsu,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;f720a15f8b49b86a7c1ee4951263a8dbecfe3e43d2d-GPEauV\n22558931,白驹过隙丶梨花泪う,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;e49e1341dfe5144da5c71bd15f1052ef07ba7a0e1296b-jfyfDJ\n11762339,cojoy,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;5b27f876d5d391e7c4889bc5e8ba214419eb72b56822-83gYmB\n30711623,雪碧学长呀,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;2c288a1535048b05537ba523b3fc9eacc1e81273212d1-nr8M4t\n18906718,西霸王,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;7b02ad5e01bd8c0a29817e362814666a7800831c154a6-AvBDaG\n31037856,邵阳的小哥哥,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;654953460733026a7ef6e101404055627ad51784a95c-B6OFs4\n26830711,稳健谭,https:&#x2F;&#x2F;hbimg.huabanimg.com&#x2F;51547ade3f0aef134e8d268cfd4ad61110925aefec8a-NKPEYX\n\nimport os\nimport requests\n\nwith open(&#39;files&#x2F;mv.csv&#39;, mode&#x3D;&#39;r&#39;, encoding&#x3D;&#39;utf-8&#39;) as file_object:\n    file_object.readline()\n    for line in file_object:\n        user_id, username, url &#x3D; line.strip().split(&#39;,&#39;)\n        print(username, url)\n        # 1.根据URL下载图片\n        res &#x3D; requests.get(\n            url&#x3D;url,\n            headers&#x3D;&#123;\n                &quot;User-Agent&quot;: &quot;Mozilla&#x2F;5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit&#x2F;537.36 (KHTML, like Gecko) Chrome&#x2F;87.0.4280.88 Safari&#x2F;537.36&quot;\n            &#125;\n        )\n        # 检查images目录是否存在？不存在，则创建images目录\n        if not os.path.exists(&quot;images&quot;):\n            # 创建images目录\n            os.makedirs(&quot;images&quot;)\n\n        # 2.将图片的内容写入到文件\n        with open(&quot;images&#x2F;&#123;&#125;.png&quot;.format(username), mode&#x3D;&#39;wb&#39;) as img_object:\n            img_object.write(res.content)\n\n\n\n\n\n3.ini格式文件ini文件是Initialization File的缩写，平时用于存储软件的的配置文件。例如：MySQL数据库的配置文件。\n[mysqld]\ndatadir&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql\nsocket&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sock\nlog-bin&#x3D;py-mysql-bin\ncharacter-set-server&#x3D;utf8\ncollation-server&#x3D;utf8_general_ci\nlog-error&#x3D;&#x2F;var&#x2F;log&#x2F;mysqld.log\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links&#x3D;0\n\n[mysqld_safe]\nlog-error&#x3D;&#x2F;var&#x2F;log&#x2F;mariadb&#x2F;mariadb.log\npid-file&#x3D;&#x2F;var&#x2F;run&#x2F;mariadb&#x2F;mariadb.pid\n\n[client]\ndefault-character-set&#x3D;utf8\n\n这种格式是可以直接使用open来出来，考虑到自己处理比较麻烦，所以Python为我们提供了更为方便的方式。\nimport configparser\n\nconfig &#x3D; configparser.ConfigParser()\nconfig.read(&#39;files&#x2F;my.ini&#39;, encoding&#x3D;&#39;utf-8&#39;)\n# config.read(&#39;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;files&#x2F;my.ini&#39;, encoding&#x3D;&#39;utf-8&#39;)\n\n# 1.获取所有的节点\n&quot;&quot;&quot;\nresult &#x3D; config.sections()\nprint(result)  # [&#39;mysqld&#39;, &#39;mysqld_safe&#39;, &#39;client&#39;]\n&quot;&quot;&quot;\n\n# 2.获取节点下的键值\n&quot;&quot;&quot;\nresult &#x3D; config.items(&quot;mysqld_safe&quot;)\nprint(result)  # [(&#39;log-error&#39;, &#39;&#x2F;var&#x2F;log&#x2F;mariadb&#x2F;mariadb.log&#39;), (&#39;pid-file&#39;, &#39;&#x2F;var&#x2F;run&#x2F;mariadb&#x2F;mariadb.pid&#39;)]\n\nfor key, value in config.items(&quot;mysqld_safe&quot;):\n    print(key, value)\n&quot;&quot;&quot;\n\n# 3.获取某个节点下的键对应的值\n&quot;&quot;&quot;\nresult &#x3D; config.get(&quot;mysqld&quot;,&quot;collation-server&quot;)\nprint(result)\n&quot;&quot;&quot;\n\n# 4.其他\n\n# 4.1 是否存在节点\n# v1 &#x3D; config.has_section(&quot;client&quot;)\n# print(v1)\n\n# 4.2 添加一个节点\n# config.add_section(&quot;group&quot;)\n# config.set(&#39;group&#39;,&#39;name&#39;,&#39;wupeiqi&#39;)\n# config.set(&#39;client&#39;,&#39;name&#39;,&#39;wupeiqi&#39;)\n# config.write(open(&#39;files&#x2F;new.ini&#39;, mode&#x3D;&#39;w&#39;, encoding&#x3D;&#39;utf-8&#39;))\n\n# 4.3 删除\n# config.remove_section(&#39;client&#39;)\n# config.remove_option(&quot;mysqld&quot;, &quot;datadir&quot;)\n# config.write(open(&#39;files&#x2F;new.ini&#39;, mode&#x3D;&#39;w&#39;, encoding&#x3D;&#39;utf-8&#39;))\n\n\n读取所有节点\nimport configparser\n\nconfig &#x3D; configparser.ConfigParser()\nconfig.read(&#39;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;files&#x2F;my.conf&#39;, encoding&#x3D;&#39;utf-8&#39;)\n# config.read(&#39;my.conf&#39;, encoding&#x3D;&#39;utf-8&#39;)\nret &#x3D; config.sections()\nprint(ret) \n\n&gt;&gt;输出\n[&#39;mysqld&#39;, &#39;mysqld_safe&#39;, &#39;client&#39;]\n\n读取节点下的键值\nimport configparser\n\nconfig &#x3D; configparser.ConfigParser()\nconfig.read(&#39;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;files&#x2F;my.conf&#39;, encoding&#x3D;&#39;utf-8&#39;)\n# config.read(&#39;my.conf&#39;, encoding&#x3D;&#39;utf-8&#39;)\nitem_list &#x3D; config.items(&quot;mysqld_safe&quot;)\nprint(item_list) \n\n&gt;&gt;输出\n[(&#39;log-error&#39;, &#39;&#x2F;var&#x2F;log&#x2F;mariadb&#x2F;mariadb.log&#39;), (&#39;pid-file&#39;, &#39;&#x2F;var&#x2F;run&#x2F;mariadb&#x2F;mariadb.pid&#39;)]\n\n读取节点下值（根据 节点+键 ）\nimport configparser\n\nconfig &#x3D; configparser.ConfigParser()\nconfig.read(&#39;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;files&#x2F;my.conf&#39;, encoding&#x3D;&#39;utf-8&#39;)\n\nvalue &#x3D; config.get(&#39;mysqld&#39;, &#39;log-bin&#39;)\nprint(value)\n\n&gt;&gt;输出\npy-mysql-bin\n\n检查、删除、添加节点\nimport configparser\n\nconfig &#x3D; configparser.ConfigParser()\nconfig.read(&#39;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;files&#x2F;my.conf&#39;, encoding&#x3D;&#39;utf-8&#39;)\n# config.read(&#39;my.conf&#39;, encoding&#x3D;&#39;utf-8&#39;)\n\n\n# 检查\nhas_sec &#x3D; config.has_section(&#39;mysqld&#39;)\nprint(has_sec)\n\n# 添加节点\nconfig.add_section(&quot;SEC_1&quot;)\n# 节点中设置键值\nconfig.set(&#39;SEC_1&#39;, &#39;k10&#39;, &quot;123&quot;)\nconfig.set(&#39;SEC_1&#39;, &#39;name&#39;, &quot;哈哈哈哈哈&quot;)\n\nconfig.add_section(&quot;SEC_2&quot;)\nconfig.set(&#39;SEC_2&#39;, &#39;k10&#39;, &quot;123&quot;)\n# 内容写入新文件\nconfig.write(open(&#39;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;files&#x2F;xxoo.conf&#39;, &#39;w&#39;))\n\n\n# 删除节点\nconfig.remove_section(&quot;SEC_2&quot;)\n# 删除节点中的键值\nconfig.remove_option(&#39;SEC_1&#39;, &#39;k10&#39;)\nconfig.write(open(&#39;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;files&#x2F;new.conf&#39;, &#39;w&#39;))\n\n4.XML格式文件可扩展标记语言，是一种简单的数据存储语言，XML 被设计用来传输和存储数据。\n\n存储，可用来存放配置文件，例如：java的配置文件。\n传输，网络传输时以这种格式存在，例如：早期ajax传输的数据、soap协议等。\n\n&lt;data&gt;\n    &lt;country name&#x3D;&quot;Liechtenstein&quot;&gt;\n        &lt;rank updated&#x3D;&quot;yes&quot;&gt;2&lt;&#x2F;rank&gt;\n        &lt;year&gt;2023&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;141100&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Austria&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Switzerland&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n    &lt;country name&#x3D;&quot;Singapore&quot;&gt;\n        &lt;rank updated&#x3D;&quot;yes&quot;&gt;5&lt;&#x2F;rank&gt;\n        &lt;year&gt;2026&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;59900&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;N&quot; name&#x3D;&quot;Malaysia&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n    &lt;country name&#x3D;&quot;Panama&quot;&gt;\n        &lt;rank updated&#x3D;&quot;yes&quot;&gt;69&lt;&#x2F;rank&gt;\n        &lt;year&gt;2026&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;13600&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Costa Rica&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Colombia&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n&lt;&#x2F;data&gt;\n\n注意：在Python开发中用的相对来比较少，大家作为了解即可（后期课程在讲解微信支付、微信公众号消息处理 时会用到基于xml传输数据）。\n例如：https://developers.weixin.qq.com/doc/offiaccount/Message_Management/Receiving_standard_messages.html\n4.1 读取文件和内容from xml.etree import ElementTree as ET\n\n# ET去打开xml文件\ntree &#x3D; ET.parse(&quot;files&#x2F;xo.xml&quot;)\n\n# 获取根标签\nroot &#x3D; tree.getroot()\n\nprint(root) # &lt;Element &#39;data&#39; at 0x7f94e02763b0&gt;\n\nfrom xml.etree import ElementTree as ET\n\ncontent &#x3D; &quot;&quot;&quot;\n&lt;data&gt;\n    &lt;country name&#x3D;&quot;Liechtenstein&quot;&gt;\n        &lt;rank updated&#x3D;&quot;yes&quot;&gt;2&lt;&#x2F;rank&gt;\n        &lt;year&gt;2023&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;141100&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Austria&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Switzerland&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n     &lt;country name&#x3D;&quot;Panama&quot;&gt;\n        &lt;rank updated&#x3D;&quot;yes&quot;&gt;69&lt;&#x2F;rank&gt;\n        &lt;year&gt;2026&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;13600&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Costa Rica&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Colombia&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n&lt;&#x2F;data&gt;\n&quot;&quot;&quot;\n\nroot &#x3D; ET.XML(content)\nprint(root)  # &lt;Element &#39;data&#39; at 0x7fdaa019cea0&gt;\n\n4.2 读取节点数据from xml.etree import ElementTree as ET\n\ncontent &#x3D; &quot;&quot;&quot;\n&lt;data&gt;\n    &lt;country name&#x3D;&quot;Liechtenstein&quot; id&#x3D;&quot;999&quot; &gt;\n        &lt;rank&gt;2&lt;&#x2F;rank&gt;\n        &lt;year&gt;2023&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;141100&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Austria&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Switzerland&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n     &lt;country name&#x3D;&quot;Panama&quot;&gt;\n        &lt;rank&gt;69&lt;&#x2F;rank&gt;\n        &lt;year&gt;2026&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;13600&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Costa Rica&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Colombia&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n&lt;&#x2F;data&gt;\n&quot;&quot;&quot;\n\n# 获取根标签 data\nroot &#x3D; ET.XML(content)\n\ncountry_object &#x3D; root.find(&quot;country&quot;)\nprint(country_object.tag, country_object.attrib)\ngdppc_object &#x3D; country_object.find(&quot;gdppc&quot;)\nprint(gdppc_object.tag,gdppc_object.attrib,gdppc_object.text)\n\nfrom xml.etree import ElementTree as ET\n\ncontent &#x3D; &quot;&quot;&quot;\n&lt;data&gt;\n    &lt;country name&#x3D;&quot;Liechtenstein&quot;&gt;\n        &lt;rank&gt;2&lt;&#x2F;rank&gt;\n        &lt;year&gt;2023&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;141100&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Austria&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Switzerland&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n     &lt;country name&#x3D;&quot;Panama&quot;&gt;\n        &lt;rank&gt;69&lt;&#x2F;rank&gt;\n        &lt;year&gt;2026&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;13600&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Costa Rica&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Colombia&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n&lt;&#x2F;data&gt;\n&quot;&quot;&quot;\n\n# 获取根标签 data\nroot &#x3D; ET.XML(content)\n\n# 获取data标签的孩子标签\nfor child in root:\n    # child.tag &#x3D; conntry\n    # child.attrib &#x3D; &#123;&quot;name&quot;:&quot;Liechtenstein&quot;&#125;\n    print(child.tag, child.attrib)\n    for node in child:\n        print(node.tag, node.attrib, node.text)\n\nfrom xml.etree import ElementTree as ET\n\ncontent &#x3D; &quot;&quot;&quot;\n&lt;data&gt;\n    &lt;country name&#x3D;&quot;Liechtenstein&quot;&gt;\n        &lt;rank&gt;2&lt;&#x2F;rank&gt;\n        &lt;year&gt;2023&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;141100&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Austria&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Switzerland&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n     &lt;country name&#x3D;&quot;Panama&quot;&gt;\n        &lt;rank&gt;69&lt;&#x2F;rank&gt;\n        &lt;year&gt;2026&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;13600&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Costa Rica&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Colombia&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n&lt;&#x2F;data&gt;\n&quot;&quot;&quot;\n\nroot &#x3D; ET.XML(content)\n\nfor child in root.iter(&#39;year&#39;):\n    print(child.tag, child.text)\n\nfrom xml.etree import ElementTree as ET\n\ncontent &#x3D; &quot;&quot;&quot;\n&lt;data&gt;\n    &lt;country name&#x3D;&quot;Liechtenstein&quot;&gt;\n        &lt;rank&gt;2&lt;&#x2F;rank&gt;\n        &lt;year&gt;2023&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;141100&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Austria&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Switzerland&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n     &lt;country name&#x3D;&quot;Panama&quot;&gt;\n        &lt;rank&gt;69&lt;&#x2F;rank&gt;\n        &lt;year&gt;2026&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;13600&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Costa Rica&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Colombia&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n&lt;&#x2F;data&gt;\n&quot;&quot;&quot;\n\nroot &#x3D; ET.XML(content)\nv1 &#x3D; root.findall(&#39;country&#39;)\nprint(v1)\n\nv2 &#x3D; root.find(&#39;country&#39;).find(&#39;rank&#39;)\nprint(v2.text)\n\n\n\n4.3 修改和删除节点from xml.etree import ElementTree as ET\n\ncontent &#x3D; &quot;&quot;&quot;\n&lt;data&gt;\n    &lt;country name&#x3D;&quot;Liechtenstein&quot;&gt;\n        &lt;rank&gt;2&lt;&#x2F;rank&gt;\n        &lt;year&gt;2023&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;141100&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Austria&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Switzerland&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n     &lt;country name&#x3D;&quot;Panama&quot;&gt;\n        &lt;rank&gt;69&lt;&#x2F;rank&gt;\n        &lt;year&gt;2026&lt;&#x2F;year&gt;\n        &lt;gdppc&gt;13600&lt;&#x2F;gdppc&gt;\n        &lt;neighbor direction&#x3D;&quot;W&quot; name&#x3D;&quot;Costa Rica&quot; &#x2F;&gt;\n        &lt;neighbor direction&#x3D;&quot;E&quot; name&#x3D;&quot;Colombia&quot; &#x2F;&gt;\n    &lt;&#x2F;country&gt;\n&lt;&#x2F;data&gt;\n&quot;&quot;&quot;\n\nroot &#x3D; ET.XML(content)\n\n# 修改节点内容和属性\nrank &#x3D; root.find(&#39;country&#39;).find(&#39;rank&#39;)\nprint(rank.text)\nrank.text &#x3D; &quot;999&quot;\nrank.set(&#39;update&#39;, &#39;2020-11-11&#39;)\nprint(rank.text, rank.attrib)\n############ 保存文件 ############\ntree &#x3D; ET.ElementTree(root)\ntree.write(&quot;new.xml&quot;, encoding&#x3D;&#39;utf-8&#39;)\n\n\n# 删除节点\nroot.remove( root.find(&#39;country&#39;) )\nprint(root.findall(&#39;country&#39;))\n\n############ 保存文件 ############\ntree &#x3D; ET.ElementTree(root)\ntree.write(&quot;newnew.xml&quot;, encoding&#x3D;&#39;utf-8&#39;)\n\n\n\n4.4 构建文档&lt;home&gt;\n    &lt;son name&#x3D;&quot;儿1&quot;&gt;\n        &lt;grandson name&#x3D;&quot;儿11&quot;&gt;&lt;&#x2F;grandson&gt;\n        &lt;grandson name&#x3D;&quot;儿12&quot;&gt;&lt;&#x2F;grandson&gt;\n    &lt;&#x2F;son&gt;\n    &lt;son name&#x3D;&quot;儿2&quot;&gt;&lt;&#x2F;son&gt;\n&lt;&#x2F;home&gt;\n\n\n\nfrom xml.etree import ElementTree as ET\n\n# 创建根标签\nroot &#x3D; ET.Element(&quot;home&quot;)\n\n# 创建节点大儿子\nson1 &#x3D; ET.Element(&#39;son&#39;, &#123;&#39;name&#39;: &#39;儿1&#39;&#125;)\n# 创建小儿子\nson2 &#x3D; ET.Element(&#39;son&#39;, &#123;&quot;name&quot;: &#39;儿2&#39;&#125;)\n\n# 在大儿子中创建两个孙子\ngrandson1 &#x3D; ET.Element(&#39;grandson&#39;, &#123;&#39;name&#39;: &#39;儿11&#39;&#125;)\ngrandson2 &#x3D; ET.Element(&#39;grandson&#39;, &#123;&#39;name&#39;: &#39;儿12&#39;&#125;)\nson1.append(grandson1)\nson1.append(grandson2)\n\n# 把儿子添加到根节点中\nroot.append(son1)\nroot.append(son2)\n\ntree &#x3D; ET.ElementTree(root)\ntree.write(&#39;oooo.xml&#39;, encoding&#x3D;&#39;utf-8&#39;, short_empty_elements&#x3D;False)\n\n\n\n&lt;famliy&gt;\n    &lt;son name&#x3D;&quot;儿1&quot;&gt;\n        &lt;grandson name&#x3D;&quot;儿11&quot;&gt;&lt;&#x2F;grandson&gt;\n        &lt;grandson name&#x3D;&quot;儿12&quot;&gt;&lt;&#x2F;grandson&gt;\n    &lt;&#x2F;son&gt;\n    &lt;son name&#x3D;&quot;儿2&quot;&gt;&lt;&#x2F;son&gt;\n&lt;&#x2F;famliy&gt;\n\nfrom xml.etree import ElementTree as ET\n\n# 创建根节点\nroot &#x3D; ET.Element(&quot;famliy&quot;)\n\n\n# 创建大儿子\nson1 &#x3D; root.makeelement(&#39;son&#39;, &#123;&#39;name&#39;: &#39;儿1&#39;&#125;)\n# 创建小儿子\nson2 &#x3D; root.makeelement(&#39;son&#39;, &#123;&quot;name&quot;: &#39;儿2&#39;&#125;)\n\n# 在大儿子中创建两个孙子\ngrandson1 &#x3D; son1.makeelement(&#39;grandson&#39;, &#123;&#39;name&#39;: &#39;儿11&#39;&#125;)\ngrandson2 &#x3D; son1.makeelement(&#39;grandson&#39;, &#123;&#39;name&#39;: &#39;儿12&#39;&#125;)\n\nson1.append(grandson1)\nson1.append(grandson2)\n\n\n# 把儿子添加到根节点中\nroot.append(son1)\nroot.append(son2)\n\ntree &#x3D; ET.ElementTree(root)\ntree.write(&#39;oooo.xml&#39;,encoding&#x3D;&#39;utf-8&#39;)\n\n\n\n\n\n&lt;famliy&gt;\n\t&lt;son name&#x3D;&quot;儿1&quot;&gt;\n    \t&lt;age name&#x3D;&quot;儿11&quot;&gt;孙子&lt;&#x2F;age&gt;\n    &lt;&#x2F;son&gt;\n\t&lt;son name&#x3D;&quot;儿2&quot;&gt;&lt;&#x2F;son&gt;\n&lt;&#x2F;famliy&gt;\n\nfrom xml.etree import ElementTree as ET\n\n\n# 创建根节点\nroot &#x3D; ET.Element(&quot;famliy&quot;)\n\n\n# 创建节点大儿子\nson1 &#x3D; ET.SubElement(root, &quot;son&quot;, attrib&#x3D;&#123;&#39;name&#39;: &#39;儿1&#39;&#125;)\n# 创建小儿子\nson2 &#x3D; ET.SubElement(root, &quot;son&quot;, attrib&#x3D;&#123;&quot;name&quot;: &quot;儿2&quot;&#125;)\n\n# 在大儿子中创建一个孙子\ngrandson1 &#x3D; ET.SubElement(son1, &quot;age&quot;, attrib&#x3D;&#123;&#39;name&#39;: &#39;儿11&#39;&#125;)\ngrandson1.text &#x3D; &#39;孙子&#39;\n\n\net &#x3D; ET.ElementTree(root)  #生成文档对象\net.write(&quot;test.xml&quot;, encoding&#x3D;&quot;utf-8&quot;)\n\n\n\n&lt;user&gt;&lt;![CDATA[你好呀]]&lt;&#x2F;user&gt;\n\nfrom xml.etree import ElementTree as ET\n\n# 创建根节点\nroot &#x3D; ET.Element(&quot;user&quot;)\nroot.text &#x3D; &quot;&lt;![CDATA[你好呀]]&quot;\n\net &#x3D; ET.ElementTree(root)  # 生成文档对象\net.write(&quot;test.xml&quot;, encoding&#x3D;&quot;utf-8&quot;)\n\n\n\n案例：\ncontent &#x3D; &quot;&quot;&quot;&lt;xml&gt;\n    &lt;ToUserName&gt;&lt;![CDATA[gh_7f083739789a]]&gt;&lt;&#x2F;ToUserName&gt;\n    &lt;FromUserName&gt;&lt;![CDATA[oia2TjuEGTNoeX76QEjQNrcURxG8]]&gt;&lt;&#x2F;FromUserName&gt;\n    &lt;CreateTime&gt;1395658920&lt;&#x2F;CreateTime&gt;\n    &lt;MsgType&gt;&lt;![CDATA[event]]&gt;&lt;&#x2F;MsgType&gt;\n    &lt;Event&gt;&lt;![CDATA[TEMPLATESENDJOBFINISH]]&gt;&lt;&#x2F;Event&gt;\n    &lt;MsgID&gt;200163836&lt;&#x2F;MsgID&gt;\n    &lt;Status&gt;&lt;![CDATA[success]]&gt;&lt;&#x2F;Status&gt;\n&lt;&#x2F;xml&gt;&quot;&quot;&quot;\n\nfrom xml.etree import ElementTree as ET\n\ninfo &#x3D; &#123;&#125;\nroot &#x3D; ET.XML(content)\nfor node in root:\n    # print(node.tag,node.text)\n    info[node.tag] &#x3D; node.text\nprint(info)\n\n\n\n5.Excel格式文件Python内部未提供处理Excel文件的功能，想要在Python中操作Excel需要按照第三方的模块。\npip install openpyxl\n\n此模块中集成了Python操作Excel的相关功能，接下来我们就需要去学习该模块提供的相关功能即可。\n\n5.1 读Excel\n读sheet\nfrom openpyxl import load_workbook\n\nwb &#x3D; load_workbook(&quot;files&#x2F;p1.xlsx&quot;)\n\n# sheet相关操作\n\n# 1.获取excel文件中的所有sheet名称\n&quot;&quot;&quot;\nprint(wb.sheetnames) # [&#39;数据导出&#39;, &#39;用户列表&#39;, &#39;Sheet1&#39;, &#39;Sheet2&#39;]\n&quot;&quot;&quot;\n\n# 2.选择sheet，基于sheet名称\n&quot;&quot;&quot;\nsheet &#x3D; wb[&quot;数据导出&quot;]\ncell &#x3D; sheet.cell(1, 2)\nprint(cell.value)\n&quot;&quot;&quot;\n\n# 3.选择sheet，基于索引位置\n&quot;&quot;&quot;\nsheet &#x3D; wb.worksheets[0]\ncell &#x3D; sheet.cell(1,2)\nprint(cell.value)\n&quot;&quot;&quot;\n\n# 4.循环所有的sheet\n&quot;&quot;&quot;\nfor name in wb.sheetnames:\n    sheet &#x3D; wb[name]\n    cell &#x3D; sheet.cell(1, 1)\n    print(cell.value)\n&quot;&quot;&quot;\n&quot;&quot;&quot;\nfor sheet in wb.worksheets:\n    cell &#x3D; sheet.cell(1, 1)\n    print(cell.value)\n&quot;&quot;&quot;\n&quot;&quot;&quot;\nfor sheet in wb:\n    cell &#x3D; sheet.cell(1, 1)\n    print(cell.value)\n&quot;&quot;&quot;\n\n读sheet中单元格的数据\nfrom openpyxl import load_workbook\n\nwb &#x3D; load_workbook(&quot;files&#x2F;p1.xlsx&quot;)\nsheet &#x3D; wb.worksheets[0]\n\n# 1.获取第N行第N列的单元格(位置是从1开始）\n&quot;&quot;&quot;\ncell &#x3D; sheet.cell(1, 1)\n\nprint(cell.value)\nprint(cell.style)\nprint(cell.font)\nprint(cell.alignment)\n&quot;&quot;&quot;\n\n# 2.获取某个单元格\n&quot;&quot;&quot;\nc1 &#x3D; sheet[&quot;A2&quot;]\nprint(c1.value)\n\nc2 &#x3D; sheet[&#39;D4&#39;]\nprint(c2.value)\n&quot;&quot;&quot;\n\n# 3.第N行所有的单元格\n&quot;&quot;&quot;\nfor cell in sheet[1]:\n    print(cell.value)\n&quot;&quot;&quot;\n\n# 4.所有行的数据（获取某一列数据）\n&quot;&quot;&quot;\nfor row in sheet.rows:\n    print(row[0].value, row[1].value)\n&quot;&quot;&quot;\n\n# 5.获取所有列的数据\n&quot;&quot;&quot;\nfor col in sheet.columns:\n    print(col[1].value)\n&quot;&quot;&quot;\n\n读合并的单元格\n\nfrom openpyxl import load_workbook\n\nwb &#x3D; load_workbook(&quot;files&#x2F;p1.xlsx&quot;)\nsheet &#x3D; wb.worksheets[2]\n\n# 获取第N行第N列的单元格(位置是从1开始）\nc1 &#x3D; sheet.cell(1, 1)\nprint(c1)  # &lt;Cell &#39;Sheet1&#39;.A1&gt;\nprint(c1.value) # 用户信息\n\nc2 &#x3D; sheet.cell(1, 2)\nprint(c2)  # &lt;MergedCell &#39;Sheet1&#39;.B1&gt;\nprint(c2.value) # None\n\n\nfrom openpyxl import load_workbook\n\nwb &#x3D; load_workbook(&#39;files&#x2F;p1.xlsx&#39;)\nsheet &#x3D; wb.worksheets[2]\nfor row in sheet.rows:\n    print(row)\n\n&gt;&gt;&gt; 输出结果\n(&lt;Cell &#39;Sheet1&#39;.A1&gt;, &lt;MergedCell &#39;Sheet1&#39;.B1&gt;, &lt;Cell &#39;Sheet1&#39;.C1&gt;)\n(&lt;Cell &#39;Sheet1&#39;.A2&gt;, &lt;Cell &#39;Sheet1&#39;.B2&gt;, &lt;Cell &#39;Sheet1&#39;.C2&gt;)\n(&lt;Cell &#39;Sheet1&#39;.A3&gt;, &lt;Cell &#39;Sheet1&#39;.B3&gt;, &lt;Cell &#39;Sheet1&#39;.C3&gt;)\n(&lt;MergedCell &#39;Sheet1&#39;.A4&gt;, &lt;Cell &#39;Sheet1&#39;.B4&gt;, &lt;Cell &#39;Sheet1&#39;.C4&gt;)\n(&lt;Cell &#39;Sheet1&#39;.A5&gt;, &lt;Cell &#39;Sheet1&#39;.B5&gt;, &lt;Cell &#39;Sheet1&#39;.C5&gt;)\n\n5.1 写Excel在Excel中想要写文件，大致要分为在：\n\n原Excel文件基础上写内容。\nfrom openpyxl import load_workbook\n\nwb &#x3D; load_workbook(&#39;files&#x2F;p1.xlsx&#39;)\nsheet &#x3D; wb.worksheets[0]\n\n# 找到单元格，并修改单元格的内容\ncell &#x3D; sheet.cell(1, 1)\ncell.value &#x3D; &quot;新的开始&quot;\n\n# 将excel文件保存到p2.xlsx文件中\nwb.save(&quot;files&#x2F;p2.xlsx&quot;)\n\n新创建Excel文件写内容。\nfrom openpyxl import workbook\n\n# 创建excel且默认会创建一个sheet（名称为Sheet）\nwb &#x3D; workbook.Workbook()\n\nsheet &#x3D; wb.worksheets[0] # 或 sheet &#x3D; wb[&quot;Sheet&quot;]\n\n# 找到单元格，并修改单元格的内容\ncell &#x3D; sheet.cell(1, 1)\ncell.value &#x3D; &quot;新的开始&quot;\n\n# 将excel文件保存到p2.xlsx文件中\nwb.save(&quot;files&#x2F;p2.xlsx&quot;)\n\n在了解了如何读取Excel和创建Excel之后，后续对于Excel中的sheet和cell操作基本上都相同。\nfrom openpyxl import workbook\n\nwb &#x3D; workbook.Workbook() # Sheet\n\n# 1. 修改sheet名称\n&quot;&quot;&quot;\nsheet &#x3D; wb.worksheets[0]\nsheet.title &#x3D; &quot;数据集&quot;\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 2. 创建sheet并设置sheet颜色\n&quot;&quot;&quot;\nsheet &#x3D; wb.create_sheet(&quot;工作计划&quot;, 0)\nsheet.sheet_properties.tabColor &#x3D; &quot;1072BA&quot;\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 3. 默认打开的sheet\n&quot;&quot;&quot;\nwb.active &#x3D; 0\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 4. 拷贝sheet\n&quot;&quot;&quot;\nsheet &#x3D; wb.create_sheet(&quot;工作计划&quot;)\nsheet.sheet_properties.tabColor &#x3D; &quot;1072BA&quot;\n\nnew_sheet &#x3D; wb.copy_worksheet(wb[&quot;Sheet&quot;])\nnew_sheet.title &#x3D; &quot;新的计划&quot;\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 5.删除sheet\n&quot;&quot;&quot;\ndel wb[&quot;用户列表&quot;]\nwb.save(&#39;files&#x2F;p2.xlsx&#39;)\n&quot;&quot;&quot;\n\nfrom openpyxl import load_workbook\nfrom openpyxl.styles import Alignment, Border, Side, Font, PatternFill, GradientFill\n\n\nwb &#x3D; load_workbook(&#39;files&#x2F;p1.xlsx&#39;)\n\nsheet &#x3D; wb.worksheets[1]\n\n# 1. 获取某个单元格，修改值\n&quot;&quot;&quot;\ncell &#x3D; sheet.cell(1, 1)\ncell.value &#x3D; &quot;开始&quot;\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 2.  获取某个单元格，修改值\n&quot;&quot;&quot;\nsheet[&quot;B3&quot;] &#x3D; &quot;Alex&quot;\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 3. 获取某些单元格，修改值\n&quot;&quot;&quot;\ncell_list &#x3D; sheet[&quot;B2&quot;:&quot;C3&quot;]\nfor row in cell_list:\n    for cell in row:\n        cell.value &#x3D; &quot;新的值&quot;\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 4. 对齐方式\n&quot;&quot;&quot;\ncell &#x3D; sheet.cell(1, 1)\n\n# horizontal，水平方向对齐方式：&quot;general&quot;, &quot;left&quot;, &quot;center&quot;, &quot;right&quot;, &quot;fill&quot;, &quot;justify&quot;, &quot;centerContinuous&quot;, &quot;distributed&quot;\n# vertical，垂直方向对齐方式：&quot;top&quot;, &quot;center&quot;, &quot;bottom&quot;, &quot;justify&quot;, &quot;distributed&quot;\n# text_rotation，旋转角度。\n# wrap_text，是否自动换行。\ncell.alignment &#x3D; Alignment(horizontal&#x3D;&#39;center&#39;, vertical&#x3D;&#39;distributed&#39;, text_rotation&#x3D;45, wrap_text&#x3D;True)\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 5. 边框\n# side的style有如下：dashDot&#39;,&#39;dashDotDot&#39;, &#39;dashed&#39;,&#39;dotted&#39;,&#39;double&#39;,&#39;hair&#39;, &#39;medium&#39;, &#39;mediumDashDot&#39;, &#39;mediumDashDotDot&#39;,&#39;mediumDashed&#39;, &#39;slantDashDot&#39;, &#39;thick&#39;, &#39;thin&#39;\n&quot;&quot;&quot;\ncell &#x3D; sheet.cell(9, 2)\ncell.border &#x3D; Border(\n    top&#x3D;Side(style&#x3D;&quot;thin&quot;, color&#x3D;&quot;FFB6C1&quot;), \n    bottom&#x3D;Side(style&#x3D;&quot;dashed&quot;, color&#x3D;&quot;FFB6C1&quot;),\n    left&#x3D;Side(style&#x3D;&quot;dashed&quot;, color&#x3D;&quot;FFB6C1&quot;),\n    right&#x3D;Side(style&#x3D;&quot;dashed&quot;, color&#x3D;&quot;9932CC&quot;),\n    diagonal&#x3D;Side(style&#x3D;&quot;thin&quot;, color&#x3D;&quot;483D8B&quot;),  # 对角线\n    diagonalUp&#x3D;True,  # 左下 ~ 右上\n    diagonalDown&#x3D;True  # 左上 ~ 右下\n)\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 6.字体\n&quot;&quot;&quot;\ncell &#x3D; sheet.cell(5, 1)\ncell.font &#x3D; Font(name&#x3D;&quot;微软雅黑&quot;, size&#x3D;45, color&#x3D;&quot;ff0000&quot;, underline&#x3D;&quot;single&quot;)\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 7.背景色\n&quot;&quot;&quot;\ncell &#x3D; sheet.cell(5, 3)\ncell.fill &#x3D; PatternFill(&quot;solid&quot;, fgColor&#x3D;&quot;99ccff&quot;)\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 8.渐变背景色\n&quot;&quot;&quot;\ncell &#x3D; sheet.cell(5, 5)\ncell.fill &#x3D; GradientFill(&quot;linear&quot;, stop&#x3D;(&quot;FFFFFF&quot;, &quot;99ccff&quot;, &quot;000000&quot;))\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 9.宽高（索引从1开始）\n&quot;&quot;&quot;\nsheet.row_dimensions[1].height &#x3D; 50\nsheet.column_dimensions[&quot;E&quot;].width &#x3D; 100\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 10.合并单元格\n&quot;&quot;&quot;\nsheet.merge_cells(&quot;B2:D8&quot;)\nsheet.merge_cells(start_row&#x3D;15, start_column&#x3D;3, end_row&#x3D;18, end_column&#x3D;8)\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n&quot;&quot;&quot;\nsheet.unmerge_cells(&quot;B2:D8&quot;)\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 11.写入公式\n&quot;&quot;&quot;\nsheet &#x3D; wb.worksheets[3]\nsheet[&quot;D1&quot;] &#x3D; &quot;合计&quot;\nsheet[&quot;D2&quot;] &#x3D; &quot;&#x3D;B2*C2&quot;\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n&quot;&quot;&quot;\nsheet &#x3D; wb.worksheets[3]\nsheet[&quot;D3&quot;] &#x3D; &quot;&#x3D;SUM(B3,C3)&quot;\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 12.删除\n&quot;&quot;&quot;\n# idx，要删除的索引位置\n# amount，从索引位置开始要删除的个数（默认为1）\nsheet.delete_rows(idx&#x3D;1, amount&#x3D;20)\nsheet.delete_cols(idx&#x3D;1, amount&#x3D;3)\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 13.插入\n&quot;&quot;&quot;\nsheet.insert_rows(idx&#x3D;5, amount&#x3D;10)\nsheet.insert_cols(idx&#x3D;3, amount&#x3D;2)\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 14.循环写内容\n&quot;&quot;&quot;\nsheet &#x3D; wb[&quot;Sheet&quot;]\ncell_range &#x3D; sheet[&#39;A1:C2&#39;]\nfor row in cell_range:\n    for cell in row:\n        cell.value &#x3D; &quot;xx&quot;\n\nfor row in sheet.iter_rows(min_row&#x3D;5, min_col&#x3D;1, max_col&#x3D;7, max_row&#x3D;10):\n    for cell in row:\n        cell.value &#x3D; &quot;oo&quot;\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 15.移动\n&quot;&quot;&quot;\n# 将H2:J10范围的数据，向右移动15个位置、向上移动1个位置\nsheet.move_range(&quot;H2:J10&quot;,rows&#x3D;1, cols&#x3D;15)\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n&quot;&quot;&quot;\nsheet &#x3D; wb.worksheets[3]\nsheet[&quot;D1&quot;] &#x3D; &quot;合计&quot;\nsheet[&quot;D2&quot;] &#x3D; &quot;&#x3D;B2*C2&quot;\nsheet[&quot;D3&quot;] &#x3D; &quot;&#x3D;SUM(B3,C3)&quot;\nsheet.move_range(&quot;B1:D3&quot;,cols&#x3D;10, translate&#x3D;True) # 自动翻译公式\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 16.打印区域\n&quot;&quot;&quot;\nsheet.print_area &#x3D; &quot;A1:D200&quot;\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n# 17.打印时，每个页面的固定表头\n&quot;&quot;&quot;\nsheet.print_title_cols &#x3D; &quot;A:D&quot;\nsheet.print_title_rows &#x3D; &quot;1:3&quot;\nwb.save(&quot;p2.xlsx&quot;)\n&quot;&quot;&quot;\n\n\n\n6.压缩文件基于Python内置的shutil模块可以实现对压缩文件的操作。\nimport shutil\n\n# 1. 压缩文件\n&quot;&quot;&quot;\n# base_name，压缩后的压缩包文件\n# format，压缩的格式，例如：&quot;zip&quot;, &quot;tar&quot;, &quot;gztar&quot;, &quot;bztar&quot;, or &quot;xztar&quot;.\n# root_dir，要压缩的文件夹路径\n&quot;&quot;&quot;\n# shutil.make_archive(base_name&#x3D;r&#39;datafile&#39;,format&#x3D;&#39;zip&#39;,root_dir&#x3D;r&#39;files&#39;)\n\n\n# 2. 解压文件\n&quot;&quot;&quot;\n# filename，要解压的压缩包文件\n# extract_dir，解压的路径\n# format，压缩文件格式\n&quot;&quot;&quot;\n# shutil.unpack_archive(filename&#x3D;r&#39;datafile.zip&#39;, extract_dir&#x3D;r&#39;xxxxxx&#x2F;xo&#39;, format&#x3D;&#39;zip&#39;)\n\n\n\n7.路径相关7.1  转义windows路径使用的是\\，linux路径使用的是&#x2F;。\n特别的，在windows系统中如果有这样的一个路径 D:\\nxxx\\txxx\\x1，程序会报错。因为在路径中存在特殊符 \\n（换行符）和\\t（制表符），Python解释器无法自动区分。\n所以，在windows中编写路径时，一般有两种方式：\n\n加转义符，例如：&quot;D:\\\\nxxx\\\\txxx\\\\x1&quot;\n路径前加r，例如：r&quot;D:\\\\nxxx\\\\txxx\\\\x1&quot;\n\n7.2 程序当前路径项目中如果使用了相对路径，那么一定要注意当前所在的位置。\n例如：在/Users/wupeiqi/PycharmProjects/CodeRepository/路径下编写 demo.py文件\nwith open(&quot;a1.txt&quot;, mode&#x3D;&#39;w&#39;, encoding&#x3D;&#39;utf-8&#39;) as f:\n    f.write(&quot;你好呀&quot;)\n\n用以下两种方式去运行：\n\n方式1，文件会创建在 /Users/wupeiqi/PycharmProjects/CodeRepository/ 目录下。\ncd &#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;CodeRepository&#x2F;\npython demo.py\n\n方式2，文件会创建在 /Users/wupeiqi目录下。\ncd &#x2F;Users&#x2F;wupeiqi\npython &#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;CodeRepository&#x2F;demo.py\n\nimport os\n\n&quot;&quot;&quot;\n# 1.获取当前运行的py脚本所在路径\nabs &#x3D; os.path.abspath(__file__)\nprint(abs) # &#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09&#x2F;20.路径相关.py\npath &#x3D; os.path.dirname(abs)\nprint(path) # &#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;luffyCourse&#x2F;day09\n&quot;&quot;&quot;\nbase_dir &#x3D; os.path.dirname(os.path.abspath(__file__))\nfile_path &#x3D; os.path.join(base_dir, &#39;files&#39;, &#39;info.txt&#39;)\nprint(file_path)\nif os.path.exists(file_path):\n    file_object &#x3D; open(file_path, mode&#x3D;&#39;r&#39;, encoding&#x3D;&#39;utf-8&#39;)\n    data &#x3D; file_object.read()\n    file_object.close()\n\n    print(data)\nelse:\n    print(&#39;文件路径不存在&#39;)\n\n\n\n7.3 文件和路径相关import shutil\nimport os\n\n# 1. 获取当前脚本绝对路径\n&quot;&quot;&quot;\nabs_path &#x3D; os.path.abspath(__file__)\nprint(abs_path)\n&quot;&quot;&quot;\n\n# 2. 获取当前文件的上级目录\n&quot;&quot;&quot;\nbase_path &#x3D; os.path.dirname( os.path.dirname(路径) ）\nprint(base_path)\n&quot;&quot;&quot;\n\n# 3. 路径拼接\n&quot;&quot;&quot;\np1 &#x3D; os.path.join(base_path, &#39;xx&#39;)\nprint(p1)\n\np2 &#x3D; os.path.join(base_path, &#39;xx&#39;, &#39;oo&#39;, &#39;a1.png&#39;)\nprint(p2)\n&quot;&quot;&quot;\n\n# 4. 判断路径是否存在\n&quot;&quot;&quot;\nexists &#x3D; os.path.exists(p1)\nprint(exists)\n&quot;&quot;&quot;\n\n# 5. 创建文件夹\n&quot;&quot;&quot;\nos.makedirs(路径)\n&quot;&quot;&quot;\n&quot;&quot;&quot;\npath &#x3D; os.path.join(base_path, &#39;xx&#39;, &#39;oo&#39;, &#39;uuuu&#39;)\nif not os.path.exists(path):\n    os.makedirs(path)\n&quot;&quot;&quot;\n\n# 6. 是否是文件夹\n&quot;&quot;&quot;\nfile_path &#x3D; os.path.join(base_path, &#39;xx&#39;, &#39;oo&#39;, &#39;uuuu.png&#39;)\nis_dir &#x3D; os.path.isdir(file_path)\nprint(is_dir) # False\n\nfolder_path &#x3D; os.path.join(base_path, &#39;xx&#39;, &#39;oo&#39;, &#39;uuuu&#39;)\nis_dir &#x3D; os.path.isdir(folder_path)\nprint(is_dir) # True\n\n&quot;&quot;&quot;\n\n# 7. 删除文件或文件夹\n&quot;&quot;&quot;\nos.remove(&quot;文件路径&quot;)\n&quot;&quot;&quot;\n&quot;&quot;&quot;\npath &#x3D; os.path.join(base_path, &#39;xx&#39;)\nshutil.rmtree(path)\n&quot;&quot;&quot;\n\n# 8. 拷贝文件夹\n&quot;&quot;&quot;\nshutil.copytree(&quot;&#x2F;Users&#x2F;wupeiqi&#x2F;Desktop&#x2F;图&#x2F;csdn&#x2F;&quot;,&quot;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;CodeRepository&#x2F;files&quot;)\n&quot;&quot;&quot;\n\n# 9.拷贝文件\n&quot;&quot;&quot;\nshutil.copy(&quot;&#x2F;Users&#x2F;wupeiqi&#x2F;Desktop&#x2F;图&#x2F;csdn&#x2F;WX20201123-112406@2x.png&quot;,&quot;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;CodeRepository&#x2F;&quot;)\nshutil.copy(&quot;&#x2F;Users&#x2F;wupeiqi&#x2F;Desktop&#x2F;图&#x2F;csdn&#x2F;WX20201123-112406@2x.png&quot;,&quot;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;CodeRepository&#x2F;x.png&quot;)\n&quot;&quot;&quot;\n\n# 10.文件或文件夹重命名\n&quot;&quot;&quot;\nshutil.move(&quot;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;CodeRepository&#x2F;x.png&quot;,&quot;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;CodeRepository&#x2F;xxxx.png&quot;)\nshutil.move(&quot;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;CodeRepository&#x2F;files&quot;,&quot;&#x2F;Users&#x2F;wupeiqi&#x2F;PycharmProjects&#x2F;CodeRepository&#x2F;images&quot;)\n&quot;&quot;&quot;\n\n\n\n\n\n总结今天我们主要围绕着文件 相关的操作来展开进行讲解，让大家能够基于Python处理不同格式的文件。由于涉及的知识点比较多，所以今日的内容学起来会比较耗时，但都比较简单，只需要理解并编写好相关笔记以便后期开发时翻阅。\n\n文件相对路径，在使用相对路径时可能会执行程序的目录不同，导致路径出问题。所以，如若使用相对路径请务必清楚当前运行程序所在目录。\n\n文件绝对路径（推荐），不要将文件路径写死，而是基于 os 模块中的相关功能自动化获取绝对路径，以方便项目移动到其他文件或电脑上。\nimport os\nbase_dir &#x3D; os.path.dirname(os.path.abspath(__file__))\nfile_path &#x3D; os.path.join(base_dir, &#39;files&#39;, &#39;info.txt&#39;)\n\n路径转义\n\n手动写路径，需要自己在路径中添加 r 或 加入 \\ 来进行处理。\n基于os.path.join拼接，内部自动处理，不需要手动处理。\n\n\n内置函数、内置模块、第三方模块的区别？\n\n如何去下载安装第三方模块？\npip install 模块名称\n\n\nrequests模块，可以用来发送网络请求。\nopenpyxl模块，处理Excel格式的文件。\n\n\n基本文件的读写、打开模式、上下文管理。\n\n其他格式：csv、ini、xml、excel格式的处理（无序记忆，做好笔记即可）。\n\n\n作业\n基于csv格式实现 用户的注册 &amp; 登录认证。详细需求如下：\n\n用户注册时，新注册用户要写入文件csv文件中，输入Q或q则退出。\n用户登录时，逐行读取csv文件中的用户信息并进行校验。\n提示：文件路径须使用os模块构造的绝对路径的方式。\n\n\n补充代码：实现去网上获取指定地区的天气信息，并写入到Excel中。\nimport requests\n\nwhile True:\n    city &#x3D; input(&quot;请输入城市（Q&#x2F;q退出）：&quot;)\n    if city.upper() &#x3D;&#x3D; &quot;Q&quot;:\n        break\n    url &#x3D; &quot;http:&#x2F;&#x2F;ws.webxml.com.cn&#x2F;&#x2F;WebServices&#x2F;WeatherWebService.asmx&#x2F;getWeatherbyCityName?theCityName&#x3D;&#123;&#125;&quot;.format(city)\n    res &#x3D; requests.get(url&#x3D;url)\n    print（res.text）\n\n    # 1.提取XML格式中的数据\n    # 2.为每个城市创建一个sheet，并将获取的xml格式中的数据写入到excel中。 \n\n读取ini文件内容，按照规则写入到Excel中。\n\nini文件内容如下：\n[mysqld]\ndatadir&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql\nsocket&#x3D;&#x2F;var&#x2F;lib&#x2F;mysql&#x2F;mysql.sock\nlog-bin&#x3D;py-mysql-bin\ncharacter-set-server&#x3D;utf8\ncollation-server&#x3D;utf8_general_ci\nlog-error&#x3D;&#x2F;var&#x2F;log&#x2F;mysqld.log\n# Disabling symbolic-links is recommended to prevent assorted security risks\nsymbolic-links&#x3D;0\n\n[mysqld_safe]\nlog-error&#x3D;&#x2F;var&#x2F;log&#x2F;mariadb&#x2F;mariadb.log\npid-file&#x3D;&#x2F;var&#x2F;run&#x2F;mariadb&#x2F;mariadb.pid\n\n[client]\ndefault-character-set&#x3D;utf8\n\n读取ini格式的文件，并创建一个excel文件，且为每个节点创建一个sheet，然后将节点下的键值写入到excel中，按照如下格式。\n\n\n\n首行，字体白色 &amp; 单元格背景色蓝色。\n内容均居中。\n边框。\n\n\n\n\t\n\n补充代码，实现如下功能。\nimport requests\n\n# 1.下载文件\nfile_url &#x3D; &#39;https:&#x2F;&#x2F;files.cnblogs.com&#x2F;files&#x2F;wupeiqi&#x2F;HtmlStore.zip&#39;\nres &#x3D; requests.get(url&#x3D;file_url)\nprint(res.content)\n\n# 2.将下载的文件保存到当前执行脚本同级目录下 &#x2F;files&#x2F;package&#x2F; 目录下（且文件名为HtmlStore.zip）\n\n# 3.在将下载下来的文件解压到 &#x2F;files&#x2F;html&#x2F; 目录下\n\n","slug":"day09","date":"2023-09-09T04:17:53.000Z","categories_index":"","tags_index":"","author_index":"verfotta"},{"id":"b9663f58f18133b35bfe243f3e916a80","title":"Hello World","content":"Welcome to Hexo! This is your very first post. Check documentation for more info. If you get any problems when using Hexo, you can find the answer in troubleshooting or you can ask me on GitHub.\nQuick StartCreate a new post$ hexo new &quot;My New Post&quot;\n\nMore info: Writing\nRun server$ hexo server\n\nMore info: Server\nGenerate static files$ hexo generate\n\nMore info: Generating\nDeploy to remote sites$ hexo deploy\n\nMore info: Deployment\n","slug":"hello-world","date":"2023-09-08T13:40:09.079Z","categories_index":"","tags_index":"","author_index":"verfotta"}]