[{"id":"8bd5adbed0679b53813cfc50dc027ae7","title":"powerbi虎牙陪玩项目","content":"陪玩报告分析：分析工具Excel+PowerBI +Python（pandas&#x2F;seaborn）\n关键指标：根据业务发现关键指标订单量。\n对订单量进行汇总以及趋势性的分析。\n\n\n\n\n消除天数不同的影响，构建日均指标，三月日均订单量1.7w，四月1.3w，环比下降21%。\n\n三月总订单量约52.8万单，四月总订单量约40.3万单。环比下降25%。\n\n\n\n分维度统计\n\n\n\n3.1 大神维度\n\n\n\n大神玩家约有6800名，其中仅有26%的大神有订单。\n\n\n\n\n\n\n原因一：有订单大神人数下降，员工流失5%（内部因素）。\n\n\n\n原因二：人均订单数下降，考虑其他因素。（数据维度不够）\n\n\n\n其他因素：\n1.结合产品PV、UV，若PV、UV没有下降，则说明不是平台总体客户下降导致。若PV、UV 下降，则说明，外部因素导致整体APP平台客户下降。\n2.考虑疫情恢复、市场环境。\n\n\n\n\n\n信息提取：\n\n\n1.头部几位大神订单明显下降。2.整体分析：长尾效应。\n\n\n\n对应策略：\n\n\n\n如果是业务发展初期，希望大神为平台带来流量和资源，需要查看头部大神针对的市场，对大神做精细化切分：技术型or颜值型。如果是业务中期，应该消除长尾效应。保证平台健康度。\n\n\n\n\n\n\n信息提取：\n签约平台1-2个月的大神是主要订单创收者。\n对应策略：结合行业特色，喜欢新鲜面孔，用户粘性差，多招新鲜大神，重点扶持刚加入的大神，合理利用好的资源位。\n\n\n3.2大神团维度:\n\n\n\n信息提取：\n\n\n1.头部大神团订单下降。腰部大神团表现亮眼。2.无大神团的大神人数，订单少。\n对应策略：建议扶持腰部大神团，让大神团良性竞争，无团大神加入大神团。\n\n\n\n\n\n信息提取：\n\n1.一共有32个大神团99%所有的收入都是由大神团创造。\n2.头部20%的大神团提供了80%的订单。\n对应策略：签入更多大神团。\n\n\n\n\n\n\n横坐标为大神人数，浅蓝色代表没有订单的大神，深蓝色代表有订单的大神，纵坐标为大神团名称。\n信息提取：1.无团大神无订单大神最多。\n大神团中无订单的大神人数占比越高。\n对应策略：合理控制大神团可以签约的大神数。\n\n\n生成POWER BI动态报表，方便随时查询数据需求。\n\n\n\n\n","slug":"PBproject","date":"2023-09-09T04:17:53.000Z","categories_index":"","tags_index":"powerbi","author_index":"verfotta"},{"id":"e1002822ff36c5ef2c7bb076aa52d7a0","title":"政治献金分析","content":"美国2012年总统候选人政治献金数据分析导入包\nimport numpy as np\nimport pandas as pd\n\n方便大家操作，将月份和参选人以及所在政党进行定义\nmonths &#x3D; {‘JAN’ : 1, ‘FEB’ : 2, ‘MAR’ : 3, ‘APR’ : 4, ‘MAY’ : 5, ‘JUN’ : 6,          ‘JUL’ : 7, ‘AUG’ : 8, ‘SEP’ : 9, ‘OCT’: 10, ‘NOV’: 11, ‘DEC’ : 12}\n读取文件\npd.read_excel(&#39;.&#x2F;usa_elect&#x2F;contb_01.csv&#39;)\npd.read_excel(&#39;.&#x2F;usa_elect&#x2F;contb_02.csv&#39;)\npd.read_excel(&#39;.&#x2F;usa_elect&#x2F;contb_03.csv&#39;)\n\n\nimport os\n\n\nroot &#x3D; &#39;.&#x2F;usa_elect&#x2F;&#39;\n\nparty_df &#x3D; &quot;&quot;\ncontdf_list &#x3D; []\nfor fname in  os.listdir(root):\n    fpath &#x3D; os.path.join(root, fname)\n    if fname.endswith(&#39;.csv&#39;):\n        contdf_list.append(pd.read_csv(fpath))\n    elif fname.endswith(&#39;.xlsx&#39;):\n        party_df &#x3D; pd.read_excel(fpath, index_col&#x3D;0)\n    else:\n        print(&#39;其他文件不读取&#39;)\n\n其他文件不读取\n其他文件不读取\n\nlen(contdf_list)\n\n\n\n\n3\n\ncontb &#x3D; pd.concat(contdf_list, ignore_index&#x3D;True)\n\n查看文件样式以及基本信息\ncontb.info()\n\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 1001733 entries, 0 to 1001732\nData columns (total 7 columns):\n #   Column             Non-Null Count    Dtype  \n---  ------             --------------    -----  \n 0   cand_nm            1001733 non-null  object \n 1   contbr_nm          1001733 non-null  object \n 2   contbr_st          1001729 non-null  object \n 3   contbr_employer    988004 non-null   object \n 4   contbr_occupation  993303 non-null   object \n 5   contb_receipt_amt  1001733 non-null  float64\n 6   contb_receipt_dt   1001733 non-null  object \ndtypes: float64(1), object(6)\nmemory usage: 53.5+ MB\n\ncontb.head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      cand_nm\n      contbr_nm\n      contbr_st\n      contbr_employer\n      contbr_occupation\n      contb_receipt_amt\n      contb_receipt_dt\n    \n  \n  \n    \n      0\n      Bachmann, Michelle\n      HARVEY, WILLIAM\n      AL\n      RETIRED\n      RETIRED\n      250.0\n      20-JUN-11\n    \n    \n      1\n      Bachmann, Michelle\n      HARVEY, WILLIAM\n      AL\n      RETIRED\n      RETIRED\n      50.0\n      23-JUN-11\n    \n    \n      2\n      Bachmann, Michelle\n      SMITH, LANIER\n      AL\n      INFORMATION REQUESTED\n      INFORMATION REQUESTED\n      250.0\n      05-JUL-11\n    \n    \n      3\n      Bachmann, Michelle\n      BLEVINS, DARONDA\n      AR\n      NONE\n      RETIRED\n      250.0\n      01-AUG-11\n    \n    \n      4\n      Bachmann, Michelle\n      WARDENBURG, HAROLD\n      AR\n      NONE\n      RETIRED\n      300.0\n      20-JUN-11\n    \n  \n\n\n\n\n\n\n\nparty_df.info()\n\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nInt64Index: 13 entries, 0 to 12\nData columns (total 2 columns):\n #   Column  Non-Null Count  Dtype \n---  ------  --------------  ----- \n 0   names   13 non-null     object\n 1   party   13 non-null     object\ndtypes: object(2)\nmemory usage: 312.0+ bytes\n\nparty_df.head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      names\n      party\n    \n  \n  \n    \n      0\n      Bachmann, Michelle\n      Republican\n    \n    \n      1\n      Romney, Mitt\n      Republican\n    \n    \n      2\n      Obama, Barack\n      Democrat\n    \n    \n      3\n      Roemer, Charles E. 'Buddy' III\n      Reform\n    \n    \n      4\n      Pawlenty, Timothy\n      Republican\n    \n  \n\n\n\n\n\n\n使用map函数+字典，新建一列各个候选人所在党派party\nparty_df\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      names\n      party\n    \n  \n  \n    \n      0\n      Bachmann, Michelle\n      Republican\n    \n    \n      1\n      Romney, Mitt\n      Republican\n    \n    \n      2\n      Obama, Barack\n      Democrat\n    \n    \n      3\n      Roemer, Charles E. 'Buddy' III\n      Reform\n    \n    \n      4\n      Pawlenty, Timothy\n      Republican\n    \n    \n      5\n      Johnson, Gary Earl\n      Libertarian\n    \n    \n      6\n      Paul, Ron\n      Republican\n    \n    \n      7\n      Santorum, Rick\n      Republican\n    \n    \n      8\n      Cain, Herman\n      Republican\n    \n    \n      9\n      Gingrich, Newt\n      Republican\n    \n    \n      10\n      McCotter, Thaddeus G\n      Republican\n    \n    \n      11\n      Huntsman, Jon\n      Republican\n    \n    \n      12\n      Perry, Rick\n      Republican\n    \n  \n\n\n\n\n\n\n\ncontb.head()\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      cand_nm\n      contbr_nm\n      contbr_st\n      contbr_employer\n      contbr_occupation\n      contb_receipt_amt\n      contb_receipt_dt\n    \n  \n  \n    \n      0\n      Bachmann, Michelle\n      HARVEY, WILLIAM\n      AL\n      RETIRED\n      RETIRED\n      250.0\n      20-JUN-11\n    \n    \n      1\n      Bachmann, Michelle\n      HARVEY, WILLIAM\n      AL\n      RETIRED\n      RETIRED\n      50.0\n      23-JUN-11\n    \n    \n      2\n      Bachmann, Michelle\n      SMITH, LANIER\n      AL\n      INFORMATION REQUESTED\n      INFORMATION REQUESTED\n      250.0\n      05-JUL-11\n    \n    \n      3\n      Bachmann, Michelle\n      BLEVINS, DARONDA\n      AR\n      NONE\n      RETIRED\n      250.0\n      01-AUG-11\n    \n    \n      4\n      Bachmann, Michelle\n      WARDENBURG, HAROLD\n      AR\n      NONE\n      RETIRED\n      300.0\n      20-JUN-11\n    \n  \n\n\n\n\n\n\n\ncontb_part &#x3D; pd.merge(left&#x3D;contb, right&#x3D;party_df, left_on&#x3D;&#39;cand_nm&#39;, right_on&#x3D;&#39;names&#39;, how&#x3D;&#39;left&#39;)\n\n查看单独一行，是否加上了’party’一列\ncontb_part.head(1)\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      cand_nm\n      contbr_nm\n      contbr_st\n      contbr_employer\n      contbr_occupation\n      contb_receipt_amt\n      contb_receipt_dt\n      names\n      party\n    \n  \n  \n    \n      0\n      Bachmann, Michelle\n      HARVEY, WILLIAM\n      AL\n      RETIRED\n      RETIRED\n      250.0\n      20-JUN-11\n      Bachmann, Michelle\n      Republican\n    \n  \n\n\n\n\n\n\n使用np.unique()函数查看colums：party这一列中有哪些元素\n# 查看由多少个党派参与了竞选\ncontb_part.party.unique()\n\n\n\n\narray([&#39;Republican&#39;, &#39;Democrat&#39;, &#39;Reform&#39;, &#39;Libertarian&#39;], dtype=object)\n\n查看党派的支持度，可以查看支持的次数， 可以查看支持的钱数使用value_counts()函数，统计party列中各个元素出现次数\nimport matplotlib.pyplot as plt\n%matplotlib inline\n\n\ncontb_part.party.value_counts().plot(kind&#x3D;&#39;bar&#39;)\n\n\n\n\n&lt;Axes: &gt;\n\n​    \n使用groupby()函数，查看各个党派收到的政治献金总数contb_receipt_amt\ncontb_part.head(2)\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      cand_nm\n      contbr_nm\n      contbr_st\n      contbr_employer\n      contbr_occupation\n      contb_receipt_amt\n      contb_receipt_dt\n      names\n      party\n    \n  \n  \n    \n      0\n      Bachmann, Michelle\n      HARVEY, WILLIAM\n      AL\n      RETIRED\n      RETIRED\n      250.0\n      20-JUN-11\n      Bachmann, Michelle\n      Republican\n    \n    \n      1\n      Bachmann, Michelle\n      HARVEY, WILLIAM\n      AL\n      RETIRED\n      RETIRED\n      50.0\n      23-JUN-11\n      Bachmann, Michelle\n      Republican\n    \n  \n\n\n\n\n\n\n\ncontb_part.groupby(&#39;party&#39;)[&#39;contb_receipt_amt&#39;].sum().plot(kind&#x3D;&#39;bar&#39;)\n\n\n\n\n&lt;Axes: xlabel=&#39;party&#39;&gt;\n\n​    \n查看具体每天各个党派收到的政治献金总数contb_receipt_amt使用groupby([多个分组参数])\ncontb_part.info()\n\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nInt64Index: 1001733 entries, 0 to 1001732\nData columns (total 9 columns):\n #   Column             Non-Null Count    Dtype  \n---  ------             --------------    -----  \n 0   cand_nm            1001733 non-null  object \n 1   contbr_nm          1001733 non-null  object \n 2   contbr_st          1001729 non-null  object \n 3   contbr_employer    988004 non-null   object \n 4   contbr_occupation  993303 non-null   object \n 5   contb_receipt_amt  1001733 non-null  float64\n 6   contb_receipt_dt   1001733 non-null  object \n 7   names              1001733 non-null  object \n 8   party              1001733 non-null  object \ndtypes: float64(1), object(8)\nmemory usage: 76.4+ MB\n\nimport datetime\n\n\ndatetime.datetime(2022,2,11)\n\n\ndatetime.datetime(2022, 2, 11, 0, 0)\n\n# pandas to_datetime函数，可以批量转换符合时间格式的字符串为时间类型（Timestamp）\npd.to_datetime(&#39;2022-2-11&#39;)\n\n\nTimestamp(&#39;2022-02-11 00:00:00&#39;)\n\npd.to_datetime(&#39;20-六月-2011&#39;)\n\n\n# 备注：20-JUN-11是一个标准欧式时间格式日-月-年，只要是标准的时间格式字符串，都可以适用pd.to_datetime()进行批量转换\n# 假设20-JUN-11是不符合标准时间格式的，因为业务表的记录过程中，难免会出现一些人为的错误操作\n# 经验提示：我们在设计原始数据表的时候，为了方便时间类型的转换，应该指定标准的时间格式\ncontb_part.contb_receipt_dt\n\n查看日期格式，并将其转换为Pandas的日期格式,通过函数加map方式进行转换\nmonth_dict &#x3D; &#123;&#39;JAN&#39; : 1, &#39;FEB&#39; : 2, &#39;MAR&#39; : 3, &#39;APR&#39; : 4, &#39;MAY&#39; : 5, &#39;JUN&#39; : 6,\n          &#39;JUL&#39; : 7, &#39;AUG&#39; : 8, &#39;SEP&#39; : 9, &#39;OCT&#39;: 10, &#39;NOV&#39;: 11, &#39;DEC&#39; : 12&#125;\n\n\n# &#39;20-JUN-11&#39; --&gt; &#39;2011-06-20&#39;\ndef transform_date_string(x):\n    # 判断接收的x是否为一个字符串对象\n    if isinstance(x, str):\n        day, mon, year &#x3D; x.split(&#39;-&#39;)\n        month &#x3D; month_dict[mon]\n        return &#39;20%d-%d-%d&#39;%(int(year), int(month), int(day))\n\n\ntransform_date_string(&#39;20-JUN-11&#39;)\n\n\n\n\n&#39;2011-6-20&#39;\n\ndate_string &#x3D; contb_part.contb_receipt_dt.map(transform_date_string)\n\n\npd.to_datetime(date_string)\n\n\n\n\n0         2011-06-20\n1         2011-06-23\n2         2011-07-05\n3         2011-08-01\n4         2011-06-20\n             ...    \n1001728   2011-09-29\n1001729   2011-09-30\n1001730   2011-09-29\n1001731   2011-09-30\n1001732   2011-08-31\nName: contb_receipt_dt, Length: 1001733, dtype: datetime64[ns]\n\ncontb_part.contb_receipt_dt &#x3D; pd.to_datetime(date_string)\n\n查看是否转换成功\ncontb_part.info()\n\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nInt64Index: 1001733 entries, 0 to 1001732\nData columns (total 9 columns):\n #   Column             Non-Null Count    Dtype         \n---  ------             --------------    -----         \n 0   cand_nm            1001733 non-null  object        \n 1   contbr_nm          1001733 non-null  object        \n 2   contbr_st          1001729 non-null  object        \n 3   contbr_employer    988004 non-null   object        \n 4   contbr_occupation  993303 non-null   object        \n 5   contb_receipt_amt  1001733 non-null  float64       \n 6   contb_receipt_dt   1001733 non-null  datetime64[ns]\n 7   names              1001733 non-null  object        \n 8   party              1001733 non-null  object        \ndtypes: datetime64[ns](1), float64(1), object(7)\nmemory usage: 76.4+ MB\n\n将时间转换为时间数据类型根据时间进行排序\ncontb_part.sort_values(by&#x3D;&#39;contb_receipt_dt&#39;, inplace&#x3D;True)\n\n得到转换后的，每天各政党所收政治献金数目。  \n考察知识点：groupby（多个字段）\ncontb_part.head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      cand_nm\n      contbr_nm\n      contbr_st\n      contbr_employer\n      contbr_occupation\n      contb_receipt_amt\n      contb_receipt_dt\n      names\n      party\n    \n  \n  \n    \n      922063\n      Cain, Herman\n      TRIBBLE, JAMES\n      TX\n      NONE\n      RETIRED\n      1000.0\n      2011-01-01\n      Cain, Herman\n      Republican\n    \n    \n      922062\n      Cain, Herman\n      STOLTENBERG, WAYNE\n      TX\n      CINCO RESOURCES\n      CFO\n      5200.0\n      2011-01-01\n      Cain, Herman\n      Republican\n    \n    \n      923362\n      Cain, Herman\n      MAREK, JOHN\n      WI\n      INFORMATION REQUESTED\n      INFORMATION REQUESTED\n      2400.0\n      2011-01-01\n      Cain, Herman\n      Republican\n    \n    \n      922064\n      Cain, Herman\n      DAVIS, JEREMY S MR.\n      TX\n      INTL PETROLEUM ASSOC OF AMERICA\n      INVESTOR\n      2400.0\n      2011-01-03\n      Cain, Herman\n      Republican\n    \n    \n      923363\n      Cain, Herman\n      SIDNEY, SCOTT\n      WI\n      SELF EMPLOYED\n      CONTRACTOR\n      2400.0\n      2011-01-03\n      Cain, Herman\n      Republican\n    \n  \n\n\n\n\n\n\n\ngroup_df &#x3D; contb_part.groupby(by&#x3D;[&#39;contb_receipt_dt&#39;,&#39;party&#39;])[&#39;contb_receipt_amt&#39;].sum()\n\n【知识点】使用unstack()将上面所得数据中的party从一级索引变成列索引,unstack(‘party’)\npiovt_table &#x3D; group_df.unstack()\npiovt_table.fillna(value&#x3D;0.0, inplace&#x3D;True)\n\n\npiovt_table.plot(kind&#x3D;&#39;line&#39;)\n\n\n\n\n&lt;Axes: xlabel=&#39;contb_receipt_dt&#39;&gt;\n\n\npiovt_table\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      party\n      Democrat\n      Libertarian\n      Reform\n      Republican\n    \n    \n      contb_receipt_dt\n      \n      \n      \n      \n    \n  \n  \n    \n      2011-01-01\n      0.00\n      0.0\n      0.0\n      8600.00\n    \n    \n      2011-01-03\n      0.00\n      0.0\n      0.0\n      4800.00\n    \n    \n      2011-01-04\n      0.00\n      0.0\n      0.0\n      5000.00\n    \n    \n      2011-01-12\n      0.00\n      0.0\n      0.0\n      4150.00\n    \n    \n      2011-01-13\n      0.00\n      0.0\n      0.0\n      4000.00\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      2012-04-26\n      537115.38\n      1805.0\n      25.0\n      505311.33\n    \n    \n      2012-04-27\n      745269.95\n      350.0\n      560.0\n      593983.56\n    \n    \n      2012-04-28\n      479677.34\n      0.0\n      110.0\n      80759.16\n    \n    \n      2012-04-29\n      349744.69\n      0.0\n      0.0\n      61421.02\n    \n    \n      2012-04-30\n      3499159.38\n      0.0\n      35.0\n      787702.81\n    \n  \n\n466 rows × 4 columns\n\n\n\n\n\n使用上面获取的数据画出各党派累计政治献金,cumsum()累加函数\npiovt_table.cumsum().plot(kind&#x3D;&#39;line&#39;)\n\n\n\n\n&lt;Axes: xlabel=&#39;contb_receipt_dt&#39;&gt;\n\n\n把时间作为列，党派作为行来观察,unstack(‘contb_receipt’)\npiovt_table.T\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      contb_receipt_dt\n      2011-01-01\n      2011-01-03\n      2011-01-04\n      2011-01-12\n      2011-01-13\n      2011-01-14\n      2011-01-15\n      2011-01-16\n      2011-01-17\n      2011-01-18\n      ...\n      2012-04-21\n      2012-04-22\n      2012-04-23\n      2012-04-24\n      2012-04-25\n      2012-04-26\n      2012-04-27\n      2012-04-28\n      2012-04-29\n      2012-04-30\n    \n    \n      party\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      Democrat\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      ...\n      324834.43\n      210774.49\n      771284.52\n      887405.45\n      697150.70\n      537115.38\n      745269.95\n      479677.34\n      349744.69\n      3499159.38\n    \n    \n      Libertarian\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      ...\n      0.00\n      5785.00\n      1000.00\n      500.00\n      2745.12\n      1805.00\n      350.00\n      0.00\n      0.00\n      0.00\n    \n    \n      Reform\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      ...\n      0.00\n      100.00\n      510.00\n      25.00\n      100.00\n      25.00\n      560.00\n      110.00\n      0.00\n      35.00\n    \n    \n      Republican\n      8600.0\n      4800.0\n      5000.0\n      4150.0\n      4000.0\n      6000.0\n      500.0\n      750.0\n      500.0\n      4800.0\n      ...\n      81083.38\n      71269.44\n      742814.09\n      819865.08\n      482124.68\n      505311.33\n      593983.56\n      80759.16\n      61421.02\n      787702.81\n    \n  \n\n4 rows × 466 columns\n\n\n\n\n\n使用stack()把party变成二级行索引,注意所有的值都不能为nan，需要填充为0\npiovt_table.stack()\n\n\n\n\ncontb_receipt_dt  party      \n2011-01-01        Democrat             0.00\n                  Libertarian          0.00\n                  Reform               0.00\n                  Republican        8600.00\n2011-01-03        Democrat             0.00\n                                    ...    \n2012-04-29        Republican       61421.02\n2012-04-30        Democrat       3499159.38\n                  Libertarian          0.00\n                  Reform              35.00\n                  Republican      787702.81\nLength: 1864, dtype: float64\n\n查看候选人姓名cand_nm和政治献金捐献者职业contbr_occupation，以及捐献情况。能看出各个候选人主要的支持者分布情况练习：groupy，sum()求和\ncontb_part.groupby(by&#x3D;[&#39;cand_nm&#39;,&#39;contbr_occupation&#39;])[&#39;contb_receipt_amt&#39;].sum()\n\n\n\n\ncand_nm             contbr_occupation             \nBachmann, Michelle  --                                  75.00\n                    100% DISABLED VETERAN             1869.50\n                    100% DISABLED VIETNAM VETERAN      236.25\n                    A/C AND HEAT                       250.00\n                    ACADEMIC EMPLOYMENT SPECIALIST      25.00\n                                                       ...   \nSantorum, Rick      WRITER/PROFESSOR                   910.00\n                    X-RAY TECHNICIAN                  2500.00\n                    XRAY TECH                          380.00\n                    YOUTH MINISTER                     475.00\n                    YOUTH MINISTRY                     250.00\nName: contb_receipt_amt, Length: 59313, dtype: float64\n\n查看老兵主要支持谁：DISABLED VETERAN考察Series索引\ncondtion &#x3D; contb_part.contbr_occupation &#x3D;&#x3D; &#39;DISABLED VETERAN&#39;\n\ngood_man &#x3D; contb_part.loc[condtion, &#39;cand_nm&#39;].value_counts()\n\n把索引变成列,Series.reset_index()\ngood_man_df &#x3D; good_man.reset_index()\ngood_man_df.columns &#x3D; [&#39;cont_nm&#39;, &#39;cand_nm&#39;]\ngood_man_df\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      cont_nm\n      cand_nm\n    \n  \n  \n    \n      0\n      Obama, Barack\n      97\n    \n    \n      1\n      Paul, Ron\n      46\n    \n    \n      2\n      Santorum, Rick\n      6\n    \n    \n      3\n      Cain, Herman\n      3\n    \n    \n      4\n      Roemer, Charles E. 'Buddy' III\n      1\n    \n    \n      5\n      Gingrich, Newt\n      1\n    \n  \n\n\n\n\n\n\n找出各个候选人的捐赠者中，捐赠金额最大的人的职业以及捐献额  \n通过query(“查询条件来查找捐献人职业”)\nmax_amt &#x3D; contb_part.contb_receipt_amt.max()\n\ncondition &#x3D; contb_part.contb_receipt_amt &#x3D;&#x3D; max_amt\n\n\ncontb_part.loc[condition]\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      cand_nm\n      contbr_nm\n      contbr_st\n      contbr_employer\n      contbr_occupation\n      contb_receipt_amt\n      contb_receipt_dt\n      names\n      party\n    \n  \n  \n    \n      325136\n      Obama, Barack\n      OBAMA VICTORY FUND 2012 - UNITEMIZED\n      IL\n      NaN\n      NaN\n      2014490.51\n      2012-02-29\n      Obama, Barack\n      Democrat\n    \n  \n\n\n\n\n\n\n\nmax_amt\n\n\n\n\n2014490.51\n\n# 适用query 查询\ncontb_part.query(f&#39;contb_receipt_amt &#x3D;&#x3D; &#123;max_amt&#125;&#39;)\n# contb_part.query(&#39;contb_receipt_amt &#x3D;&#x3D; 2014490.51&#39;)\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      cand_nm\n      contbr_nm\n      contbr_st\n      contbr_employer\n      contbr_occupation\n      contb_receipt_amt\n      contb_receipt_dt\n      names\n      party\n    \n  \n  \n    \n      325136\n      Obama, Barack\n      OBAMA VICTORY FUND 2012 - UNITEMIZED\n      IL\n      NaN\n      NaN\n      2014490.51\n      2012-02-29\n      Obama, Barack\n      Democrat\n    \n  \n\n\n\n\n","slug":"PYproject","date":"2023-09-09T04:17:53.000Z","categories_index":"","tags_index":"pandas","author_index":"verfotta"},{"id":"387d709d3dc4267a87491248751c16da","title":"荣誉证书","content":"个人简介荣誉证书1. 中国大学生计算机设计大赛国家二等奖\n2. 第三届全国大学生大数据技能竞赛三等奖\n3.大学生创新创业项目省级奖项\n","slug":"Honor","date":"2023-09-09T04:17:53.000Z","categories_index":"","tags_index":"荣誉证书","author_index":"verfotta"},{"id":"8e5e6bd4de7184f13b84872bd28754d4","title":"餐饮店选址分析","content":"上海餐饮店选址分析地区人流量占比\n餐饮类别气泡图\n地区餐饮店数量\n各类型餐饮店数量\n类别评分\n评分与消费金额关系\n热地图\n故事\n\n结合这张图可以看出，点评人数几乎和评分没有什么关系\n\n仪表盘\n\n","slug":"TBproject","date":"2023-09-09T04:17:53.000Z","categories_index":"","tags_index":"tableau","author_index":"verfotta"},{"id":"ff52f4ae253aef32f50e414d6d2d634b","title":"人口密度分析","content":"美国各州人口密度分析import numpy as np\nimport pandas as pd\n\n首先导入文件，并查看数据样本# 州的全称和州名称简写对应关系表\nabb &#x3D; pd.read_csv(&#39;.&#x2F;data&#x2F;state-abbrevs.csv&#39;)\n\n\n# 州的全称和面积表\nareas &#x3D; pd.read_csv(&#39;.&#x2F;data&#x2F;state-areas.csv&#39;)\n\n\n# 州名称的简写和面积表，包括年龄和年份信息\npopulation &#x3D; pd.read_csv(&#39;.&#x2F;data&#x2F;state-population.csv&#39;)\n\n\ndisplay(abb.head(), areas.head(), population.head())\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state\n      abbreviation\n    \n  \n  \n    \n      0\n      Alabama\n      AL\n    \n    \n      1\n      Alaska\n      AK\n    \n    \n      2\n      Arizona\n      AZ\n    \n    \n      3\n      Arkansas\n      AR\n    \n    \n      4\n      California\n      CA\n    \n  \n\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state\n      area (sq. mi)\n    \n  \n  \n    \n      0\n      Alabama\n      52423\n    \n    \n      1\n      Alaska\n      656425\n    \n    \n      2\n      Arizona\n      114006\n    \n    \n      3\n      Arkansas\n      53182\n    \n    \n      4\n      California\n      163707\n    \n  \n\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state/region\n      ages\n      year\n      population\n    \n  \n  \n    \n      0\n      AL\n      under18\n      2012\n      1117489.0\n    \n    \n      1\n      AL\n      total\n      2012\n      4817528.0\n    \n    \n      2\n      AL\n      under18\n      2010\n      1130966.0\n    \n    \n      3\n      AL\n      total\n      2010\n      4785570.0\n    \n    \n      4\n      AL\n      under18\n      2011\n      1125763.0\n    \n  \n\n\n\n\n合并pop与abbrevs两个DataFrame，分别依据state&#x2F;region列和abbreviation列来合并。为了保留所有信息，使用外合并。\n# 根据某一列或几列来合并\n# 默认合并的规则是查找字段名称相同的列\n# 合并的列在内容上，要存在一对一、一对多、多对多的关系\npd.merge(left&#x3D;population, right&#x3D;abb, left_on&#x3D;&#39;state&#x2F;region&#39;, right_on&#x3D;&#39;abbreviation&#39;, how&#x3D;&#39;inner&#39;)\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state/region\n      ages\n      year\n      population\n      state\n      abbreviation\n    \n  \n  \n    \n      0\n      AL\n      under18\n      2012\n      1117489.0\n      Alabama\n      AL\n    \n    \n      1\n      AL\n      total\n      2012\n      4817528.0\n      Alabama\n      AL\n    \n    \n      2\n      AL\n      under18\n      2010\n      1130966.0\n      Alabama\n      AL\n    \n    \n      3\n      AL\n      total\n      2010\n      4785570.0\n      Alabama\n      AL\n    \n    \n      4\n      AL\n      under18\n      2011\n      1125763.0\n      Alabama\n      AL\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      2443\n      WY\n      under18\n      1993\n      137458.0\n      Wyoming\n      WY\n    \n    \n      2444\n      WY\n      total\n      1991\n      459260.0\n      Wyoming\n      WY\n    \n    \n      2445\n      WY\n      under18\n      1991\n      136720.0\n      Wyoming\n      WY\n    \n    \n      2446\n      WY\n      under18\n      1990\n      136078.0\n      Wyoming\n      WY\n    \n    \n      2447\n      WY\n      total\n      1990\n      453690.0\n      Wyoming\n      WY\n    \n  \n\n2448 rows × 6 columns\n\n\n\n\n\nabb.abbreviation.unique()\n\n\n\n\narray([&#39;AL&#39;, &#39;AK&#39;, &#39;AZ&#39;, &#39;AR&#39;, &#39;CA&#39;, &#39;CO&#39;, &#39;CT&#39;, &#39;DE&#39;, &#39;DC&#39;, &#39;FL&#39;, &#39;GA&#39;,\n       &#39;HI&#39;, &#39;ID&#39;, &#39;IL&#39;, &#39;IN&#39;, &#39;IA&#39;, &#39;KS&#39;, &#39;KY&#39;, &#39;LA&#39;, &#39;ME&#39;, &#39;MT&#39;, &#39;NE&#39;,\n       &#39;NV&#39;, &#39;NH&#39;, &#39;NJ&#39;, &#39;NM&#39;, &#39;NY&#39;, &#39;NC&#39;, &#39;ND&#39;, &#39;OH&#39;, &#39;OK&#39;, &#39;OR&#39;, &#39;MD&#39;,\n       &#39;MA&#39;, &#39;MI&#39;, &#39;MN&#39;, &#39;MS&#39;, &#39;MO&#39;, &#39;PA&#39;, &#39;RI&#39;, &#39;SC&#39;, &#39;SD&#39;, &#39;TN&#39;, &#39;TX&#39;,\n       &#39;UT&#39;, &#39;VT&#39;, &#39;VA&#39;, &#39;WA&#39;, &#39;WV&#39;, &#39;WI&#39;, &#39;WY&#39;], dtype=object)\n\npopulation[&#39;state&#x2F;region&#39;].unique()\n\n\n\n\narray([&#39;AL&#39;, &#39;AK&#39;, &#39;AZ&#39;, &#39;AR&#39;, &#39;CA&#39;, &#39;CO&#39;, &#39;CT&#39;, &#39;DE&#39;, &#39;DC&#39;, &#39;FL&#39;, &#39;GA&#39;,\n       &#39;HI&#39;, &#39;ID&#39;, &#39;IL&#39;, &#39;IN&#39;, &#39;IA&#39;, &#39;KS&#39;, &#39;KY&#39;, &#39;LA&#39;, &#39;ME&#39;, &#39;MD&#39;, &#39;MA&#39;,\n       &#39;MI&#39;, &#39;MN&#39;, &#39;MS&#39;, &#39;MO&#39;, &#39;MT&#39;, &#39;NE&#39;, &#39;NV&#39;, &#39;NH&#39;, &#39;NJ&#39;, &#39;NM&#39;, &#39;NY&#39;,\n       &#39;NC&#39;, &#39;ND&#39;, &#39;OH&#39;, &#39;OK&#39;, &#39;OR&#39;, &#39;PA&#39;, &#39;RI&#39;, &#39;SC&#39;, &#39;SD&#39;, &#39;TN&#39;, &#39;TX&#39;,\n       &#39;UT&#39;, &#39;VT&#39;, &#39;VA&#39;, &#39;WA&#39;, &#39;WV&#39;, &#39;WI&#39;, &#39;WY&#39;, &#39;PR&#39;, &#39;USA&#39;],\n      dtype=object)\n\n# PR USA这两个简称，在abb表中，是不存在的\nset(population[&#39;state&#x2F;region&#39;].unique()) - set(abb.abbreviation.unique())  \n\n\n\n\n&#123;&#39;PR&#39;, &#39;USA&#39;&#125;\n\ntemp &#x3D; pd.merge(left&#x3D;population, right&#x3D;abb, left_on&#x3D;&#39;state&#x2F;region&#39;, right_on&#x3D;&#39;abbreviation&#39;, how&#x3D;&#39;outer&#39;)\n\n\n# USA不是一个州，是美国的全称\ntemp.loc[temp[&#39;state&#x2F;region&#39;] &#x3D;&#x3D; &#39;USA&#39;]\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state/region\n      ages\n      year\n      population\n      state\n      abbreviation\n    \n  \n  \n    \n      2496\n      USA\n      under18\n      1990\n      64218512.0\n      NaN\n      NaN\n    \n    \n      2497\n      USA\n      total\n      1990\n      249622814.0\n      NaN\n      NaN\n    \n    \n      2498\n      USA\n      total\n      1991\n      252980942.0\n      NaN\n      NaN\n    \n    \n      2499\n      USA\n      under18\n      1991\n      65313018.0\n      NaN\n      NaN\n    \n    \n      2500\n      USA\n      under18\n      1992\n      66509177.0\n      NaN\n      NaN\n    \n    \n      2501\n      USA\n      total\n      1992\n      256514231.0\n      NaN\n      NaN\n    \n    \n      2502\n      USA\n      total\n      1993\n      259918595.0\n      NaN\n      NaN\n    \n    \n      2503\n      USA\n      under18\n      1993\n      67594938.0\n      NaN\n      NaN\n    \n    \n      2504\n      USA\n      under18\n      1994\n      68640936.0\n      NaN\n      NaN\n    \n    \n      2505\n      USA\n      total\n      1994\n      263125826.0\n      NaN\n      NaN\n    \n    \n      2506\n      USA\n      under18\n      1995\n      69473140.0\n      NaN\n      NaN\n    \n    \n      2507\n      USA\n      under18\n      1996\n      70233512.0\n      NaN\n      NaN\n    \n    \n      2508\n      USA\n      total\n      1995\n      266278403.0\n      NaN\n      NaN\n    \n    \n      2509\n      USA\n      total\n      1996\n      269394291.0\n      NaN\n      NaN\n    \n    \n      2510\n      USA\n      total\n      1997\n      272646932.0\n      NaN\n      NaN\n    \n    \n      2511\n      USA\n      under18\n      1997\n      70920738.0\n      NaN\n      NaN\n    \n    \n      2512\n      USA\n      under18\n      1998\n      71431406.0\n      NaN\n      NaN\n    \n    \n      2513\n      USA\n      total\n      1998\n      275854116.0\n      NaN\n      NaN\n    \n    \n      2514\n      USA\n      under18\n      1999\n      71946051.0\n      NaN\n      NaN\n    \n    \n      2515\n      USA\n      total\n      2000\n      282162411.0\n      NaN\n      NaN\n    \n    \n      2516\n      USA\n      under18\n      2000\n      72376189.0\n      NaN\n      NaN\n    \n    \n      2517\n      USA\n      total\n      1999\n      279040181.0\n      NaN\n      NaN\n    \n    \n      2518\n      USA\n      total\n      2001\n      284968955.0\n      NaN\n      NaN\n    \n    \n      2519\n      USA\n      under18\n      2001\n      72671175.0\n      NaN\n      NaN\n    \n    \n      2520\n      USA\n      total\n      2002\n      287625193.0\n      NaN\n      NaN\n    \n    \n      2521\n      USA\n      under18\n      2002\n      72936457.0\n      NaN\n      NaN\n    \n    \n      2522\n      USA\n      total\n      2003\n      290107933.0\n      NaN\n      NaN\n    \n    \n      2523\n      USA\n      under18\n      2003\n      73100758.0\n      NaN\n      NaN\n    \n    \n      2524\n      USA\n      total\n      2004\n      292805298.0\n      NaN\n      NaN\n    \n    \n      2525\n      USA\n      under18\n      2004\n      73297735.0\n      NaN\n      NaN\n    \n    \n      2526\n      USA\n      total\n      2005\n      295516599.0\n      NaN\n      NaN\n    \n    \n      2527\n      USA\n      under18\n      2005\n      73523669.0\n      NaN\n      NaN\n    \n    \n      2528\n      USA\n      total\n      2006\n      298379912.0\n      NaN\n      NaN\n    \n    \n      2529\n      USA\n      under18\n      2006\n      73757714.0\n      NaN\n      NaN\n    \n    \n      2530\n      USA\n      total\n      2007\n      301231207.0\n      NaN\n      NaN\n    \n    \n      2531\n      USA\n      under18\n      2007\n      74019405.0\n      NaN\n      NaN\n    \n    \n      2532\n      USA\n      total\n      2008\n      304093966.0\n      NaN\n      NaN\n    \n    \n      2533\n      USA\n      under18\n      2008\n      74104602.0\n      NaN\n      NaN\n    \n    \n      2534\n      USA\n      under18\n      2013\n      73585872.0\n      NaN\n      NaN\n    \n    \n      2535\n      USA\n      total\n      2013\n      316128839.0\n      NaN\n      NaN\n    \n    \n      2536\n      USA\n      total\n      2009\n      306771529.0\n      NaN\n      NaN\n    \n    \n      2537\n      USA\n      under18\n      2009\n      74134167.0\n      NaN\n      NaN\n    \n    \n      2538\n      USA\n      under18\n      2010\n      74119556.0\n      NaN\n      NaN\n    \n    \n      2539\n      USA\n      total\n      2010\n      309326295.0\n      NaN\n      NaN\n    \n    \n      2540\n      USA\n      under18\n      2011\n      73902222.0\n      NaN\n      NaN\n    \n    \n      2541\n      USA\n      total\n      2011\n      311582564.0\n      NaN\n      NaN\n    \n    \n      2542\n      USA\n      under18\n      2012\n      73708179.0\n      NaN\n      NaN\n    \n    \n      2543\n      USA\n      total\n      2012\n      313873685.0\n      NaN\n      NaN\n    \n  \n\n\n\n\n\n查看存在缺失数据的列。使用.isnull().any()，只有某一列存在一个缺失数据，就会显示True。\ntemp.isnull().any()\n\n\n\n\nstate/region    False\nages            False\nyear            False\npopulation       True\nstate            True\nabbreviation     True\ndtype: bool\n\n根据数据是否缺失情况显示数据，如果缺失为True，那么显示temp.loc[temp.isnull().any(axis&#x3D;1)]\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state/region\n      ages\n      year\n      population\n      state\n      abbreviation\n    \n  \n  \n    \n      2448\n      PR\n      under18\n      1990\n      NaN\n      NaN\n      NaN\n    \n    \n      2449\n      PR\n      total\n      1990\n      NaN\n      NaN\n      NaN\n    \n    \n      2450\n      PR\n      total\n      1991\n      NaN\n      NaN\n      NaN\n    \n    \n      2451\n      PR\n      under18\n      1991\n      NaN\n      NaN\n      NaN\n    \n    \n      2452\n      PR\n      total\n      1993\n      NaN\n      NaN\n      NaN\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      2539\n      USA\n      total\n      2010\n      309326295.0\n      NaN\n      NaN\n    \n    \n      2540\n      USA\n      under18\n      2011\n      73902222.0\n      NaN\n      NaN\n    \n    \n      2541\n      USA\n      total\n      2011\n      311582564.0\n      NaN\n      NaN\n    \n    \n      2542\n      USA\n      under18\n      2012\n      73708179.0\n      NaN\n      NaN\n    \n    \n      2543\n      USA\n      total\n      2012\n      313873685.0\n      NaN\n      NaN\n    \n  \n\n96 rows × 6 columns\n\n\n\n\n找到有哪些state&#x2F;region使得state的值为NaN，使用unique()查看非重复值temp.loc[temp.isnull().any(axis&#x3D;1), &#39;state&#x2F;region&#39;].unique()\n\n\n\n\narray([&#39;PR&#39;, &#39;USA&#39;], dtype=object)\n\n为找到的这些state&#x2F;region的state项补上正确的值，从而去除掉state这一列的所有NaN！temp.head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state/region\n      ages\n      year\n      population\n      state\n      abbreviation\n    \n  \n  \n    \n      0\n      AL\n      under18\n      2012\n      1117489.0\n      Alabama\n      AL\n    \n    \n      1\n      AL\n      total\n      2012\n      4817528.0\n      Alabama\n      AL\n    \n    \n      2\n      AL\n      under18\n      2010\n      1130966.0\n      Alabama\n      AL\n    \n    \n      3\n      AL\n      total\n      2010\n      4785570.0\n      Alabama\n      AL\n    \n    \n      4\n      AL\n      under18\n      2011\n      1125763.0\n      Alabama\n      AL\n    \n  \n\n\n\n\n\n经过分析，只有PR和USA对应的state有空值，所以只需要填写这两组数据即可\nUSA  –&gt;  USAPR  –&gt; \nareas.head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state\n      area (sq. mi)\n    \n  \n  \n    \n      0\n      Alabama\n      52423\n    \n    \n      1\n      Alaska\n      656425\n    \n    \n      2\n      Arizona\n      114006\n    \n    \n      3\n      Arkansas\n      53182\n    \n    \n      4\n      California\n      163707\n    \n  \n\n\n\n\n\n\n# 面积表中存在PR州对应的全称 Puerto Rico\n# 简写和全称对应不上关系的时候的处理逻辑？？  业务方确认\nset(areas[&#39;state&#39;]) - set(abb[&#39;state&#39;])\n\n\n\n\n&#123;&#39;Puerto Rico&#39;&#125;\n\ntemp.loc[temp[&#39;state&#x2F;region&#39;] &#x3D;&#x3D; &#39;PR&#39;, &#39;state&#39;] &#x3D; &#39;Puerto Rico&#39;\n\n\n# 间接访问不可取  可以读， 不可以写。 写成功也不行\n# temp.loc[temp[&#39;state&#x2F;region&#39;] &#x3D;&#x3D; &#39;PR&#39;][&#39;state&#39;] &#x3D; &#39;PPP&#39;\n\nC:\\Users\\Dancer\\Anaconda3\\lib\\site-packages\\ipykernel_launcher.py:1: SettingWithCopyWarning: \nA value is trying to be set on a copy of a slice from a DataFrame.\nTry using .loc[row_indexer,col_indexer] = value instead\n\nSee the caveats in the documentation: http://pandas.pydata.org/pandas-docs/stable/user_guide/indexing.html#returning-a-view-versus-a-copy\n  &quot;&quot;&quot;Entry point for launching an IPython kernel.\n\n# 查看使得state为空的州还有哪些\ntemp.loc[temp[&#39;state&#39;].isnull(), &#39;state&#x2F;region&#39;].unique()\n\n\n\n\narray([&#39;USA&#39;], dtype=object)\n\n合并各州面积数据areas，使用左合并。思考一下为什么使用外合并？\n# 由于USA是全美国的数据，不需要保留，可以删除\n# 把sate&#x2F;region &#x3D;&#x3D; USA的数据删除\n\nusa_index &#x3D; temp.loc[temp[&#39;state&#x2F;region&#39;] &#x3D;&#x3D; &#39;USA&#39;].index\npop_abb &#x3D; temp.drop(labels&#x3D;usa_index).copy()\n\n\npop_abb.isnull().any()\n\n\n\n\nstate/region    False\nages            False\nyear            False\npopulation       True\nstate           False\nabbreviation     True\ndtype: bool\n\npop_abb &#x3D; pop_abb.drop(labels&#x3D;[&#39;abbreviation&#39;], axis&#x3D;1)\n\n继续寻找存在缺失数据的列# 由于2000年之前，并没有统计过PR州的人口数据，所以删除\npop_abb.loc[pop_abb.population.isnull()]\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state/region\n      ages\n      year\n      population\n      state\n    \n  \n  \n    \n      2448\n      PR\n      under18\n      1990\n      NaN\n      Puerto Rico\n    \n    \n      2449\n      PR\n      total\n      1990\n      NaN\n      Puerto Rico\n    \n    \n      2450\n      PR\n      total\n      1991\n      NaN\n      Puerto Rico\n    \n    \n      2451\n      PR\n      under18\n      1991\n      NaN\n      Puerto Rico\n    \n    \n      2452\n      PR\n      total\n      1993\n      NaN\n      Puerto Rico\n    \n    \n      2453\n      PR\n      under18\n      1993\n      NaN\n      Puerto Rico\n    \n    \n      2454\n      PR\n      under18\n      1992\n      NaN\n      Puerto Rico\n    \n    \n      2455\n      PR\n      total\n      1992\n      NaN\n      Puerto Rico\n    \n    \n      2456\n      PR\n      under18\n      1994\n      NaN\n      Puerto Rico\n    \n    \n      2457\n      PR\n      total\n      1994\n      NaN\n      Puerto Rico\n    \n    \n      2458\n      PR\n      total\n      1995\n      NaN\n      Puerto Rico\n    \n    \n      2459\n      PR\n      under18\n      1995\n      NaN\n      Puerto Rico\n    \n    \n      2460\n      PR\n      under18\n      1996\n      NaN\n      Puerto Rico\n    \n    \n      2461\n      PR\n      total\n      1996\n      NaN\n      Puerto Rico\n    \n    \n      2462\n      PR\n      under18\n      1998\n      NaN\n      Puerto Rico\n    \n    \n      2463\n      PR\n      total\n      1998\n      NaN\n      Puerto Rico\n    \n    \n      2464\n      PR\n      total\n      1997\n      NaN\n      Puerto Rico\n    \n    \n      2465\n      PR\n      under18\n      1997\n      NaN\n      Puerto Rico\n    \n    \n      2466\n      PR\n      total\n      1999\n      NaN\n      Puerto Rico\n    \n    \n      2467\n      PR\n      under18\n      1999\n      NaN\n      Puerto Rico\n    \n  \n\n\n\n\n\n\npop_abb.isnull().any()\n\n\n\n\nstate/region    False\nages            False\nyear            False\npopulation       True\nstate           False\ndtype: bool\n\npop_abb.dropna().isnull().any()\n\n\n\n\nstate/region    False\nages            False\nyear            False\npopulation      False\nstate           False\ndtype: bool\n\n# 删除人口为空的所有行\npop_abb.dropna(inplace&#x3D;True)\n\n\npop_abb.head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state/region\n      ages\n      year\n      population\n      state\n    \n  \n  \n    \n      0\n      AL\n      under18\n      2012\n      1117489.0\n      Alabama\n    \n    \n      1\n      AL\n      total\n      2012\n      4817528.0\n      Alabama\n    \n    \n      2\n      AL\n      under18\n      2010\n      1130966.0\n      Alabama\n    \n    \n      3\n      AL\n      total\n      2010\n      4785570.0\n      Alabama\n    \n    \n      4\n      AL\n      under18\n      2011\n      1125763.0\n      Alabama\n    \n  \n\n\n\n\n\n\nareas.head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state\n      area (sq. mi)\n    \n  \n  \n    \n      0\n      Alabama\n      52423\n    \n    \n      1\n      Alaska\n      656425\n    \n    \n      2\n      Arizona\n      114006\n    \n    \n      3\n      Arkansas\n      53182\n    \n    \n      4\n      California\n      163707\n    \n  \n\n\n\n\n\n\n# 使用外合并，保证数据的完整\ntotal &#x3D; pd.merge(left&#x3D;pop_abb, right&#x3D;areas, how&#x3D;&#39;outer&#39;)\n\n我们会发现area(sq.mi)这一列有缺失数据，为了找出是哪一行，我们需要找出是哪个state没有数据total.isnull().any()\n\n\n\n\nstate/region     False\nages             False\nyear             False\npopulation       False\nstate            False\narea (sq. mi)    False\ndtype: bool\n\n去除含有缺失数据的行\n\n找出2010年的全民人口数据,df.query(查询语句)pop_2010_total &#x3D; total.query(&#39;year &#x3D;&#x3D; 2010 &amp; ages &#x3D;&#x3D; &quot;total&quot;&#39;)\n\n\npop_abb.info()\n\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nInt64Index: 2476 entries, 0 to 2495\nData columns (total 5 columns):\nstate/region    2476 non-null object\nages            2476 non-null object\nyear            2476 non-null int64\npopulation      2476 non-null float64\nstate           2476 non-null object\ndtypes: float64(1), int64(1), object(3)\nmemory usage: 116.1+ KB\n\ncon1 &#x3D; total.year &#x3D;&#x3D; 2010\ncon2 &#x3D; total.ages &#x3D;&#x3D; &#39;total&#39;\n\n\ntotal.loc[con1 &amp; con2]\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state/region\n      ages\n      year\n      population\n      state\n      area (sq. mi)\n    \n  \n  \n    \n      3\n      AL\n      total\n      2010\n      4785570.0\n      Alabama\n      52423\n    \n    \n      91\n      AK\n      total\n      2010\n      713868.0\n      Alaska\n      656425\n    \n    \n      101\n      AZ\n      total\n      2010\n      6408790.0\n      Arizona\n      114006\n    \n    \n      189\n      AR\n      total\n      2010\n      2922280.0\n      Arkansas\n      53182\n    \n    \n      197\n      CA\n      total\n      2010\n      37333601.0\n      California\n      163707\n    \n    \n      283\n      CO\n      total\n      2010\n      5048196.0\n      Colorado\n      104100\n    \n    \n      293\n      CT\n      total\n      2010\n      3579210.0\n      Connecticut\n      5544\n    \n    \n      379\n      DE\n      total\n      2010\n      899711.0\n      Delaware\n      1954\n    \n    \n      389\n      DC\n      total\n      2010\n      605125.0\n      District of Columbia\n      68\n    \n    \n      475\n      FL\n      total\n      2010\n      18846054.0\n      Florida\n      65758\n    \n    \n      485\n      GA\n      total\n      2010\n      9713248.0\n      Georgia\n      59441\n    \n    \n      570\n      HI\n      total\n      2010\n      1363731.0\n      Hawaii\n      10932\n    \n    \n      581\n      ID\n      total\n      2010\n      1570718.0\n      Idaho\n      83574\n    \n    \n      666\n      IL\n      total\n      2010\n      12839695.0\n      Illinois\n      57918\n    \n    \n      677\n      IN\n      total\n      2010\n      6489965.0\n      Indiana\n      36420\n    \n    \n      762\n      IA\n      total\n      2010\n      3050314.0\n      Iowa\n      56276\n    \n    \n      773\n      KS\n      total\n      2010\n      2858910.0\n      Kansas\n      82282\n    \n    \n      858\n      KY\n      total\n      2010\n      4347698.0\n      Kentucky\n      40411\n    \n    \n      869\n      LA\n      total\n      2010\n      4545392.0\n      Louisiana\n      51843\n    \n    \n      954\n      ME\n      total\n      2010\n      1327366.0\n      Maine\n      35387\n    \n    \n      965\n      MD\n      total\n      2010\n      5787193.0\n      Maryland\n      12407\n    \n    \n      1050\n      MA\n      total\n      2010\n      6563263.0\n      Massachusetts\n      10555\n    \n    \n      1061\n      MI\n      total\n      2010\n      9876149.0\n      Michigan\n      96810\n    \n    \n      1146\n      MN\n      total\n      2010\n      5310337.0\n      Minnesota\n      86943\n    \n    \n      1157\n      MS\n      total\n      2010\n      2970047.0\n      Mississippi\n      48434\n    \n    \n      1242\n      MO\n      total\n      2010\n      5996063.0\n      Missouri\n      69709\n    \n    \n      1253\n      MT\n      total\n      2010\n      990527.0\n      Montana\n      147046\n    \n    \n      1338\n      NE\n      total\n      2010\n      1829838.0\n      Nebraska\n      77358\n    \n    \n      1349\n      NV\n      total\n      2010\n      2703230.0\n      Nevada\n      110567\n    \n    \n      1434\n      NH\n      total\n      2010\n      1316614.0\n      New Hampshire\n      9351\n    \n    \n      1445\n      NJ\n      total\n      2010\n      8802707.0\n      New Jersey\n      8722\n    \n    \n      1530\n      NM\n      total\n      2010\n      2064982.0\n      New Mexico\n      121593\n    \n    \n      1541\n      NY\n      total\n      2010\n      19398228.0\n      New York\n      54475\n    \n    \n      1626\n      NC\n      total\n      2010\n      9559533.0\n      North Carolina\n      53821\n    \n    \n      1637\n      ND\n      total\n      2010\n      674344.0\n      North Dakota\n      70704\n    \n    \n      1722\n      OH\n      total\n      2010\n      11545435.0\n      Ohio\n      44828\n    \n    \n      1733\n      OK\n      total\n      2010\n      3759263.0\n      Oklahoma\n      69903\n    \n    \n      1818\n      OR\n      total\n      2010\n      3837208.0\n      Oregon\n      98386\n    \n    \n      1829\n      PA\n      total\n      2010\n      12710472.0\n      Pennsylvania\n      46058\n    \n    \n      1914\n      RI\n      total\n      2010\n      1052669.0\n      Rhode Island\n      1545\n    \n    \n      1925\n      SC\n      total\n      2010\n      4636361.0\n      South Carolina\n      32007\n    \n    \n      2010\n      SD\n      total\n      2010\n      816211.0\n      South Dakota\n      77121\n    \n    \n      2021\n      TN\n      total\n      2010\n      6356683.0\n      Tennessee\n      42146\n    \n    \n      2106\n      TX\n      total\n      2010\n      25245178.0\n      Texas\n      268601\n    \n    \n      2117\n      UT\n      total\n      2010\n      2774424.0\n      Utah\n      84904\n    \n    \n      2202\n      VT\n      total\n      2010\n      625793.0\n      Vermont\n      9615\n    \n    \n      2213\n      VA\n      total\n      2010\n      8024417.0\n      Virginia\n      42769\n    \n    \n      2298\n      WA\n      total\n      2010\n      6742256.0\n      Washington\n      71303\n    \n    \n      2309\n      WV\n      total\n      2010\n      1854146.0\n      West Virginia\n      24231\n    \n    \n      2394\n      WI\n      total\n      2010\n      5689060.0\n      Wisconsin\n      65503\n    \n    \n      2405\n      WY\n      total\n      2010\n      564222.0\n      Wyoming\n      97818\n    \n    \n      2470\n      PR\n      total\n      2010\n      3721208.0\n      Puerto Rico\n      3515\n    \n  \n\n\n\n\n\n对查询结果进行处理，以state列作为新的行索引:set_indextotal[&#39;density&#39;] &#x3D; total[&#39;population&#39;]&#x2F;total[&#39;area (sq. mi)&#39;]\n\n\ndensity_df &#x3D; total.query(&#39;year &#x3D;&#x3D; 2012 &amp; ages &#x3D;&#x3D; &quot;total&quot;&#39;).sort_values(&#39;density&#39;, ascending&#x3D;False)\n\n\ndensity_df.set_index(&#39;state&#39;).head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      state/region\n      ages\n      year\n      population\n      area (sq. mi)\n      density\n    \n    \n      state\n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      District of Columbia\n      DC\n      total\n      2012\n      633427.0\n      68\n      9315.102941\n    \n    \n      Puerto Rico\n      PR\n      total\n      2012\n      3651545.0\n      3515\n      1038.846373\n    \n    \n      New Jersey\n      NJ\n      total\n      2012\n      8867749.0\n      8722\n      1016.710502\n    \n    \n      Rhode Island\n      RI\n      total\n      2012\n      1050304.0\n      1545\n      679.808414\n    \n    \n      Connecticut\n      CT\n      total\n      2012\n      3591765.0\n      5544\n      647.865260\n    \n  \n\n\n\n\n\n计算人口密度。注意是Series&#x2F;Series，其结果还是一个Series。排序，并找出人口密度最高的五个州sort_values()","slug":"美国各州人口密度分析","date":"2023-09-09T04:17:53.000Z","categories_index":"","tags_index":"pandas","author_index":"verfotta"},{"id":"3d9d038cb0872dd03dea32d865f59a41","title":"用户消费分析","content":"用户消费分析import numpy as np\nimport pandas as pd\nfrom pandas import DataFrame,Series\nimport matplotlib.pyplot as plt\n#CDNOW_master.txt\n\n\n第一部分：数据类型处理\n数据加载\n字段含义：\nuser_id:用户ID\norder_dt:购买日期\norder_product:购买产品的数量\norder_amount:购买金额\n\n\n\n\n观察数据\n查看数据的数据类型\n数据中是否存储在缺失值\n将order_dt转换成时间类型\n查看数据的统计描述\n计算所有用户购买商品的平均数量\n计算所有用户购买商品的平均花费\n\n\n在源数据中添加一列表示月份:astype(‘datetime64[M]’)\n\n\n\n#数据的加载\ndf &#x3D; pd.read_csv(&#39;.&#x2F;data&#x2F;CDNOW_master.txt&#39;,header&#x3D;None,sep&#x3D;&#39;\\s+&#39;,names&#x3D;[&#39;user_id&#39;,&#39;order_dt&#39;,&#39;order_product&#39;,&#39;order_amount&#39;])\ndf\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      user_id\n      order_dt\n      order_product\n      order_amount\n    \n  \n  \n    \n      0\n      1\n      19970101\n      1\n      11.77\n    \n    \n      1\n      2\n      19970112\n      1\n      12.00\n    \n    \n      2\n      2\n      19970112\n      5\n      77.00\n    \n    \n      3\n      3\n      19970102\n      2\n      20.76\n    \n    \n      4\n      3\n      19970330\n      2\n      20.76\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      69654\n      23568\n      19970405\n      4\n      83.74\n    \n    \n      69655\n      23568\n      19970422\n      1\n      14.99\n    \n    \n      69656\n      23569\n      19970325\n      2\n      25.74\n    \n    \n      69657\n      23570\n      19970325\n      3\n      51.12\n    \n    \n      69658\n      23570\n      19970326\n      2\n      42.96\n    \n  \n\n69659 rows × 4 columns\n\n\n\n\n\ndf.info()\n\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 69659 entries, 0 to 69658\nData columns (total 4 columns):\n #   Column         Non-Null Count  Dtype  \n---  ------         --------------  -----  \n 0   user_id        69659 non-null  int64  \n 1   order_dt       69659 non-null  int64  \n 2   order_product  69659 non-null  int64  \n 3   order_amount   69659 non-null  float64\ndtypes: float64(1), int64(3)\nmemory usage: 2.1 MB\n\n#将order_dt转换成时间类型\ndf[&#39;order_dt&#39;] &#x3D; pd.to_datetime(df[&#39;order_dt&#39;],format&#x3D;&#39;%Y%m%d&#39;)\n\n\ndf\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      user_id\n      order_dt\n      order_product\n      order_amount\n    \n  \n  \n    \n      0\n      1\n      1997-01-01\n      1\n      11.77\n    \n    \n      1\n      2\n      1997-01-12\n      1\n      12.00\n    \n    \n      2\n      2\n      1997-01-12\n      5\n      77.00\n    \n    \n      3\n      3\n      1997-01-02\n      2\n      20.76\n    \n    \n      4\n      3\n      1997-03-30\n      2\n      20.76\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      69654\n      23568\n      1997-04-05\n      4\n      83.74\n    \n    \n      69655\n      23568\n      1997-04-22\n      1\n      14.99\n    \n    \n      69656\n      23569\n      1997-03-25\n      2\n      25.74\n    \n    \n      69657\n      23570\n      1997-03-25\n      3\n      51.12\n    \n    \n      69658\n      23570\n      1997-03-26\n      2\n      42.96\n    \n  \n\n69659 rows × 4 columns\n\n\n\n\n\ndf.info()\n\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 69659 entries, 0 to 69658\nData columns (total 4 columns):\n #   Column         Non-Null Count  Dtype         \n---  ------         --------------  -----         \n 0   user_id        69659 non-null  int64         \n 1   order_dt       69659 non-null  datetime64[ns]\n 2   order_product  69659 non-null  int64         \n 3   order_amount   69659 non-null  float64       \ndtypes: datetime64[ns](1), float64(1), int64(2)\nmemory usage: 2.1 MB\n\n#查看数据的统计描述\ndf.describe()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      user_id\n      order_product\n      order_amount\n    \n  \n  \n    \n      count\n      69659.000000\n      69659.000000\n      69659.000000\n    \n    \n      mean\n      11470.854592\n      2.410040\n      35.893648\n    \n    \n      std\n      6819.904848\n      2.333924\n      36.281942\n    \n    \n      min\n      1.000000\n      1.000000\n      0.000000\n    \n    \n      25%\n      5506.000000\n      1.000000\n      14.490000\n    \n    \n      50%\n      11410.000000\n      2.000000\n      25.980000\n    \n    \n      75%\n      17273.000000\n      3.000000\n      43.700000\n    \n    \n      max\n      23570.000000\n      99.000000\n      1286.010000\n    \n  \n\n\n\n\n\n\n#基于order_dt取出其中的月份\ndf[&#39;order_dt&#39;].astype(&#39;datetime64[M]&#39;)\n\n\n\n\n0       1997-01-01\n1       1997-01-12\n2       1997-01-12\n3       1997-01-02\n4       1997-03-30\n           ...    \n69654   1997-04-05\n69655   1997-04-22\n69656   1997-03-25\n69657   1997-03-25\n69658   1997-03-26\nName: order_dt, Length: 69659, dtype: datetime64[ns]\n\n#在源数据中添加一列表示月份:astype(&#39;datetime64[M]&#39;)\ndf[&#39;month&#39;] &#x3D; df[&#39;order_dt&#39;].astype(&#39;datetime64[M]&#39;)\n\n\ndf\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      user_id\n      order_dt\n      order_product\n      order_amount\n      month\n    \n  \n  \n    \n      0\n      1\n      1997-01-01\n      1\n      11.77\n      1997-01-01\n    \n    \n      1\n      2\n      1997-01-12\n      1\n      12.00\n      1997-01-12\n    \n    \n      2\n      2\n      1997-01-12\n      5\n      77.00\n      1997-01-12\n    \n    \n      3\n      3\n      1997-01-02\n      2\n      20.76\n      1997-01-02\n    \n    \n      4\n      3\n      1997-03-30\n      2\n      20.76\n      1997-03-30\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      69654\n      23568\n      1997-04-05\n      4\n      83.74\n      1997-04-05\n    \n    \n      69655\n      23568\n      1997-04-22\n      1\n      14.99\n      1997-04-22\n    \n    \n      69656\n      23569\n      1997-03-25\n      2\n      25.74\n      1997-03-25\n    \n    \n      69657\n      23570\n      1997-03-25\n      3\n      51.12\n      1997-03-25\n    \n    \n      69658\n      23570\n      1997-03-26\n      2\n      42.96\n      1997-03-26\n    \n  \n\n69659 rows × 5 columns\n\n\n\n\n\ndf.info()\n\n&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 69659 entries, 0 to 69658\nData columns (total 5 columns):\n #   Column         Non-Null Count  Dtype         \n---  ------         --------------  -----         \n 0   user_id        69659 non-null  int64         \n 1   order_dt       69659 non-null  datetime64[ns]\n 2   order_product  69659 non-null  int64         \n 3   order_amount   69659 non-null  float64       \n 4   month          69659 non-null  datetime64[ns]\ndtypes: datetime64[ns](2), float64(1), int64(2)\nmemory usage: 2.7 MB\n\n第二部分：按月数据分析\n用户每月花费的总金额\n绘制曲线图展示\n\n\n所有用户每月的产品购买量\n所有用户每月的消费总次数\n统计每月的消费人数\n\n#用户每月花费的总金额\ndf.groupby(by&#x3D;&#39;month&#39;)[&#39;order_amount&#39;].sum()\n\n\nmonth\n1997-01-01    7515.35\n1997-01-02    8025.95\n1997-01-03    7475.04\n1997-01-04    6722.93\n1997-01-05    9274.80\n               ...   \n1998-06-26    1646.63\n1998-06-27    2985.14\n1998-06-28    1388.44\n1998-06-29    2003.36\n1998-06-30    2180.65\nName: order_amount, Length: 546, dtype: float64\n\n# plt.plot(df.groupby(by&#x3D;&#39;month&#39;)[&#39;order_amount&#39;].sum())\ndf.groupby(by&#x3D;&#39;month&#39;)[&#39;order_amount&#39;].sum().plot()\n\n\n&lt;Axes: xlabel=&#39;month&#39;&gt;\n\n\n#所有用户每月的产品购买量\ndf.groupby(by&#x3D;&#39;month&#39;)[&#39;order_product&#39;].sum().plot()\n\n\n\n\n&lt;matplotlib.axes._subplots.AxesSubplot at 0x1115d2978&gt;\n\n​    \n#所有用户每月的消费总次数(原始数据中的一行数据表示一次消费记录)\ndf.groupby(by&#x3D;&#39;month&#39;)[&#39;user_id&#39;].count()\n\n\nmonth\n1997-01-01     8928\n1997-02-01    11272\n1997-03-01    11598\n1997-04-01     3781\n1997-05-01     2895\n1997-06-01     3054\n1997-07-01     2942\n1997-08-01     2320\n1997-09-01     2296\n1997-10-01     2562\n1997-11-01     2750\n1997-12-01     2504\n1998-01-01     2032\n1998-02-01     2026\n1998-03-01     2793\n1998-04-01     1878\n1998-05-01     1985\n1998-06-01     2043\nName: user_id, dtype: int64\n\n#统计每月的消费人数(可能同一天一个用户会消费多次) nunique表示统计去重后的个数\ndf.groupby(by&#x3D;&#39;month&#39;)[&#39;user_id&#39;].nunique()\n\n\n\n\nmonth\n1997-01-01    7846\n1997-02-01    9633\n1997-03-01    9524\n1997-04-01    2822\n1997-05-01    2214\n1997-06-01    2339\n1997-07-01    2180\n1997-08-01    1772\n1997-09-01    1739\n1997-10-01    1839\n1997-11-01    2028\n1997-12-01    1864\n1998-01-01    1537\n1998-02-01    1551\n1998-03-01    2060\n1998-04-01    1437\n1998-05-01    1488\n1998-06-01    1506\nName: user_id, dtype: int64\n\n第三部分：用户个体消费数据分析\n用户消费总金额和消费总次数的统计描述\n用户消费金额和消费产品数量的散点图\n各个用户消费总金额的直方分布图(消费金额在1000之内的分布)\n各个用户消费的总数量的直方分布图(消费商品的数量在100次之内的分布)\n\n#用户消费总金额和消费总次数的统计描述\ndf.groupby(by&#x3D;&#39;user_id&#39;)[&#39;order_amount&#39;].sum() #每一个用户消费的总金额\n\n\n\n\nuser_id\n1         11.77\n2         89.00\n3        156.46\n4        100.50\n5        385.61\n6         20.99\n7        264.67\n8        197.66\n9         95.85\n10        39.31\n11        58.55\n12        57.06\n13        72.94\n14        29.92\n15        52.87\n16        79.87\n17        73.22\n18        14.96\n19       175.12\n20       653.01\n21        75.11\n22        14.37\n23        24.74\n24        57.77\n25       137.53\n26       102.69\n27       135.87\n28        90.99\n29       435.81\n30        28.34\n          ...  \n23541     57.34\n23542     77.43\n23543     50.76\n23544    134.63\n23545     24.99\n23546     13.97\n23547     23.54\n23548     23.54\n23549     27.13\n23550     25.28\n23551    264.63\n23552     49.38\n23553     98.58\n23554     36.37\n23555    189.18\n23556    203.00\n23557     14.37\n23558    145.60\n23559    111.65\n23560     18.36\n23561     83.46\n23562     29.33\n23563     58.75\n23564     70.01\n23565     11.77\n23566     36.00\n23567     20.97\n23568    121.70\n23569     25.74\n23570     94.08\nName: order_amount, Length: 23570, dtype: float64\n\n#每一个用户消费的总次数\ndf.groupby(by&#x3D;&#39;user_id&#39;).count()[&#39;order_dt&#39;]\n\n\n\n\nuser_id\n1         1\n2         2\n3         6\n4         4\n5        11\n6         1\n7         3\n8         8\n9         3\n10        1\n11        4\n12        1\n13        1\n14        1\n15        1\n16        4\n17        1\n18        1\n19        2\n20        2\n21        2\n22        1\n23        1\n24        2\n25        8\n26        2\n27        2\n28        3\n29       12\n30        2\n         ..\n23541     2\n23542     1\n23543     1\n23544     3\n23545     1\n23546     1\n23547     2\n23548     1\n23549     1\n23550     1\n23551     6\n23552     2\n23553     2\n23554     2\n23555     5\n23556     7\n23557     1\n23558     4\n23559     3\n23560     1\n23561     3\n23562     1\n23563     2\n23564     3\n23565     1\n23566     1\n23567     1\n23568     3\n23569     1\n23570     2\nName: order_dt, Length: 23570, dtype: int64\n\n#用户消费金额和消费产品数量的散点图\nuser_amount_sum &#x3D; df.groupby(by&#x3D;&#39;user_id&#39;)[&#39;order_amount&#39;].sum()\nuser_product_sum &#x3D; df.groupby(by&#x3D;&#39;user_id&#39;)[&#39;order_product&#39;].sum()\nplt.scatter(user_product_sum,user_amount_sum)\n\n\n\n\n&lt;matplotlib.collections.PathCollection at 0x112253588&gt;\n​\n\n\n#各个用户消费总金额的直方分布图(消费金额在1000之内的分布)\ndf.groupby(by&#x3D;&#39;user_id&#39;).sum().query(&#39;order_amount &lt;&#x3D; 1000&#39;)[&#39;order_amount&#39;]\ndf.groupby(by&#x3D;&#39;user_id&#39;).sum().query(&#39;order_amount &lt;&#x3D; 1000&#39;)[&#39;order_amount&#39;].hist()\n\n\n\n\n&lt;matplotlib.axes._subplots.AxesSubplot at 0x1122f1d30&gt;\n\n​    \n#各个用户消费的总数量的直方分布图(消费商品的数量在100次之内的分布)\ndf.groupby(by&#x3D;&#39;user_id&#39;).sum().query(&#39;order_product &lt;&#x3D; 100&#39;)[&#39;order_product&#39;].hist()\n\n\n\n\n&lt;matplotlib.axes._subplots.AxesSubplot at 0x11491f828&gt;\n\n​    ​    \n第四部分：用户消费行为分析\n用户第一次消费的月份分布，和人数统计\n绘制线形图\n\n\n用户最后一次消费的时间分布，和人数统计\n绘制线形图\n\n\n新老客户的占比\n消费一次为新用户\n消费多次为老用户\n分析出每一个用户的第一个消费和最后一次消费的时间\nagg([‘func1’,’func2’]):对分组后的结果进行指定聚合\n\n\n分析出新老客户的消费比例\n\n\n\n\n用户分层\n分析得出每个用户的总购买量和总消费金额and最近一次消费的时间的表格rfm\nRFM模型设计\nR表示客户最近一次交易时间的间隔。\n&#x2F;np.timedelta64(1,’D’)：去除days\n\n\nF表示客户购买商品的总数量,F值越大，表示客户交易越频繁，反之则表示客户交易不够活跃。\nM表示客户交易的金额。M值越大，表示客户价值越高，反之则表示客户价值越低。\n将R，F，M作用到rfm表中\n\n\n根据价值分层，将用户分为：\n重要价值客户\n重要保持客户\n重要挽留客户\n重要发展客户\n一般价值客户\n一般保持客户\n一般挽留客户\n一般发展客户\n使用已有的分层模型即可rfm_func\n\n\n\n\n\n\n\n#用户第一次消费的月份分布，和人数统计\n#第一次消费的月份：每一个用户消费月份的最小值就是该用户第一次消费的月份\ndf.groupby(by&#x3D;&#39;user_id&#39;)[&#39;month&#39;].min()\n\n\n\n\nuser_id\n1       1997-01-01\n2       1997-01-01\n3       1997-01-01\n4       1997-01-01\n5       1997-01-01\n6       1997-01-01\n7       1997-01-01\n8       1997-01-01\n9       1997-01-01\n10      1997-01-01\n11      1997-01-01\n12      1997-01-01\n13      1997-01-01\n14      1997-01-01\n15      1997-01-01\n16      1997-01-01\n17      1997-01-01\n18      1997-01-01\n19      1997-01-01\n20      1997-01-01\n21      1997-01-01\n22      1997-01-01\n23      1997-01-01\n24      1997-01-01\n25      1997-01-01\n26      1997-01-01\n27      1997-01-01\n28      1997-01-01\n29      1997-01-01\n30      1997-01-01\n           ...    \n23541   1997-03-01\n23542   1997-03-01\n23543   1997-03-01\n23544   1997-03-01\n23545   1997-03-01\n23546   1997-03-01\n23547   1997-03-01\n23548   1997-03-01\n23549   1997-03-01\n23550   1997-03-01\n23551   1997-03-01\n23552   1997-03-01\n23553   1997-03-01\n23554   1997-03-01\n23555   1997-03-01\n23556   1997-03-01\n23557   1997-03-01\n23558   1997-03-01\n23559   1997-03-01\n23560   1997-03-01\n23561   1997-03-01\n23562   1997-03-01\n23563   1997-03-01\n23564   1997-03-01\n23565   1997-03-01\n23566   1997-03-01\n23567   1997-03-01\n23568   1997-03-01\n23569   1997-03-01\n23570   1997-03-01\nName: month, Length: 23570, dtype: datetime64[ns]\n\ndf.groupby(by&#x3D;&#39;user_id&#39;)[&#39;month&#39;].min().value_counts() #人数的统计\ndf.groupby(by&#x3D;&#39;user_id&#39;)[&#39;month&#39;].min().value_counts().plot()\n\n\n\n\n&lt;matplotlib.axes._subplots.AxesSubplot at 0x11dddba90&gt;\n\n​    \n#用户最后一次消费的时间分布，和人数统计\n#用户消费月份的最大值就是用户最后一次消费的月份\ndf.groupby(by&#x3D;&#39;user_id&#39;)[&#39;month&#39;].max().value_counts().plot()\n\n\n\n\n&lt;matplotlib.axes._subplots.AxesSubplot at 0x11e35ba58&gt;\n\n​    \n#新老客户的占比\n#消费一次为新用户，消费多次为老用户\n#如何获知用户是否为第一次消费？可以根据用户的消费时间进行判定？\n    #如果用户的第一次消费时间和最后一次消费时间一样，则该用户只消费了一次为新用户，否则为老用户\nnew_old_user_df &#x3D; df.groupby(by&#x3D;&#39;user_id&#39;)[&#39;order_dt&#39;].agg([&#39;min&#39;,&#39;max&#39;])#agg对分组后的结果进行多种指定聚合\nnew_old_user_df[&#39;min&#39;] &#x3D;&#x3D; new_old_user_df[&#39;max&#39;] #True新用户，False老用户\n#统计True和False的个数\n(new_old_user_df[&#39;min&#39;] &#x3D;&#x3D; new_old_user_df[&#39;max&#39;]).value_counts()\n\n\n\n\nTrue     12054\nFalse    11516\ndtype: int64\n\n#分析得出每个用户的总购买量和总消费金额and最近一次消费的时间的表格rfm\nrfm &#x3D; df.pivot_table(index&#x3D;&#39;user_id&#39;,aggfunc&#x3D;&#123;&#39;order_product&#39;:&#39;sum&#39;,&#39;order_amount&#39;:&#39;sum&#39;,&#39;order_dt&#39;:&quot;max&quot;&#125;)\nrfm\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      order_amount\n      order_dt\n      order_product\n    \n    \n      user_id\n      \n      \n      \n    \n  \n  \n    \n      1\n      11.77\n      1997-01-01\n      1\n    \n    \n      2\n      89.00\n      1997-01-12\n      6\n    \n    \n      3\n      156.46\n      1998-05-28\n      16\n    \n    \n      4\n      100.50\n      1997-12-12\n      7\n    \n    \n      5\n      385.61\n      1998-01-03\n      29\n    \n    \n      6\n      20.99\n      1997-01-01\n      1\n    \n    \n      7\n      264.67\n      1998-03-22\n      18\n    \n    \n      8\n      197.66\n      1998-03-29\n      18\n    \n    \n      9\n      95.85\n      1998-06-08\n      6\n    \n    \n      10\n      39.31\n      1997-01-21\n      3\n    \n    \n      11\n      58.55\n      1998-02-20\n      4\n    \n    \n      12\n      57.06\n      1997-01-01\n      4\n    \n    \n      13\n      72.94\n      1997-01-01\n      4\n    \n    \n      14\n      29.92\n      1997-01-01\n      2\n    \n    \n      15\n      52.87\n      1997-01-01\n      4\n    \n    \n      16\n      79.87\n      1997-09-10\n      8\n    \n    \n      17\n      73.22\n      1997-01-01\n      5\n    \n    \n      18\n      14.96\n      1997-01-04\n      1\n    \n    \n      19\n      175.12\n      1997-06-10\n      11\n    \n    \n      20\n      653.01\n      1997-01-18\n      46\n    \n    \n      21\n      75.11\n      1997-01-13\n      4\n    \n    \n      22\n      14.37\n      1997-01-01\n      1\n    \n    \n      23\n      24.74\n      1997-01-01\n      2\n    \n    \n      24\n      57.77\n      1998-01-20\n      4\n    \n    \n      25\n      137.53\n      1998-06-08\n      12\n    \n    \n      26\n      102.69\n      1997-01-26\n      6\n    \n    \n      27\n      135.87\n      1997-01-12\n      10\n    \n    \n      28\n      90.99\n      1997-03-08\n      7\n    \n    \n      29\n      435.81\n      1998-04-26\n      28\n    \n    \n      30\n      28.34\n      1997-02-14\n      2\n    \n    \n      ...\n      ...\n      ...\n      ...\n    \n    \n      23541\n      57.34\n      1997-04-02\n      2\n    \n    \n      23542\n      77.43\n      1997-03-25\n      5\n    \n    \n      23543\n      50.76\n      1997-03-25\n      2\n    \n    \n      23544\n      134.63\n      1998-01-24\n      12\n    \n    \n      23545\n      24.99\n      1997-03-25\n      1\n    \n    \n      23546\n      13.97\n      1997-03-25\n      1\n    \n    \n      23547\n      23.54\n      1997-04-07\n      2\n    \n    \n      23548\n      23.54\n      1997-03-25\n      2\n    \n    \n      23549\n      27.13\n      1997-03-25\n      2\n    \n    \n      23550\n      25.28\n      1997-03-25\n      2\n    \n    \n      23551\n      264.63\n      1997-09-11\n      12\n    \n    \n      23552\n      49.38\n      1997-04-03\n      4\n    \n    \n      23553\n      98.58\n      1997-03-28\n      8\n    \n    \n      23554\n      36.37\n      1998-02-01\n      3\n    \n    \n      23555\n      189.18\n      1998-06-10\n      14\n    \n    \n      23556\n      203.00\n      1998-06-07\n      15\n    \n    \n      23557\n      14.37\n      1997-03-25\n      1\n    \n    \n      23558\n      145.60\n      1998-02-25\n      11\n    \n    \n      23559\n      111.65\n      1997-06-27\n      8\n    \n    \n      23560\n      18.36\n      1997-03-25\n      1\n    \n    \n      23561\n      83.46\n      1998-05-29\n      6\n    \n    \n      23562\n      29.33\n      1997-03-25\n      2\n    \n    \n      23563\n      58.75\n      1997-10-04\n      3\n    \n    \n      23564\n      70.01\n      1997-11-30\n      5\n    \n    \n      23565\n      11.77\n      1997-03-25\n      1\n    \n    \n      23566\n      36.00\n      1997-03-25\n      2\n    \n    \n      23567\n      20.97\n      1997-03-25\n      1\n    \n    \n      23568\n      121.70\n      1997-04-22\n      6\n    \n    \n      23569\n      25.74\n      1997-03-25\n      2\n    \n    \n      23570\n      94.08\n      1997-03-26\n      5\n    \n  \n\n23570 rows × 3 columns\n\n\n\n\n\n#R表示客户最近一次交易时间的间隔\nmax_dt &#x3D; df[&#39;order_dt&#39;].max() #今天的日期\n#每一个用户最后一次交易的时间\n-(df.groupby(by&#x3D;&#39;user_id&#39;)[&#39;order_dt&#39;].max() - max_dt)\nrfm[&#39;R&#39;] &#x3D; -(df.groupby(by&#x3D;&#39;user_id&#39;)[&#39;order_dt&#39;].max() - max_dt)&#x2F;np.timedelta64(1,&#39;D&#39;)\n\n\nrfm.drop(labels&#x3D;&#39;order_dt&#39;,axis&#x3D;1,inplace&#x3D;True)\n\n\nrfm.columns &#x3D; [&#39;M&#39;,&#39;F&#39;,&#39;R&#39;]\nrfm.head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      M\n      F\n      R\n    \n    \n      user_id\n      \n      \n      \n    \n  \n  \n    \n      1\n      11.77\n      1\n      545.0\n    \n    \n      2\n      89.00\n      6\n      534.0\n    \n    \n      3\n      156.46\n      16\n      33.0\n    \n    \n      4\n      100.50\n      7\n      200.0\n    \n    \n      5\n      385.61\n      29\n      178.0\n    \n  \n\n\n\n\n\n\ndef rfm_func(x):\n    #存储存储的是三个字符串形式的0或者1\n    level &#x3D; x.map(lambda x :&#39;1&#39; if x &gt;&#x3D; 0 else &#39;0&#39;)\n    label &#x3D; level.R + level.F + level.M\n    d &#x3D; &#123;\n        &#39;111&#39;:&#39;重要价值客户&#39;,\n        &#39;011&#39;:&#39;重要保持客户&#39;,\n        &#39;101&#39;:&#39;重要挽留客户&#39;,\n        &#39;001&#39;:&#39;重要发展客户&#39;,\n        &#39;110&#39;:&#39;一般价值客户&#39;,\n        &#39;010&#39;:&#39;一般保持客户&#39;,\n        &#39;100&#39;:&#39;一般挽留客户&#39;,\n        &#39;000&#39;:&#39;一般发展客户&#39;\n    &#125;\n    result &#x3D; d[label]\n    return result\n#df.apply(func):可以对df中的行或者列进行某种（func）形式的运算\nrfm[&#39;label&#39;] &#x3D; rfm.apply(lambda x : x - x.mean()).apply(rfm_func,axis &#x3D; 1)\nrfm.head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      M\n      F\n      R\n      label\n    \n    \n      user_id\n      \n      \n      \n      \n    \n  \n  \n    \n      1\n      11.77\n      1\n      545.0\n      一般挽留客户\n    \n    \n      2\n      89.00\n      6\n      534.0\n      一般挽留客户\n    \n    \n      3\n      156.46\n      16\n      33.0\n      重要保持客户\n    \n    \n      4\n      100.50\n      7\n      200.0\n      一般发展客户\n    \n    \n      5\n      385.61\n      29\n      178.0\n      重要保持客户\n    \n  \n\n\n\n\n\n第五部分：用户的生命周期\n将用户划分为活跃用户和其他用户\n统计每个用户每个月的消费次数\n统计每个用户每个月是否消费，消费记录为1否则记录为0\n知识点：DataFrame的apply和applymap的区别\napplymap:返回df\n将函数做用于DataFrame中的所有元素(elements)\napply:返回Series\napply()将一个函数作用于DataFrame中的每个行或者列\n\n\n\n\n将用户按照每一个月份分成：\nunreg:观望用户（前两月没买，第三个月才第一次买,则用户前两个月为观望用户）\nunactive:首月购买后，后序月份没有购买则在没有购买的月份中该用户的为非活跃用户\nnew:当前月就进行首次购买的用户在当前月为新用户\nactive:连续月份购买的用户在这些月中为活跃用户\nreturn:购买之后间隔n月再次购买的第一个月份为该月份的回头客\n\n\n\n\n\n#统计每个用户每个月的消费次数\nuser_month_count_df &#x3D; df.pivot_table(index&#x3D;&#39;user_id&#39;,values&#x3D;&#39;order_dt&#39;,aggfunc&#x3D;&#39;count&#39;,columns&#x3D;&#39;month&#39;).fillna(0)\n\n\nuser_month_count_df.head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      month\n      1997-01-01 00:00:00\n      1997-02-01 00:00:00\n      1997-03-01 00:00:00\n      1997-04-01 00:00:00\n      1997-05-01 00:00:00\n      1997-06-01 00:00:00\n      1997-07-01 00:00:00\n      1997-08-01 00:00:00\n      1997-09-01 00:00:00\n      1997-10-01 00:00:00\n      1997-11-01 00:00:00\n      1997-12-01 00:00:00\n      1998-01-01 00:00:00\n      1998-02-01 00:00:00\n      1998-03-01 00:00:00\n      1998-04-01 00:00:00\n      1998-05-01 00:00:00\n      1998-06-01 00:00:00\n    \n    \n      user_id\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1\n      1.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n    \n    \n      2\n      2.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n    \n    \n      3\n      1.0\n      0.0\n      1.0\n      1.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      2.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      1.0\n      0.0\n    \n    \n      4\n      2.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      1.0\n      0.0\n      0.0\n      0.0\n      1.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n    \n    \n      5\n      2.0\n      1.0\n      0.0\n      1.0\n      1.0\n      1.0\n      1.0\n      0.0\n      1.0\n      0.0\n      0.0\n      2.0\n      1.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n    \n  \n\n\n\n\n\n\n#统计每个用户每个月是否消费，消费记录为1否则记录为0\ndf_purchase &#x3D; user_month_count_df.applymap(lambda x:1 if x &gt;&#x3D; 1 else 0)\n\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      month\n      1997-01-01 00:00:00\n      1997-02-01 00:00:00\n      1997-03-01 00:00:00\n      1997-04-01 00:00:00\n      1997-05-01 00:00:00\n      1997-06-01 00:00:00\n      1997-07-01 00:00:00\n      1997-08-01 00:00:00\n      1997-09-01 00:00:00\n      1997-10-01 00:00:00\n      1997-11-01 00:00:00\n      1997-12-01 00:00:00\n      1998-01-01 00:00:00\n      1998-02-01 00:00:00\n      1998-03-01 00:00:00\n      1998-04-01 00:00:00\n      1998-05-01 00:00:00\n      1998-06-01 00:00:00\n    \n    \n      user_id\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      2\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      3\n      1\n      0\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n    \n    \n      4\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      5\n      1\n      1\n      0\n      1\n      1\n      1\n      1\n      0\n      1\n      0\n      0\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n    \n    \n      6\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      7\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n    \n    \n      8\n      1\n      1\n      0\n      0\n      0\n      1\n      1\n      0\n      0\n      0\n      1\n      1\n      0\n      0\n      1\n      0\n      0\n      0\n    \n    \n      9\n      1\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n    \n    \n      10\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      11\n      1\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n    \n    \n      12\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      13\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      14\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      15\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      16\n      1\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      17\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      18\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      19\n      1\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      20\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      21\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      22\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      24\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n    \n    \n      25\n      1\n      0\n      0\n      0\n      0\n      0\n      1\n      1\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      1\n      1\n      1\n    \n    \n      26\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      27\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      28\n      1\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      29\n      1\n      1\n      1\n      1\n      1\n      0\n      1\n      0\n      1\n      0\n      1\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n    \n    \n      30\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      23541\n      0\n      0\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23542\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23543\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23544\n      0\n      0\n      1\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23545\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23546\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23547\n      0\n      0\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23548\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23549\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23550\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23551\n      0\n      0\n      1\n      0\n      0\n      1\n      0\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23552\n      0\n      0\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23553\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23554\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n    \n    \n      23555\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      1\n      0\n      0\n      0\n      0\n      1\n      1\n    \n    \n      23556\n      0\n      0\n      1\n      0\n      0\n      1\n      1\n      0\n      1\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      1\n    \n    \n      23557\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23558\n      0\n      0\n      1\n      0\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n    \n    \n      23559\n      0\n      0\n      1\n      0\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23560\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23561\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      1\n      0\n    \n    \n      23562\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23563\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23564\n      0\n      0\n      1\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23565\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23566\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23567\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23568\n      0\n      0\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23569\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      23570\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n  \n\n23570 rows × 18 columns\n\n\n\n\n\ndf_purchase.head()\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      month\n      1997-01-01 00:00:00\n      1997-02-01 00:00:00\n      1997-03-01 00:00:00\n      1997-04-01 00:00:00\n      1997-05-01 00:00:00\n      1997-06-01 00:00:00\n      1997-07-01 00:00:00\n      1997-08-01 00:00:00\n      1997-09-01 00:00:00\n      1997-10-01 00:00:00\n      1997-11-01 00:00:00\n      1997-12-01 00:00:00\n      1998-01-01 00:00:00\n      1998-02-01 00:00:00\n      1998-03-01 00:00:00\n      1998-04-01 00:00:00\n      1998-05-01 00:00:00\n      1998-06-01 00:00:00\n    \n    \n      user_id\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      2\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      3\n      1\n      0\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n    \n    \n      4\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      1\n      0\n      0\n      0\n      0\n      0\n      0\n    \n    \n      5\n      1\n      1\n      0\n      1\n      1\n      1\n      1\n      0\n      1\n      0\n      0\n      1\n      1\n      0\n      0\n      0\n      0\n      0\n    \n  \n\n\n\n\n\n\n#将df_purchase中的原始数据0和1修改为new，unactive......,返回新的df叫做df_purchase_new\n#固定算法\ndef active_status(data):\n    status &#x3D; []#某个用户每一个月的活跃度\n    for i in range(18):\n        \n        #若本月没有消费\n        if data[i] &#x3D;&#x3D; 0:\n            if len(status) &gt; 0:\n                if status[i-1] &#x3D;&#x3D; &#39;unreg&#39;:\n                    status.append(&#39;unreg&#39;)\n                else:\n                    status.append(&#39;unactive&#39;)\n            else:\n                status.append(&#39;unreg&#39;)\n                    \n        #若本月消费\n        else:\n            if len(status) &#x3D;&#x3D; 0:\n                status.append(&#39;new&#39;)\n            else:\n                if status[i-1] &#x3D;&#x3D; &#39;unactive&#39;:\n                    status.append(&#39;return&#39;)\n                elif status[i-1] &#x3D;&#x3D; &#39;unreg&#39;:\n                    status.append(&#39;new&#39;)\n                else:\n                    status.append(&#39;active&#39;)\n    return status\n\npivoted_status &#x3D; df_purchase.apply(active_status,axis &#x3D; 1) \npivoted_status.head()\n\n\n\n\nuser_id\n1    [new, unactive, unactive, unactive, unactive, ...\n2    [new, unactive, unactive, unactive, unactive, ...\n3    [new, unactive, return, active, unactive, unac...\n4    [new, unactive, unactive, unactive, unactive, ...\n5    [new, active, unactive, return, active, active...\ndtype: object\n\ndf_purchase_new &#x3D; DataFrame(data&#x3D;pivoted_status.values.tolist(),index&#x3D;df_purchase.index,columns&#x3D;df_purchase.columns)\ndf_purchase_new\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      month\n      1997-01-01 00:00:00\n      1997-02-01 00:00:00\n      1997-03-01 00:00:00\n      1997-04-01 00:00:00\n      1997-05-01 00:00:00\n      1997-06-01 00:00:00\n      1997-07-01 00:00:00\n      1997-08-01 00:00:00\n      1997-09-01 00:00:00\n      1997-10-01 00:00:00\n      1997-11-01 00:00:00\n      1997-12-01 00:00:00\n      1998-01-01 00:00:00\n      1998-02-01 00:00:00\n      1998-03-01 00:00:00\n      1998-04-01 00:00:00\n      1998-05-01 00:00:00\n      1998-06-01 00:00:00\n    \n    \n      user_id\n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      2\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      3\n      new\n      unactive\n      return\n      active\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n    \n    \n      4\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      5\n      new\n      active\n      unactive\n      return\n      active\n      active\n      active\n      unactive\n      return\n      unactive\n      unactive\n      return\n      active\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      6\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      7\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n    \n    \n      8\n      new\n      active\n      unactive\n      unactive\n      unactive\n      return\n      active\n      unactive\n      unactive\n      unactive\n      return\n      active\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n    \n    \n      9\n      new\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n    \n    \n      10\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      11\n      new\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      12\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      13\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      14\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      15\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      16\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      17\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      18\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      19\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      20\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      21\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      22\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      24\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      25\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      active\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      active\n      active\n    \n    \n      26\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      27\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      28\n      new\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      29\n      new\n      active\n      active\n      active\n      active\n      unactive\n      return\n      unactive\n      return\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n    \n    \n      30\n      new\n      active\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n      ...\n    \n    \n      23541\n      unreg\n      unreg\n      new\n      active\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23542\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23543\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23544\n      unreg\n      unreg\n      new\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23545\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23546\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23547\n      unreg\n      unreg\n      new\n      active\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23548\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23549\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23550\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23551\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      return\n      unactive\n      return\n      active\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23552\n      unreg\n      unreg\n      new\n      active\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23553\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23554\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23555\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      active\n    \n    \n      23556\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      return\n      active\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n    \n    \n      23557\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23558\n      unreg\n      unreg\n      new\n      unactive\n      return\n      active\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23559\n      unreg\n      unreg\n      new\n      unactive\n      return\n      active\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23560\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23561\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n    \n    \n      23562\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23563\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23564\n      unreg\n      unreg\n      new\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      return\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23565\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23566\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23567\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23568\n      unreg\n      unreg\n      new\n      active\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23569\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n    \n      23570\n      unreg\n      unreg\n      new\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n      unactive\n    \n  \n\n23570 rows × 18 columns\n\n\n\n\n\n每月【不同活跃】用户的计数\npurchase_status_ct &#x3D; df_purchase_new.apply(lambda x : pd.value_counts(x)).fillna(0)\n转置进行最终结果的查看\n\n\n\npurchase_status_ct &#x3D; df_purchase_new.apply(lambda x : pd.value_counts(x)).fillna(0)\npurchase_status_ct\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      month\n      1997-01-01 00:00:00\n      1997-02-01 00:00:00\n      1997-03-01 00:00:00\n      1997-04-01 00:00:00\n      1997-05-01 00:00:00\n      1997-06-01 00:00:00\n      1997-07-01 00:00:00\n      1997-08-01 00:00:00\n      1997-09-01 00:00:00\n      1997-10-01 00:00:00\n      1997-11-01 00:00:00\n      1997-12-01 00:00:00\n      1998-01-01 00:00:00\n      1998-02-01 00:00:00\n      1998-03-01 00:00:00\n      1998-04-01 00:00:00\n      1998-05-01 00:00:00\n      1998-06-01 00:00:00\n    \n  \n  \n    \n      active\n      0.0\n      1157.0\n      1681.0\n      1773.0\n      852.0\n      747.0\n      746.0\n      604.0\n      528.0\n      532.0\n      624.0\n      632.0\n      512.0\n      472.0\n      571.0\n      518.0\n      459.0\n      446.0\n    \n    \n      new\n      7846.0\n      8476.0\n      7248.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n    \n    \n      return\n      0.0\n      0.0\n      595.0\n      1049.0\n      1362.0\n      1592.0\n      1434.0\n      1168.0\n      1211.0\n      1307.0\n      1404.0\n      1232.0\n      1025.0\n      1079.0\n      1489.0\n      919.0\n      1029.0\n      1060.0\n    \n    \n      unactive\n      0.0\n      6689.0\n      14046.0\n      20748.0\n      21356.0\n      21231.0\n      21390.0\n      21798.0\n      21831.0\n      21731.0\n      21542.0\n      21706.0\n      22033.0\n      22019.0\n      21510.0\n      22133.0\n      22082.0\n      22064.0\n    \n    \n      unreg\n      15724.0\n      7248.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n      0.0\n    \n  \n\n\n\n\n\n\npurchase_status_ct.T\n\n\n\n\n\n\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n\n\n\n  \n    \n      \n      active\n      new\n      return\n      unactive\n      unreg\n    \n    \n      month\n      \n      \n      \n      \n      \n    \n  \n  \n    \n      1997-01-01\n      0.0\n      7846.0\n      0.0\n      0.0\n      15724.0\n    \n    \n      1997-02-01\n      1157.0\n      8476.0\n      0.0\n      6689.0\n      7248.0\n    \n    \n      1997-03-01\n      1681.0\n      7248.0\n      595.0\n      14046.0\n      0.0\n    \n    \n      1997-04-01\n      1773.0\n      0.0\n      1049.0\n      20748.0\n      0.0\n    \n    \n      1997-05-01\n      852.0\n      0.0\n      1362.0\n      21356.0\n      0.0\n    \n    \n      1997-06-01\n      747.0\n      0.0\n      1592.0\n      21231.0\n      0.0\n    \n    \n      1997-07-01\n      746.0\n      0.0\n      1434.0\n      21390.0\n      0.0\n    \n    \n      1997-08-01\n      604.0\n      0.0\n      1168.0\n      21798.0\n      0.0\n    \n    \n      1997-09-01\n      528.0\n      0.0\n      1211.0\n      21831.0\n      0.0\n    \n    \n      1997-10-01\n      532.0\n      0.0\n      1307.0\n      21731.0\n      0.0\n    \n    \n      1997-11-01\n      624.0\n      0.0\n      1404.0\n      21542.0\n      0.0\n    \n    \n      1997-12-01\n      632.0\n      0.0\n      1232.0\n      21706.0\n      0.0\n    \n    \n      1998-01-01\n      512.0\n      0.0\n      1025.0\n      22033.0\n      0.0\n    \n    \n      1998-02-01\n      472.0\n      0.0\n      1079.0\n      22019.0\n      0.0\n    \n    \n      1998-03-01\n      571.0\n      0.0\n      1489.0\n      21510.0\n      0.0\n    \n    \n      1998-04-01\n      518.0\n      0.0\n      919.0\n      22133.0\n      0.0\n    \n    \n      1998-05-01\n      459.0\n      0.0\n      1029.0\n      22082.0\n      0.0\n    \n    \n      1998-06-01\n      446.0\n      0.0\n      1060.0\n      22064.0\n      0.0\n    \n  \n\n\n\n\n\n\n\n","slug":"用户消费","date":"2023-09-09T04:17:53.000Z","categories_index":"","tags_index":"pandas,matplotlib","author_index":"verfotta"}]