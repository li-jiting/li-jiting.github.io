{"title":"政治献金分析","uid":"e1002822ff36c5ef2c7bb076aa52d7a0","slug":"PYproject","date":"2023-09-09T04:17:53.000Z","updated":"2023-09-14T13:48:34.157Z","comments":true,"path":"api/articles/PYproject.json","keywords":null,"cover":[],"content":"<h1 id=\"美国2012年总统候选人政治献金数据分析\"><a href=\"#美国2012年总统候选人政治献金数据分析\" class=\"headerlink\" title=\"美国2012年总统候选人政治献金数据分析\"></a>美国2012年总统候选人政治献金数据分析</h1><p>导入包</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import numpy as np\nimport pandas as pd</code></pre>\n\n<p>方便大家操作，将月份和参选人以及所在政党进行定义</p>\n<p>months &#x3D; {‘JAN’ : 1, ‘FEB’ : 2, ‘MAR’ : 3, ‘APR’ : 4, ‘MAY’ : 5, ‘JUN’ : 6,<br>          ‘JUL’ : 7, ‘AUG’ : 8, ‘SEP’ : 9, ‘OCT’: 10, ‘NOV’: 11, ‘DEC’ : 12}</p>\n<p>读取文件</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">pd.read_excel(&#39;.&#x2F;usa_elect&#x2F;contb_01.csv&#39;)\npd.read_excel(&#39;.&#x2F;usa_elect&#x2F;contb_02.csv&#39;)\npd.read_excel(&#39;.&#x2F;usa_elect&#x2F;contb_03.csv&#39;)</code></pre>\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import os</code></pre>\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">root &#x3D; &#39;.&#x2F;usa_elect&#x2F;&#39;\n\nparty_df &#x3D; &quot;&quot;\ncontdf_list &#x3D; []\nfor fname in  os.listdir(root):\n    fpath &#x3D; os.path.join(root, fname)\n    if fname.endswith(&#39;.csv&#39;):\n        contdf_list.append(pd.read_csv(fpath))\n    elif fname.endswith(&#39;.xlsx&#39;):\n        party_df &#x3D; pd.read_excel(fpath, index_col&#x3D;0)\n    else:\n        print(&#39;其他文件不读取&#39;)</code></pre>\n\n<pre><code>其他文件不读取\n其他文件不读取\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">len(contdf_list)</code></pre>\n\n\n\n\n<pre><code>3\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb &#x3D; pd.concat(contdf_list, ignore_index&#x3D;True)</code></pre>\n\n<p>查看文件样式以及基本信息</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb.info()</code></pre>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nRangeIndex: 1001733 entries, 0 to 1001732\nData columns (total 7 columns):\n #   Column             Non-Null Count    Dtype  \n---  ------             --------------    -----  \n 0   cand_nm            1001733 non-null  object \n 1   contbr_nm          1001733 non-null  object \n 2   contbr_st          1001729 non-null  object \n 3   contbr_employer    988004 non-null   object \n 4   contbr_occupation  993303 non-null   object \n 5   contb_receipt_amt  1001733 non-null  float64\n 6   contb_receipt_dt   1001733 non-null  object \ndtypes: float64(1), object(6)\nmemory usage: 53.5+ MB\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb.head()</code></pre>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cand_nm</th>\n      <th>contbr_nm</th>\n      <th>contbr_st</th>\n      <th>contbr_employer</th>\n      <th>contbr_occupation</th>\n      <th>contb_receipt_amt</th>\n      <th>contb_receipt_dt</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bachmann, Michelle</td>\n      <td>HARVEY, WILLIAM</td>\n      <td>AL</td>\n      <td>RETIRED</td>\n      <td>RETIRED</td>\n      <td>250.0</td>\n      <td>20-JUN-11</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bachmann, Michelle</td>\n      <td>HARVEY, WILLIAM</td>\n      <td>AL</td>\n      <td>RETIRED</td>\n      <td>RETIRED</td>\n      <td>50.0</td>\n      <td>23-JUN-11</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Bachmann, Michelle</td>\n      <td>SMITH, LANIER</td>\n      <td>AL</td>\n      <td>INFORMATION REQUESTED</td>\n      <td>INFORMATION REQUESTED</td>\n      <td>250.0</td>\n      <td>05-JUL-11</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Bachmann, Michelle</td>\n      <td>BLEVINS, DARONDA</td>\n      <td>AR</td>\n      <td>NONE</td>\n      <td>RETIRED</td>\n      <td>250.0</td>\n      <td>01-AUG-11</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Bachmann, Michelle</td>\n      <td>WARDENBURG, HAROLD</td>\n      <td>AR</td>\n      <td>NONE</td>\n      <td>RETIRED</td>\n      <td>300.0</td>\n      <td>20-JUN-11</td>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n\n\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">party_df.info()</code></pre>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nInt64Index: 13 entries, 0 to 12\nData columns (total 2 columns):\n #   Column  Non-Null Count  Dtype \n---  ------  --------------  ----- \n 0   names   13 non-null     object\n 1   party   13 non-null     object\ndtypes: object(2)\nmemory usage: 312.0+ bytes\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">party_df.head()</code></pre>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>names</th>\n      <th>party</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bachmann, Michelle</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Romney, Mitt</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Obama, Barack</td>\n      <td>Democrat</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Roemer, Charles E. 'Buddy' III</td>\n      <td>Reform</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Pawlenty, Timothy</td>\n      <td>Republican</td>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n\n\n\n<p>使用map函数+字典，新建一列各个候选人所在党派party</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">party_df</code></pre>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n<pre><code>.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>names</th>\n      <th>party</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bachmann, Michelle</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Romney, Mitt</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Obama, Barack</td>\n      <td>Democrat</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Roemer, Charles E. 'Buddy' III</td>\n      <td>Reform</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Pawlenty, Timothy</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Johnson, Gary Earl</td>\n      <td>Libertarian</td>\n    </tr>\n    <tr>\n      <th>6</th>\n      <td>Paul, Ron</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>7</th>\n      <td>Santorum, Rick</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>8</th>\n      <td>Cain, Herman</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>9</th>\n      <td>Gingrich, Newt</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>10</th>\n      <td>McCotter, Thaddeus G</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>11</th>\n      <td>Huntsman, Jon</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>12</th>\n      <td>Perry, Rick</td>\n      <td>Republican</td>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n\n\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb.head()</code></pre>\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cand_nm</th>\n      <th>contbr_nm</th>\n      <th>contbr_st</th>\n      <th>contbr_employer</th>\n      <th>contbr_occupation</th>\n      <th>contb_receipt_amt</th>\n      <th>contb_receipt_dt</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bachmann, Michelle</td>\n      <td>HARVEY, WILLIAM</td>\n      <td>AL</td>\n      <td>RETIRED</td>\n      <td>RETIRED</td>\n      <td>250.0</td>\n      <td>20-JUN-11</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bachmann, Michelle</td>\n      <td>HARVEY, WILLIAM</td>\n      <td>AL</td>\n      <td>RETIRED</td>\n      <td>RETIRED</td>\n      <td>50.0</td>\n      <td>23-JUN-11</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Bachmann, Michelle</td>\n      <td>SMITH, LANIER</td>\n      <td>AL</td>\n      <td>INFORMATION REQUESTED</td>\n      <td>INFORMATION REQUESTED</td>\n      <td>250.0</td>\n      <td>05-JUL-11</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Bachmann, Michelle</td>\n      <td>BLEVINS, DARONDA</td>\n      <td>AR</td>\n      <td>NONE</td>\n      <td>RETIRED</td>\n      <td>250.0</td>\n      <td>01-AUG-11</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Bachmann, Michelle</td>\n      <td>WARDENBURG, HAROLD</td>\n      <td>AR</td>\n      <td>NONE</td>\n      <td>RETIRED</td>\n      <td>300.0</td>\n      <td>20-JUN-11</td>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n\n\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part &#x3D; pd.merge(left&#x3D;contb, right&#x3D;party_df, left_on&#x3D;&#39;cand_nm&#39;, right_on&#x3D;&#39;names&#39;, how&#x3D;&#39;left&#39;)</code></pre>\n\n<p>查看单独一行，是否加上了’party’一列</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part.head(1)</code></pre>\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n    .dataframe tbody tr th {\n        vertical-align: top;\n    }\n\n<pre><code>.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cand_nm</th>\n      <th>contbr_nm</th>\n      <th>contbr_st</th>\n      <th>contbr_employer</th>\n      <th>contbr_occupation</th>\n      <th>contb_receipt_amt</th>\n      <th>contb_receipt_dt</th>\n      <th>names</th>\n      <th>party</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bachmann, Michelle</td>\n      <td>HARVEY, WILLIAM</td>\n      <td>AL</td>\n      <td>RETIRED</td>\n      <td>RETIRED</td>\n      <td>250.0</td>\n      <td>20-JUN-11</td>\n      <td>Bachmann, Michelle</td>\n      <td>Republican</td>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n\n\n\n<p>使用np.unique()函数查看colums：party这一列中有哪些元素</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 查看由多少个党派参与了竞选\ncontb_part.party.unique()</code></pre>\n\n\n\n\n<pre><code>array([&#39;Republican&#39;, &#39;Democrat&#39;, &#39;Reform&#39;, &#39;Libertarian&#39;], dtype=object)\n</code></pre>\n<h2 id=\"查看党派的支持度，可以查看支持的次数，-可以查看支持的钱数\"><a href=\"#查看党派的支持度，可以查看支持的次数，-可以查看支持的钱数\" class=\"headerlink\" title=\"查看党派的支持度，可以查看支持的次数， 可以查看支持的钱数\"></a>查看党派的支持度，可以查看支持的次数， 可以查看支持的钱数</h2><p>使用value_counts()函数，统计party列中各个元素出现次数</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import matplotlib.pyplot as plt\n%matplotlib inline</code></pre>\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part.party.value_counts().plot(kind&#x3D;&#39;bar&#39;)</code></pre>\n\n\n\n\n<pre><code>&lt;Axes: &gt;\n</code></pre>\n<p>​    <img src=\"/./assets/image-20230914213300940.png\" alt=\"image-20230914213300940\"></p>\n<p>使用groupby()函数，查看各个党派收到的政治献金总数contb_receipt_amt</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part.head(2)</code></pre>\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cand_nm</th>\n      <th>contbr_nm</th>\n      <th>contbr_st</th>\n      <th>contbr_employer</th>\n      <th>contbr_occupation</th>\n      <th>contb_receipt_amt</th>\n      <th>contb_receipt_dt</th>\n      <th>names</th>\n      <th>party</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Bachmann, Michelle</td>\n      <td>HARVEY, WILLIAM</td>\n      <td>AL</td>\n      <td>RETIRED</td>\n      <td>RETIRED</td>\n      <td>250.0</td>\n      <td>20-JUN-11</td>\n      <td>Bachmann, Michelle</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Bachmann, Michelle</td>\n      <td>HARVEY, WILLIAM</td>\n      <td>AL</td>\n      <td>RETIRED</td>\n      <td>RETIRED</td>\n      <td>50.0</td>\n      <td>23-JUN-11</td>\n      <td>Bachmann, Michelle</td>\n      <td>Republican</td>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n\n\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part.groupby(&#39;party&#39;)[&#39;contb_receipt_amt&#39;].sum().plot(kind&#x3D;&#39;bar&#39;)</code></pre>\n\n\n\n\n<pre><code>&lt;Axes: xlabel=&#39;party&#39;&gt;\n</code></pre>\n<p>​    <img src=\"/./assets/image-20230914213345431.png\" alt=\"image-20230914213345431\"></p>\n<p>查看具体每天各个党派收到的政治献金总数contb_receipt_amt<br>使用groupby([多个分组参数])</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part.info()</code></pre>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nInt64Index: 1001733 entries, 0 to 1001732\nData columns (total 9 columns):\n #   Column             Non-Null Count    Dtype  \n---  ------             --------------    -----  \n 0   cand_nm            1001733 non-null  object \n 1   contbr_nm          1001733 non-null  object \n 2   contbr_st          1001729 non-null  object \n 3   contbr_employer    988004 non-null   object \n 4   contbr_occupation  993303 non-null   object \n 5   contb_receipt_amt  1001733 non-null  float64\n 6   contb_receipt_dt   1001733 non-null  object \n 7   names              1001733 non-null  object \n 8   party              1001733 non-null  object \ndtypes: float64(1), object(8)\nmemory usage: 76.4+ MB\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">import datetime</code></pre>\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">datetime.datetime(2022,2,11)</code></pre>\n\n\n<pre><code>datetime.datetime(2022, 2, 11, 0, 0)\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># pandas to_datetime函数，可以批量转换符合时间格式的字符串为时间类型（Timestamp）\npd.to_datetime(&#39;2022-2-11&#39;)</code></pre>\n\n\n<pre><code>Timestamp(&#39;2022-02-11 00:00:00&#39;)\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">pd.to_datetime(&#39;20-六月-2011&#39;)</code></pre>\n\n<hr>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 备注：20-JUN-11是一个标准欧式时间格式日-月-年，只要是标准的时间格式字符串，都可以适用pd.to_datetime()进行批量转换\n# 假设20-JUN-11是不符合标准时间格式的，因为业务表的记录过程中，难免会出现一些人为的错误操作\n# 经验提示：我们在设计原始数据表的时候，为了方便时间类型的转换，应该指定标准的时间格式\ncontb_part.contb_receipt_dt</code></pre>\n\n<p>查看日期格式，并将其转换为Pandas的日期格式,通过函数加map方式进行转换</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">month_dict &#x3D; &#123;&#39;JAN&#39; : 1, &#39;FEB&#39; : 2, &#39;MAR&#39; : 3, &#39;APR&#39; : 4, &#39;MAY&#39; : 5, &#39;JUN&#39; : 6,\n          &#39;JUL&#39; : 7, &#39;AUG&#39; : 8, &#39;SEP&#39; : 9, &#39;OCT&#39;: 10, &#39;NOV&#39;: 11, &#39;DEC&#39; : 12&#125;</code></pre>\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># &#39;20-JUN-11&#39; --&gt; &#39;2011-06-20&#39;\ndef transform_date_string(x):\n    # 判断接收的x是否为一个字符串对象\n    if isinstance(x, str):\n        day, mon, year &#x3D; x.split(&#39;-&#39;)\n        month &#x3D; month_dict[mon]\n        return &#39;20%d-%d-%d&#39;%(int(year), int(month), int(day))</code></pre>\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">transform_date_string(&#39;20-JUN-11&#39;)</code></pre>\n\n\n\n\n<pre><code>&#39;2011-6-20&#39;\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">date_string &#x3D; contb_part.contb_receipt_dt.map(transform_date_string)</code></pre>\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">pd.to_datetime(date_string)</code></pre>\n\n\n\n\n<pre><code>0         2011-06-20\n1         2011-06-23\n2         2011-07-05\n3         2011-08-01\n4         2011-06-20\n             ...    \n1001728   2011-09-29\n1001729   2011-09-30\n1001730   2011-09-29\n1001731   2011-09-30\n1001732   2011-08-31\nName: contb_receipt_dt, Length: 1001733, dtype: datetime64[ns]\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part.contb_receipt_dt &#x3D; pd.to_datetime(date_string)</code></pre>\n\n<p>查看是否转换成功</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part.info()</code></pre>\n\n<pre><code>&lt;class &#39;pandas.core.frame.DataFrame&#39;&gt;\nInt64Index: 1001733 entries, 0 to 1001732\nData columns (total 9 columns):\n #   Column             Non-Null Count    Dtype         \n---  ------             --------------    -----         \n 0   cand_nm            1001733 non-null  object        \n 1   contbr_nm          1001733 non-null  object        \n 2   contbr_st          1001729 non-null  object        \n 3   contbr_employer    988004 non-null   object        \n 4   contbr_occupation  993303 non-null   object        \n 5   contb_receipt_amt  1001733 non-null  float64       \n 6   contb_receipt_dt   1001733 non-null  datetime64[ns]\n 7   names              1001733 non-null  object        \n 8   party              1001733 non-null  object        \ndtypes: datetime64[ns](1), float64(1), object(7)\nmemory usage: 76.4+ MB\n</code></pre>\n<p>将时间转换为时间数据类型<br>根据时间进行排序</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part.sort_values(by&#x3D;&#39;contb_receipt_dt&#39;, inplace&#x3D;True)</code></pre>\n\n<p>得到转换后的，每天各政党所收政治献金数目。  </p>\n<p>考察知识点：groupby（多个字段）</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part.head()</code></pre>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cand_nm</th>\n      <th>contbr_nm</th>\n      <th>contbr_st</th>\n      <th>contbr_employer</th>\n      <th>contbr_occupation</th>\n      <th>contb_receipt_amt</th>\n      <th>contb_receipt_dt</th>\n      <th>names</th>\n      <th>party</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>922063</th>\n      <td>Cain, Herman</td>\n      <td>TRIBBLE, JAMES</td>\n      <td>TX</td>\n      <td>NONE</td>\n      <td>RETIRED</td>\n      <td>1000.0</td>\n      <td>2011-01-01</td>\n      <td>Cain, Herman</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>922062</th>\n      <td>Cain, Herman</td>\n      <td>STOLTENBERG, WAYNE</td>\n      <td>TX</td>\n      <td>CINCO RESOURCES</td>\n      <td>CFO</td>\n      <td>5200.0</td>\n      <td>2011-01-01</td>\n      <td>Cain, Herman</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>923362</th>\n      <td>Cain, Herman</td>\n      <td>MAREK, JOHN</td>\n      <td>WI</td>\n      <td>INFORMATION REQUESTED</td>\n      <td>INFORMATION REQUESTED</td>\n      <td>2400.0</td>\n      <td>2011-01-01</td>\n      <td>Cain, Herman</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>922064</th>\n      <td>Cain, Herman</td>\n      <td>DAVIS, JEREMY S MR.</td>\n      <td>TX</td>\n      <td>INTL PETROLEUM ASSOC OF AMERICA</td>\n      <td>INVESTOR</td>\n      <td>2400.0</td>\n      <td>2011-01-03</td>\n      <td>Cain, Herman</td>\n      <td>Republican</td>\n    </tr>\n    <tr>\n      <th>923363</th>\n      <td>Cain, Herman</td>\n      <td>SIDNEY, SCOTT</td>\n      <td>WI</td>\n      <td>SELF EMPLOYED</td>\n      <td>CONTRACTOR</td>\n      <td>2400.0</td>\n      <td>2011-01-03</td>\n      <td>Cain, Herman</td>\n      <td>Republican</td>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n\n\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">group_df &#x3D; contb_part.groupby(by&#x3D;[&#39;contb_receipt_dt&#39;,&#39;party&#39;])[&#39;contb_receipt_amt&#39;].sum()</code></pre>\n\n<p>【知识点】使用unstack()将上面所得数据中的party从一级索引变成列索引,unstack(‘party’)</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">piovt_table &#x3D; group_df.unstack()\npiovt_table.fillna(value&#x3D;0.0, inplace&#x3D;True)</code></pre>\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">piovt_table.plot(kind&#x3D;&#39;line&#39;)</code></pre>\n\n\n\n\n<pre><code>&lt;Axes: xlabel=&#39;contb_receipt_dt&#39;&gt;\n</code></pre>\n<p><img src=\"/./assets/image-20230914213851070.png\" alt=\"image-20230914213851070\"></p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">piovt_table</code></pre>\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>party</th>\n      <th>Democrat</th>\n      <th>Libertarian</th>\n      <th>Reform</th>\n      <th>Republican</th>\n    </tr>\n    <tr>\n      <th>contb_receipt_dt</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>2011-01-01</th>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>8600.00</td>\n    </tr>\n    <tr>\n      <th>2011-01-03</th>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>4800.00</td>\n    </tr>\n    <tr>\n      <th>2011-01-04</th>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>5000.00</td>\n    </tr>\n    <tr>\n      <th>2011-01-12</th>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>4150.00</td>\n    </tr>\n    <tr>\n      <th>2011-01-13</th>\n      <td>0.00</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>4000.00</td>\n    </tr>\n    <tr>\n      <th>...</th>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n      <td>...</td>\n    </tr>\n    <tr>\n      <th>2012-04-26</th>\n      <td>537115.38</td>\n      <td>1805.0</td>\n      <td>25.0</td>\n      <td>505311.33</td>\n    </tr>\n    <tr>\n      <th>2012-04-27</th>\n      <td>745269.95</td>\n      <td>350.0</td>\n      <td>560.0</td>\n      <td>593983.56</td>\n    </tr>\n    <tr>\n      <th>2012-04-28</th>\n      <td>479677.34</td>\n      <td>0.0</td>\n      <td>110.0</td>\n      <td>80759.16</td>\n    </tr>\n    <tr>\n      <th>2012-04-29</th>\n      <td>349744.69</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>61421.02</td>\n    </tr>\n    <tr>\n      <th>2012-04-30</th>\n      <td>3499159.38</td>\n      <td>0.0</td>\n      <td>35.0</td>\n      <td>787702.81</td>\n    </tr>\n  </tbody>\n</table>\n<p>466 rows × 4 columns</p>\n\n</div>\n\n\n\n<p>使用上面获取的数据<br>画出各党派累计政治献金,cumsum()累加函数</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">piovt_table.cumsum().plot(kind&#x3D;&#39;line&#39;)</code></pre>\n\n\n\n\n<pre><code>&lt;Axes: xlabel=&#39;contb_receipt_dt&#39;&gt;\n</code></pre>\n<p><img src=\"/./assets/image-20230914213933217.png\" alt=\"image-20230914213933217\"></p>\n<p>把时间作为列，党派作为行来观察,unstack(‘contb_receipt’)</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">piovt_table.T</code></pre>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th>contb_receipt_dt</th>\n      <th>2011-01-01</th>\n      <th>2011-01-03</th>\n      <th>2011-01-04</th>\n      <th>2011-01-12</th>\n      <th>2011-01-13</th>\n      <th>2011-01-14</th>\n      <th>2011-01-15</th>\n      <th>2011-01-16</th>\n      <th>2011-01-17</th>\n      <th>2011-01-18</th>\n      <th>...</th>\n      <th>2012-04-21</th>\n      <th>2012-04-22</th>\n      <th>2012-04-23</th>\n      <th>2012-04-24</th>\n      <th>2012-04-25</th>\n      <th>2012-04-26</th>\n      <th>2012-04-27</th>\n      <th>2012-04-28</th>\n      <th>2012-04-29</th>\n      <th>2012-04-30</th>\n    </tr>\n    <tr>\n      <th>party</th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n      <th></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>Democrat</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>324834.43</td>\n      <td>210774.49</td>\n      <td>771284.52</td>\n      <td>887405.45</td>\n      <td>697150.70</td>\n      <td>537115.38</td>\n      <td>745269.95</td>\n      <td>479677.34</td>\n      <td>349744.69</td>\n      <td>3499159.38</td>\n    </tr>\n    <tr>\n      <th>Libertarian</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.00</td>\n      <td>5785.00</td>\n      <td>1000.00</td>\n      <td>500.00</td>\n      <td>2745.12</td>\n      <td>1805.00</td>\n      <td>350.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n      <td>0.00</td>\n    </tr>\n    <tr>\n      <th>Reform</th>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>0.0</td>\n      <td>...</td>\n      <td>0.00</td>\n      <td>100.00</td>\n      <td>510.00</td>\n      <td>25.00</td>\n      <td>100.00</td>\n      <td>25.00</td>\n      <td>560.00</td>\n      <td>110.00</td>\n      <td>0.00</td>\n      <td>35.00</td>\n    </tr>\n    <tr>\n      <th>Republican</th>\n      <td>8600.0</td>\n      <td>4800.0</td>\n      <td>5000.0</td>\n      <td>4150.0</td>\n      <td>4000.0</td>\n      <td>6000.0</td>\n      <td>500.0</td>\n      <td>750.0</td>\n      <td>500.0</td>\n      <td>4800.0</td>\n      <td>...</td>\n      <td>81083.38</td>\n      <td>71269.44</td>\n      <td>742814.09</td>\n      <td>819865.08</td>\n      <td>482124.68</td>\n      <td>505311.33</td>\n      <td>593983.56</td>\n      <td>80759.16</td>\n      <td>61421.02</td>\n      <td>787702.81</td>\n    </tr>\n  </tbody>\n</table>\n<p>4 rows × 466 columns</p>\n\n</div>\n\n\n\n<p>使用stack()把party变成二级行索引,注意所有的值都不能为nan，需要填充为0</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">piovt_table.stack()</code></pre>\n\n\n\n\n<pre><code>contb_receipt_dt  party      \n2011-01-01        Democrat             0.00\n                  Libertarian          0.00\n                  Reform               0.00\n                  Republican        8600.00\n2011-01-03        Democrat             0.00\n                                    ...    \n2012-04-29        Republican       61421.02\n2012-04-30        Democrat       3499159.38\n                  Libertarian          0.00\n                  Reform              35.00\n                  Republican      787702.81\nLength: 1864, dtype: float64\n</code></pre>\n<p>查看候选人姓名cand_nm和政治献金捐献者职业contbr_occupation，以及捐献情况。能看出各个候选人主要的支持者分布情况<br>练习：groupy，sum()求和</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part.groupby(by&#x3D;[&#39;cand_nm&#39;,&#39;contbr_occupation&#39;])[&#39;contb_receipt_amt&#39;].sum()</code></pre>\n\n\n\n\n<pre><code>cand_nm             contbr_occupation             \nBachmann, Michelle  --                                  75.00\n                    100% DISABLED VETERAN             1869.50\n                    100% DISABLED VIETNAM VETERAN      236.25\n                    A/C AND HEAT                       250.00\n                    ACADEMIC EMPLOYMENT SPECIALIST      25.00\n                                                       ...   \nSantorum, Rick      WRITER/PROFESSOR                   910.00\n                    X-RAY TECHNICIAN                  2500.00\n                    XRAY TECH                          380.00\n                    YOUTH MINISTER                     475.00\n                    YOUTH MINISTRY                     250.00\nName: contb_receipt_amt, Length: 59313, dtype: float64\n</code></pre>\n<p>查看老兵主要支持谁：DISABLED VETERAN<br>考察Series索引</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">condtion &#x3D; contb_part.contbr_occupation &#x3D;&#x3D; &#39;DISABLED VETERAN&#39;\n\ngood_man &#x3D; contb_part.loc[condtion, &#39;cand_nm&#39;].value_counts()</code></pre>\n\n<p>把索引变成列,Series.reset_index()</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">good_man_df &#x3D; good_man.reset_index()\ngood_man_df.columns &#x3D; [&#39;cont_nm&#39;, &#39;cand_nm&#39;]\ngood_man_df</code></pre>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cont_nm</th>\n      <th>cand_nm</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>0</th>\n      <td>Obama, Barack</td>\n      <td>97</td>\n    </tr>\n    <tr>\n      <th>1</th>\n      <td>Paul, Ron</td>\n      <td>46</td>\n    </tr>\n    <tr>\n      <th>2</th>\n      <td>Santorum, Rick</td>\n      <td>6</td>\n    </tr>\n    <tr>\n      <th>3</th>\n      <td>Cain, Herman</td>\n      <td>3</td>\n    </tr>\n    <tr>\n      <th>4</th>\n      <td>Roemer, Charles E. 'Buddy' III</td>\n      <td>1</td>\n    </tr>\n    <tr>\n      <th>5</th>\n      <td>Gingrich, Newt</td>\n      <td>1</td>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n\n\n\n<p>找出各个候选人的捐赠者中，捐赠金额最大的人的职业以及捐献额  </p>\n<p>通过query(“查询条件来查找捐献人职业”)</p>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">max_amt &#x3D; contb_part.contb_receipt_amt.max()\n\ncondition &#x3D; contb_part.contb_receipt_amt &#x3D;&#x3D; max_amt</code></pre>\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">contb_part.loc[condition]</code></pre>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cand_nm</th>\n      <th>contbr_nm</th>\n      <th>contbr_st</th>\n      <th>contbr_employer</th>\n      <th>contbr_occupation</th>\n      <th>contb_receipt_amt</th>\n      <th>contb_receipt_dt</th>\n      <th>names</th>\n      <th>party</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>325136</th>\n      <td>Obama, Barack</td>\n      <td>OBAMA VICTORY FUND 2012 - UNITEMIZED</td>\n      <td>IL</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2014490.51</td>\n      <td>2012-02-29</td>\n      <td>Obama, Barack</td>\n      <td>Democrat</td>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n\n\n\n\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\">max_amt</code></pre>\n\n\n\n\n<pre><code>2014490.51\n</code></pre>\n<pre class=\"line-numbers language-python\" data-language=\"python\"><code class=\"language-python\"># 适用query 查询\ncontb_part.query(f&#39;contb_receipt_amt &#x3D;&#x3D; &#123;max_amt&#125;&#39;)\n# contb_part.query(&#39;contb_receipt_amt &#x3D;&#x3D; 2014490.51&#39;)</code></pre>\n\n\n\n\n<div>\n<style scoped>\n    .dataframe tbody tr th:only-of-type {\n        vertical-align: middle;\n    }\n\n\n<pre><code>.dataframe tbody tr th &#123;\n    vertical-align: top;\n&#125;\n\n.dataframe thead th &#123;\n    text-align: right;\n&#125;\n</code></pre>\n<p></style></p>\n<table border=\"1\" class=\"dataframe\">\n  <thead>\n    <tr style=\"text-align: right;\">\n      <th></th>\n      <th>cand_nm</th>\n      <th>contbr_nm</th>\n      <th>contbr_st</th>\n      <th>contbr_employer</th>\n      <th>contbr_occupation</th>\n      <th>contb_receipt_amt</th>\n      <th>contb_receipt_dt</th>\n      <th>names</th>\n      <th>party</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <th>325136</th>\n      <td>Obama, Barack</td>\n      <td>OBAMA VICTORY FUND 2012 - UNITEMIZED</td>\n      <td>IL</td>\n      <td>NaN</td>\n      <td>NaN</td>\n      <td>2014490.51</td>\n      <td>2012-02-29</td>\n      <td>Obama, Barack</td>\n      <td>Democrat</td>\n    </tr>\n  </tbody>\n</table>\n\n</div>\n\n","feature":true,"text":"美国2012年总统候选人政治献金数据分析导入包 import numpy as np import pandas as pd 方便大家操作，将月份和参选人以及所...","link":"","photos":[],"count_time":{"symbolsCount":"20k","symbolsTime":"19 mins."},"categories":[],"tags":[{"name":"pandas","slug":"pandas","count":3,"path":"api/tags/pandas.json"}],"toc":"<ol class=\"toc\"><li class=\"toc-item toc-level-1\"><a class=\"toc-link\" href=\"#%E7%BE%8E%E5%9B%BD2012%E5%B9%B4%E6%80%BB%E7%BB%9F%E5%80%99%E9%80%89%E4%BA%BA%E6%94%BF%E6%B2%BB%E7%8C%AE%E9%87%91%E6%95%B0%E6%8D%AE%E5%88%86%E6%9E%90\"><span class=\"toc-text\">美国2012年总统候选人政治献金数据分析</span></a><ol class=\"toc-child\"><li class=\"toc-item toc-level-2\"><a class=\"toc-link\" href=\"#%E6%9F%A5%E7%9C%8B%E5%85%9A%E6%B4%BE%E7%9A%84%E6%94%AF%E6%8C%81%E5%BA%A6%EF%BC%8C%E5%8F%AF%E4%BB%A5%E6%9F%A5%E7%9C%8B%E6%94%AF%E6%8C%81%E7%9A%84%E6%AC%A1%E6%95%B0%EF%BC%8C-%E5%8F%AF%E4%BB%A5%E6%9F%A5%E7%9C%8B%E6%94%AF%E6%8C%81%E7%9A%84%E9%92%B1%E6%95%B0\"><span class=\"toc-text\">查看党派的支持度，可以查看支持的次数， 可以查看支持的钱数</span></a></li></ol></li></ol>","author":{"name":"verfotta","slug":"blog-author","avatar":"/icons/favicon-32x32.png","link":"/","description":"您好","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"mapped":true,"hidden":false,"prev_post":{"title":"powerbi虎牙陪玩项目","uid":"8bd5adbed0679b53813cfc50dc027ae7","slug":"PBproject","date":"2023-09-09T04:17:53.000Z","updated":"2023-09-14T13:03:35.800Z","comments":true,"path":"api/articles/PBproject.json","keywords":null,"cover":[],"text":"陪玩报告分析：分析工具Excel+PowerBI +Python（pandas&#x2F;seaborn） 关键指标：根据业务发现关键指标订单量。 对订单量进行...","link":"","photos":[],"count_time":{"symbolsCount":934,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"powerbi","slug":"powerbi","count":1,"path":"api/tags/powerbi.json"}],"author":{"name":"verfotta","slug":"blog-author","avatar":"/icons/favicon-32x32.png","link":"/","description":"您好","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true},"next_post":{"title":"荣誉证书","uid":"387d709d3dc4267a87491248751c16da","slug":"Honor","date":"2023-09-09T04:17:53.000Z","updated":"2023-09-14T13:03:49.661Z","comments":true,"path":"api/articles/Honor.json","keywords":null,"cover":[],"text":"个人简介荣誉证书1. 中国大学生计算机设计大赛国家二等奖 2. 第三届全国大学生大数据技能竞赛三等奖 3.大学生创新创业项目省级奖项 ","link":"","photos":[],"count_time":{"symbolsCount":67,"symbolsTime":"1 mins."},"categories":[],"tags":[{"name":"荣誉证书","slug":"荣誉证书","count":1,"path":"api/tags/荣誉证书.json"}],"author":{"name":"verfotta","slug":"blog-author","avatar":"/icons/favicon-32x32.png","link":"/","description":"您好","socials":{"github":"","twitter":"","stackoverflow":"","wechat":"","qq":"","weibo":"","zhihu":"","csdn":"","juejin":"","customs":{}}},"feature":true}}